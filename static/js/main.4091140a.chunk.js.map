{"version":3,"sources":["UserContext.js","views/Components/Auth/Login.js","views/Components/Auth/Register.js","views/Components/Auth/InitAuth.js","views/Components/Nav.js","views/Components/Data/EditActivity.js","views/Components/Data/ActivityTotal.js","views/Components/Data/ActivityTable.js","views/Components/Data/AddActivity.js","views/Components/Data/EditCategory.js","views/Dashboard.js","views/LandingPage.js","App.js","theme.js","index.js"],"names":["UserContext","createContext","open","onClose","setUser","useContext","useState","email","setEmail","password","setPassword","handleLogin","useCallback","axios","post","process","then","response","localStorage","setItem","data","token","auth","catch","error","alert","useEffect","enterPressListener","e","code","document","addEventListener","removeEventListener","Dialog","DialogTitle","IconButton","onClick","style","position","top","right","DialogContent","TextField","autoFocus","label","type","fullWidth","value","onChange","event","target","DialogActions","Button","color","confirmPassword","setConfirmPassword","handleRegister","user","getItem","get","headers","Authorization","useStyles","makeStyles","theme","root","flexGrow","marginBottom","spacing","showLogin","setShowLogin","showRegister","setShowRegister","classes","renderButtons","component","NavLink","to","key","removeItem","window","location","reload","InitAuth","AppBar","className","Toolbar","Grid","container","justify","alignItems","item","xs","fontSize","textAlign","Login","Register","deleteButton","categoriesList","getActivities","name","setName","amount","setAmount","moment","date","format","setDate","category_id","categoryId","setCategoryId","setType","handleSubmit","put","id","updateData","InputLabelProps","shrink","select","map","c","MenuItem","delete","positive","palette","main","negative","total","forEach","d","parseFloat","Typography","variant","display","toFixed","table","maxWidth","tableHeader","backgroundColor","primary","common","white","income","expense","activitiesList","loading","setData","page","setPage","rowsPerPage","setRowsPerPage","categoryFilter","setCategoryFilter","showEditActivity","setShowEditActivity","editRow","setEditRow","filteredData","filter","a","category_name","rows","row","TableRow","TableCell","align","charAt","toUpperCase","slice","Tooltip","title","emptyRows","Math","min","length","Paper","TableContainer","Table","TableHead","colSpan","ActivityTotal","padding","TableBody","CircularProgress","size","height","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","EditActivity","setShowEditCategory","Box","width","getCategories","setLoading","setActivitiesList","setCategoriesList","showAddActivity","setShowAddActivity","showEditCategory","Nav","ActivityTable","ButtonGroup","AddActivity","EditCategory","Provider","exact","path","LandingPage","render","Dashboard","createMuiTheme","contrastText","secondary","background","default","typography","fontFamily","join","ReactDOM","ThemeProvider","App","getElementById"],"mappings":"wSAEaA,EAAcC,wBAAc,M,8DCI1B,cAAwB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAEZC,EAAYC,qBAAWL,GAAvBI,QAF0B,EAGRE,mBAAS,IAHD,mBAG3BC,EAH2B,KAGpBC,EAHoB,OAIFF,mBAAS,IAJP,mBAI3BG,EAJ2B,KAIjBC,EAJiB,KAM5BC,EAAcC,uBAAY,WAC5BC,IAAMC,KAAKC,gEAAkD,CACzDR,MAAOA,EACPE,SAAUA,IAETO,MAAK,SAACC,GACHd,IACAe,aAAaC,QAAQ,QAASF,EAASG,KAAKC,OAC5CjB,EAAQa,EAASG,KAAKE,SAEzBC,OAAM,SAACC,GACJC,MAAMD,QAEhB,CAACjB,EAAOE,EAAUN,EAASC,IAe7B,OAZAsB,qBAAU,WACN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2B3B,GACpDS,KAIR,OADAmB,SAASC,iBAAiB,UAAWJ,GAC9B,WACHG,SAASE,oBAAoB,UAAWL,MAE7C,CAACzB,EAAMS,IAGN,kBAACsB,EAAA,EAAD,CAAQ/B,KAAMA,IAAc,EAAOC,QAASA,GACxC,kBAAC+B,EAAA,EAAD,aAEI,kBAACC,EAAA,EAAD,CAAYC,QAASjC,EAASkC,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACxE,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,QAAQC,KAAK,QAAQC,WAAS,EAACC,MAAOxC,EAAOyC,SAAU,SAACC,GAAYzC,EAASyC,EAAMC,OAAOH,UACrH,kBAACL,EAAA,EAAD,CAAWE,MAAM,WAAWC,KAAK,WAAWC,WAAS,EAACC,MAAOtC,EAAUuC,SAAU,SAACC,GAAYvC,EAAYuC,EAAMC,OAAOH,UACvH,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAASzB,EAAa0C,MAAM,WAApC,aC/CL,cAAwB,IAArBnD,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EAERG,mBAAS,IAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGFF,mBAAS,IAHP,mBAG3BG,EAH2B,KAGjBC,EAHiB,OAIYJ,mBAAS,IAJrB,mBAI3BgD,EAJ2B,KAIVC,EAJU,KAM5BC,EAAiB5C,uBAAY,WAC3BH,IAAa6C,EACbzC,IAAMC,KAAKC,mEAAqD,CAC5DR,MAAOA,EACPE,SAAUA,IAETO,MAAK,SAACC,GACHd,IACAK,EAAS,IACTE,EAAY,IACZ6C,EAAmB,OAI3B9B,MAAM,6BAEX,CAAClB,EAAOE,EAAU6C,EAAiBnD,IAetC,OAZAuB,qBAAU,WACN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2B3B,GACpDsD,KAIR,OADA1B,SAASC,iBAAiB,UAAWJ,GAC9B,WACHG,SAASE,oBAAoB,UAAWL,MAE7C,CAACzB,EAAMsD,IAGN,kBAACvB,EAAA,EAAD,CAAQ/B,KAAMA,IAAc,EAAOC,QAASA,GACxC,kBAAC+B,EAAA,EAAD,gBAEI,kBAACC,EAAA,EAAD,CAAYC,QAASjC,EAASkC,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACxE,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,QAAQC,KAAK,QAAQC,WAAS,EAACC,MAAOxC,EAAOyC,SAAU,SAACC,GAAYzC,EAASyC,EAAMC,OAAOH,UACrH,kBAACL,EAAA,EAAD,CAAWE,MAAM,WAAWC,KAAK,WAAWC,WAAS,EAACC,MAAOtC,EAAUuC,SAAU,SAACC,GAAYvC,EAAYuC,EAAMC,OAAOH,UACvH,kBAACL,EAAA,EAAD,CAAWE,MAAM,WAAWC,KAAK,WAAWC,WAAS,EAACC,MAAOO,EAAiBN,SAAU,SAACC,GAAYM,EAAmBN,EAAMC,OAAOH,UACrI,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAASoB,EAAgBH,MAAM,WAAvC,gBClDL,aAAO,IAAD,EACOhD,qBAAWL,GAA5ByD,EADU,EACVA,KAAMrD,EADI,EACJA,QAab,OAXAsB,qBAAW,WACP,IAAML,EAAQH,aAAawC,QAAQ,UAC/BD,GAAQpC,GACRR,IAAM8C,IAAI5C,mEAAqD,CAC3D6C,QAAS,CAAEC,cAAc,OAAD,OAASxC,MAClCL,MAAK,SAAAC,GACJb,EAAQa,EAASG,KAAKE,WAG/B,CAACmC,EAAMrD,IAGN,sC,iBCVF0D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,EACVC,aAAcH,EAAMI,QAAQ,QAIrB,aAAO,IAAD,EAES/D,qBAAWL,GAA7ByD,EAFS,EAETA,KAAMrD,EAFG,EAEHA,QAFG,EAGiBE,oBAAS,GAH1B,mBAGV+D,EAHU,KAGCC,EAHD,OAIuBhE,oBAAS,GAJhC,mBAIViE,EAJU,KAIIC,EAJJ,KAMXC,EAAUX,IAQVY,EAAiBjB,EAMnB,CACI,kBAACL,EAAA,EAAD,CAAQC,MAAM,UAAUsB,UAAWC,IAASC,GAAG,aAAaC,IAAK,aAAjE,aACA,kBAAC1B,EAAA,EAAD,CAAQC,MAAM,UAAUjB,QAdX,WACjBhC,EAAQ,MACRc,aAAa6D,WAAW,SACxBC,OAAOC,SAASC,UAWmCJ,IAAK,UAApD,WAPJ,CACI,kBAAC1B,EAAA,EAAD,CAAQC,MAAM,UAAUjB,QAAS,WAAQkC,GAAa,IAASQ,IAAK,SAApE,SACA,kBAAC1B,EAAA,EAAD,CAAQC,MAAM,UAAUjB,QAAS,WAAQoC,GAAgB,IAASM,IAAK,YAAvE,aAQR,OACI,oCACI,kBAACK,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQ9C,SAAS,SAAS+C,UAAWZ,EAAQR,MACzC,kBAACqB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACpB,QAAS,EAAGqB,QAAQ,gBAAgBC,WAAW,UAC3D,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACzD,EAAA,EAAD,CAAYC,QAAS,kBAAM4C,OAAO9E,KAAK,2CAA4C,YAC/E,kBAAC,IAAD,CAAY2F,SAAS,QAAQxC,MAAM,gBAG3C,kBAACkC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGvD,MAAO,CAAEyD,UAAW,UACjCpB,MAKjB,kBAACqB,EAAD,CAAO7F,KAAMmE,EAAWlE,QAAS,kBAAMmE,GAAa,MACpD,kBAAC0B,EAAD,CAAU9F,KAAMqE,EAAcpE,QAAS,kBAAMqE,GAAgB,Q,8ICrDnEV,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCiC,aAAc,CACV5C,MAAO,WAIA,cAA6D,IAA1DnD,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASiB,EAA0C,EAA1CA,KAAM8E,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cAAoB,EAC/C7F,mBAASc,EAAKgF,MADiC,mBAChEA,EADgE,KAC1DC,EAD0D,OAE3C/F,mBAASc,EAAKkF,QAF6B,mBAEhEA,EAFgE,KAExDC,EAFwD,OAG/CjG,mBAASkG,IAAOpF,EAAKqF,MAAMC,OAAO,eAHa,mBAGhED,EAHgE,KAG1DE,EAH0D,OAInCrG,mBAASc,EAAKwF,aAJqB,mBAIhEC,EAJgE,KAIpDC,EAJoD,OAK/CxG,mBAASc,EAAKyB,MALiC,mBAKhEA,EALgE,KAK1DkE,EAL0D,KAOjE1F,EAAQH,aAAawC,QAAQ,SAC7BsD,EAAepG,uBAAY,WAC7BC,IAAMoG,IAAIlG,6EAA+D,CACrEmG,GAAI9F,EAAK8F,GACTC,WAAY,CACRf,KAAMA,EACNE,OAAQA,EACRG,KAAMA,EACNG,YAAaC,EACbhE,KAAMA,IAEX,CACCe,QAAS,CACLC,cAAc,OAAD,OAASxC,MAGzBL,MAAK,WACFmF,IACAhG,SAET,CAACgG,EAAeC,EAAME,EAAQG,EAAMI,EAAYhE,EAAMxB,EAAOD,EAAK8F,GAAI/G,IAiBzEuB,qBAAU,WAEN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2B3B,GACpD8G,KAKR,OAFAlF,SAASC,iBAAiB,UAAWJ,GAE9B,WACHG,SAASE,oBAAoB,UAAWL,MAG7C,CAACqF,EAAc9G,IAElB,IAAMuE,EAAUX,IAChB,OACI,kBAAC7B,EAAA,EAAD,CAAQ/B,KAAMA,IAAc,EAAOC,QAASA,EAAS2C,WAAS,GAC1D,kBAACZ,EAAA,EAAD,uBAEI,kBAACC,EAAA,EAAD,CAAYC,QAASjC,EAASkC,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACxE,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAOqD,EAAMpD,SAAU,SAACC,GAAYoD,EAAQpD,EAAMC,OAAOH,UACjH,kBAACL,EAAA,EAAD,CAAWE,MAAM,SAASC,KAAK,SAASC,WAAS,EAACC,MAAOuD,EAAQtD,SAAU,SAACC,GAAYsD,EAAUtD,EAAMC,OAAOH,UAC/G,kBAACL,EAAA,EAAD,CAAWE,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAO0D,EAAMW,gBAAiB,CAAEC,QAAQ,GAAQrE,SAAU,SAAAC,GAAK,OAAI0D,EAAQ1D,EAAMC,OAAOH,UACtI,kBAACL,EAAA,EAAD,CAAWE,MAAM,WAAWC,KAAK,SAASC,WAAS,EAACC,MAAO8D,EAAYS,QAAM,EAACtE,SAAU,SAAAC,GAAK,OAAI6D,EAAc7D,EAAMC,OAAOH,SACvHmD,EAAeqB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAU1E,MAAOyE,EAAEN,GAAIpC,IAAK0C,EAAEN,IAAKM,EAAEpB,UAElE,kBAAC1D,EAAA,EAAD,CAAWE,MAAM,OAAOE,WAAS,EAACC,MAAOF,EAAMyE,QAAM,EAACtE,SAAU,SAAAC,GAAK,OAAI8D,EAAQ9D,EAAMC,OAAOH,SAC1F,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,WAAjB,WACA,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,UAAjB,WAEJ,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAnDH,WACjBvB,IAAM6G,OAAO3G,6EAA+D,CACxEK,KAAM,CACF8F,GAAI9F,EAAK8F,IAEbtD,QAAS,CACLC,cAAc,OAAD,OAASxC,MAGzBL,MAAK,WACFmF,IACAhG,QAwCmCkF,UAAWZ,EAAQwB,cAAlD,UACA,kBAAC7C,EAAA,EAAD,CAAQhB,QAAS4E,EAAc3D,MAAM,WAArC,cC1FdS,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC2D,SAAU,CACNtE,MAAOW,EAAM4D,QAAQD,SAASE,MAElCC,SAAU,CACNzE,MAAOW,EAAM4D,QAAQE,SAASD,UAIvB,cAAe,IAAZzG,EAAW,EAAXA,KACV2G,EAAQ,EACZ3G,EAAK4G,SAAQ,SAAAC,GACE,WAAXA,EAAEpF,KAAoBkF,GAASG,WAAWD,EAAE3B,QAAUyB,GAASG,WAAWD,EAAE3B,WAGhF,IAAM7B,EAAUX,IAChB,OACI,oCACI,kBAACqE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAQ,UAAjC,yBAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAQ,SAAShD,UAAW0C,GAAS,EAAItD,EAAQkD,SAAWlD,EAAQqD,UAA7F,IACMC,EAAMO,QAAQ,MCf1BxE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCuE,MAAO,CACHC,SAAU,KAEdC,YAAa,CACTC,gBAAiB1E,EAAM4D,QAAQe,QAAQd,KACvCxE,MAAOW,EAAM4D,QAAQgB,OAAOC,OAEhCC,OAAQ,CACJzF,MAAOW,EAAM4D,QAAQD,SAASE,MAElCkB,QAAS,CACL1F,MAAOW,EAAM4D,QAAQE,SAASD,UAIvB,eAAiE,IAA9DmB,EAA6D,EAA7DA,eAAgB9C,EAA6C,EAA7CA,eAAgBC,EAA6B,EAA7BA,cAAe8C,EAAc,EAAdA,QAAc,EACnD3I,mBAAS,IAD0C,mBACpEc,EADoE,KAC9D8H,EAD8D,OAEnD5I,mBAAS,GAF0C,mBAEpE6I,EAFoE,KAE9DC,EAF8D,OAGrC9I,mBAAS,GAH4B,mBAGpE+I,EAHoE,KAGvDC,EAHuD,OAI/BhJ,mBAAS,QAJsB,mBAIpEiJ,EAJoE,KAIpDC,EAJoD,OAK3BlJ,oBAAS,GALkB,mBAKpEmJ,EALoE,KAKlDC,EALkD,OAM7CpJ,qBAN6C,mBAMpEqJ,EANoE,KAM3DC,EAN2D,KAQ3ElI,qBAAU,WACN,IAAMmI,EAAeb,EAAec,QAAO,SAAAC,GAAC,OAAIA,EAAEC,gBAAkBT,KAEhEL,EADmB,SAAnBK,EACQP,EAGAa,KAEb,CAACb,EAAgB9C,EAAgBqD,IAEpC,IAUM9E,EAAUX,IACVmG,EAAO7I,EAAKmG,KAAI,SAAA2C,GAAG,OACrB,kBAACC,EAAA,EAAD,CAAUrF,IAAKoF,EAAIhD,IACf,kBAACkD,EAAA,EAAD,KAAYF,EAAI9D,MAChB,kBAACgE,EAAA,EAAD,CAAWC,MAAM,SAAS7D,IAAO0D,EAAIzD,MAAMC,OAAO,iBAClD,kBAAC0D,EAAA,EAAD,CAAWC,MAAM,SAASH,EAAI5D,QAC9B,kBAAC8D,EAAA,EAAD,CAAWC,MAAM,SAASH,EAAIF,eAC9B,kBAACI,EAAA,EAAD,CAAWC,MAAM,QAAQhF,UAAwB,WAAb6E,EAAIrH,KAAoB4B,EAAQqE,OAASrE,EAAQsE,SAChFmB,EAAIrH,KAAKyH,OAAO,GAAGC,cAAgBL,EAAIrH,KAAK2H,MAAM,IAEvD,kBAACJ,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CAASC,MAAM,QACX,kBAACvI,EAAA,EAAD,CAAYC,QAAS,WACjBsH,GAAoB,GACpBE,EAAWM,KAEX,kBAAC,IAAD,aAOdS,EAAYtB,EAAcuB,KAAKC,IAAIxB,EAAaY,EAAKa,OAAS3B,EAAOE,GAE3E,OACI,oCACI,kBAAC0B,EAAA,EAAD,CAAO1F,UAAWZ,EAAQ8D,OACtB,kBAACyC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACf,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWe,QAAS,GAChB,kBAACC,EAAD,CAAehK,KAAMA,KAEzB,kBAACgJ,EAAA,EAAD,CAAWe,QAAS,EAAGd,MAAM,SACzB,kBAAC3H,EAAA,EAAD,CAAWE,MAAM,kBAAkBC,KAAK,OAAOC,WAAS,EAACC,MAAOwG,EAAgBjC,QAAM,EAACtE,SAAU,SAAApB,GAAC,OAAI4H,EAAkB5H,EAAEsB,OAAOH,SAC7H,kBAAC0E,EAAA,EAAD,CAAU1E,MAAM,OAAO+B,IAAI,QAA3B,QACCoB,EAAeqB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAU1E,MAAOyE,EAAEpB,KAAMtB,IAAK0C,EAAEpB,MAAOoB,EAAEpB,YAK9E,kBAAC+D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW/E,UAAWZ,EAAQgE,aAA9B,QACA,kBAAC2B,EAAA,EAAD,CAAW/E,UAAWZ,EAAQgE,YAAa4B,MAAM,SAAjD,QACA,kBAACD,EAAA,EAAD,CAAW/E,UAAWZ,EAAQgE,YAAa4B,MAAM,SAAjD,UACA,kBAACD,EAAA,EAAD,CAAW/E,UAAWZ,EAAQgE,YAAa4B,MAAM,SAAjD,YACA,kBAACD,EAAA,EAAD,CAAW/E,UAAWZ,EAAQgE,YAAa4B,MAAM,SAAjD,QACA,kBAACD,EAAA,EAAD,CAAW/E,UAAWZ,EAAQgE,YAAa4C,QAAQ,eAG3D,kBAACC,EAAA,EAAD,KAEQrC,EACI,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWe,QAAS,EAAGd,MAAM,UACzB,kBAACkB,EAAA,EAAD,CAAkBC,KAAM,IAAKnI,MAAM,cAI3C4G,EAAKO,MAAMrB,EAAOE,EAAaF,EAAOE,EAAcA,GAGxC,IAAhBY,EAAKa,OACD,kBAACX,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWe,QAAS,EAAGd,MAAM,UACzB,kBAAClC,EAAA,EAAD,8BAIRwC,EAAY,GACR,kBAACR,EAAA,EAAD,CAAUrF,IAAK,aAAczC,MAAO,CAAEoJ,OAAS,GAAMd,IACjD,kBAACP,EAAA,EAAD,CAAWe,QAAS,QAOhD,kBAACO,EAAA,EAAD,CACIC,mBAAoB,CAAC,EAAG,GAAI,IAC5BhH,UAAU,MACViH,MAAOxK,EAAK0J,OACZzB,YAAaA,EACbF,KAAMA,EACN0C,aAhGS,SAAC5I,EAAO6I,GAC7B1C,EAAQ0C,IAgGIC,oBA7FgB,SAAC9I,GAC7BqG,EAAe0C,SAAS/I,EAAMC,OAAOH,MAAO,KAC5CqG,EAAQ,OAgGAO,GAAWF,EACP,kBAACwC,EAAD,CACI/F,eAAgBA,EAChBC,cAAeA,EACf/E,KAAMuI,EACNzJ,KAAMuJ,EACNtJ,QAAS,WACLuJ,GAAoB,GACpBE,EAAW,OAInB,uC,oBC1JL,eAA4E,IAAzE1J,EAAwE,EAAxEA,KAAMC,EAAkE,EAAlEA,QAAS+F,EAAyD,EAAzDA,eAAgBC,EAAyC,EAAzCA,cAAe+F,EAA0B,EAA1BA,oBAA0B,EAE9D5L,mBAAS,IAFqD,mBAE/E8F,EAF+E,KAEzEC,EAFyE,OAG1D/F,mBAAS,GAHiD,mBAG/EgG,EAH+E,KAGvEC,EAHuE,OAI9DjG,mBAAS,IAJqD,mBAI/EmG,EAJ+E,KAIzEE,EAJyE,OAKlDrG,mBAAS,IALyC,mBAK/EuG,EAL+E,KAKnEC,EALmE,OAM9DxG,mBAAS,IANqD,mBAM/EuC,EAN+E,KAMzEkE,EANyE,KAShFC,EAAepG,uBAAY,WAC7B,IAAMS,EAAQH,aAAawC,QAAQ,SACnC7C,IAAMC,KAAKC,0EAA4D,CACnEqF,KAAMA,EACNE,OAAQA,EACRG,KAAMA,EACNG,YAAaC,EACbhE,KAAMA,GACP,CACCe,QAAS,CACLC,cAAc,OAAD,OAASxC,MAGzBL,MAAK,SAACC,GACHkF,IACAhG,SAET,CAACgG,EAAehG,EAASmG,EAAQO,EAAYJ,EAAML,EAAMvD,IAgB5D,OAdAnB,qBAAU,WAEN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2B3B,GACpD8G,KAKR,OAFAlF,SAASC,iBAAiB,UAAWJ,GAE9B,WACHG,SAASE,oBAAoB,UAAWL,MAE7C,CAACzB,EAAM8G,IAGN,kBAAC/E,EAAA,EAAD,CAAQ/B,KAAMA,IAAc,EAAOC,QAASA,GACxC,kBAAC+B,EAAA,EAAD,oBAEI,kBAACC,EAAA,EAAD,CAAYC,QAASjC,EAASkC,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACxE,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAOqD,EAAMpD,SAAU,SAACC,GAAYoD,EAAQpD,EAAMC,OAAOH,UACjH,kBAACL,EAAA,EAAD,CAAWE,MAAM,SAASC,KAAK,SAASC,WAAS,EAACC,MAAOuD,EAAQtD,SAAU,SAACC,GAAYsD,EAAUtD,EAAMC,OAAOH,UAC/G,kBAACL,EAAA,EAAD,CAAWE,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAO0D,EAAMW,gBAAiB,CAAEC,QAAQ,GAAQrE,SAAU,SAAAC,GAAK,OAAI0D,EAAQ1D,EAAMC,OAAOH,UACtI,kBAACoJ,GAAA,EAAD,CAAKC,MAAM,OAAO/J,MAAO,CAAEgG,QAAS,gBAChC,kBAAC3F,EAAA,EAAD,CAAWE,MAAM,WAAWE,WAAS,EAACC,MAAO8D,EAAYS,QAAM,EAACtE,SAAU,SAAAC,GAAK,OAAI6D,EAAc7D,EAAMC,OAAOH,SACzGmD,EAAeqB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAU1E,MAAOyE,EAAEN,GAAIpC,IAAK0C,EAAEN,IAAKM,EAAEpB,UAElE,kBAACjD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,MAAM,UACNjB,QAAS,WACLjC,IACA+L,GAAoB,KAJ5B,kBAWR,kBAACxJ,EAAA,EAAD,CAAWE,MAAM,OAAOE,WAAS,EAACC,MAAOF,EAAMyE,QAAM,EAACtE,SAAU,SAAAC,GAAK,OAAI8D,EAAQ9D,EAAMC,OAAOH,SAC1F,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,WAAjB,WACA,kBAAC0E,EAAA,EAAD,CAAU1E,MAAO,UAAjB,WAEJ,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAAS4E,EAAc3D,MAAM,WAArC,cC1EdS,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCiC,aAAc,CACV5C,MAAO,WAKA,eAAsE,IAAnEnD,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,QAAS+F,EAAmD,EAAnDA,eAAgBmG,EAAmC,EAAnCA,cAAelG,EAAoB,EAApBA,cAAoB,EACxD7F,mBAAS,IAD+C,mBACzE8F,EADyE,KACnEC,EADmE,OAE5C/F,mBAAS,IAFmC,mBAEzEuG,EAFyE,KAE7DC,EAF6D,KAI1EzF,EAAQH,aAAawC,QAAQ,SAC7BsD,EAAepG,uBAAY,WAC7BC,IAAMC,KAAKC,0EAA4D,CACnEqF,KAAMA,GACP,CACCxC,QAAS,CACLC,cAAc,OAAD,OAASxC,MAGzBL,MAAK,WACFqF,EAAQ,IACRgG,IACAlM,SAET,CAACiG,EAAMjG,EAASkB,EAAOgL,IAkB1B3K,qBAAU,WAEN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2B3B,GACpD8G,KAKR,OAFAlF,SAASC,iBAAiB,UAAWJ,GAE9B,WACHG,SAASE,oBAAoB,UAAWL,MAG7C,CAACzB,EAAM8G,IAGV,IAAMvC,EAAUX,KAChB,OACI,kBAAC7B,EAAA,EAAD,CAAQ/B,KAAMA,IAAc,EAAOC,QAASA,EAAS2C,WAAS,GAC1D,kBAACZ,EAAA,EAAD,uBAEI,kBAACC,EAAA,EAAD,CAAYC,QAASjC,EAASkC,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACxE,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,mBAAmBC,KAAK,OAAOC,WAAS,EAACC,MAAOqD,EAAMpD,SAAU,SAACC,GAAYoD,EAAQpD,EAAMC,OAAOH,UAC7H,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAAS4E,EAAc3D,MAAM,WAArC,QAGJ,kBAACX,EAAA,EAAD,CAAWE,MAAM,2BAA2BE,WAAS,EAACC,MAAO8D,EAAYS,QAAM,EAACtE,SAAU,SAAAC,GAAK,OAAI6D,EAAc7D,EAAMC,OAAOH,SACzHmD,EAAeqB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAU1E,MAAOyE,EAAEN,GAAIpC,IAAK0C,EAAEN,IAAKM,EAAEpB,UAElE,kBAACjD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAnDH,WACjBvB,IAAM6G,OAAO3G,6EAA+D,CACxEK,KAAM,CACF8F,GAAIL,GAERjD,QAAS,CACLC,cAAc,OAAD,OAASxC,MAGzBL,MAAK,WACFqL,IACAlG,IACAhG,QAuCmCkF,UAAWZ,EAAQwB,cAAlD,cC3EL,cAAO,IACVxC,EAASpD,qBAAWL,GAApByD,KADS,EAEanD,oBAAS,GAFtB,mBAEV2I,EAFU,KAEDqD,EAFC,OAG2BhM,mBAAS,IAHpC,mBAGV0I,EAHU,KAGMuD,EAHN,OAI2BjM,mBAAS,IAJpC,mBAIV4F,EAJU,KAIMsG,EAJN,OAK6BlM,oBAAS,GALtC,mBAKVmM,EALU,KAKOC,EALP,OAM+BpM,oBAAS,GANxC,mBAMVqM,EANU,KAMQT,EANR,KAQX/F,EAAgB,WAClBmG,GAAW,GACX,IAAMjL,EAAQH,aAAawC,QAAQ,SACnC7C,IAAM8C,IAAI5C,4EAA8D,CACpE6C,QAAS,CACLC,cAAc,OAAD,OAASxC,MAE3BL,MAAK,SAACC,GACLsL,EAAkBtL,EAASG,MAC3BkL,GAAW,OAIbD,EAAgB,WAClBC,GAAW,GACX,IAAMjL,EAAQH,aAAawC,QAAQ,SACnC7C,IAAM8C,IAAI5C,4EAA8D,CACpE6C,QAAS,CACLC,cAAc,OAAD,OAASxC,MAE3BL,MAAK,SAACC,GACLuL,EAAkBvL,EAASG,MAC3BkL,GAAW,OASnB,OALA5K,qBAAU,WACNyE,IACAkG,MACD,CAAC5I,IAECA,EAUD,oCACI,kBAACmJ,EAAD,MACA,kBAACT,GAAA,EAAD,CAAK9B,MAAM,UACP,kBAACwC,GAAD,CAAe7D,eAAgBA,EAAgB9C,eAAgBA,EAAgBC,cAAeA,EAAe8C,QAASA,KAE1H,6BACA,kBAACkD,GAAA,EAAD,CAAK9B,MAAM,UACP,kBAACyC,GAAA,EAAD,CAAa1E,QAAQ,YAAYoD,KAAK,QAAQnI,MAAM,WAChD,kBAACD,EAAA,EAAD,CAAQhB,QAAS,WAAQsK,GAAmB,IAAS5H,IAAK,eAA1D,gBACA,kBAAC1B,EAAA,EAAD,CAAQhB,QAAS,WAAQ8J,GAAoB,IAASpH,IAAK,gBAA3D,qBAGR,kBAACiI,GAAD,CAAa7G,eAAgBA,EAAgBhG,KAAMuM,EAAiBP,oBAAqBA,EAAqB/F,cAAeA,EAAehG,QAAS,kBAAMuM,GAAmB,MAC9K,kBAACM,GAAD,CAAc9G,eAAgBA,EAAgBhG,KAAMyM,EAAkBN,cAAeA,EAAelG,cAAeA,EAAehG,QAAS,kBAAM+L,GAAoB,OArBrK,oCACI,kBAACU,EAAD,MACA,kBAACzE,EAAA,EAAD,qDChDD,cACX,OACI,oCACI,kBAACyE,EAAD,MACA,kBAACzE,EAAA,EAAD,CAAYC,QAAQ,KAAKiC,MAAM,UAA/B,6BACA,kBAAClC,EAAA,EAAD,CAAYC,QAAQ,KAAKiC,MAAM,UAA/B,wCCHG,cAAO,IAAD,EAEK/J,mBAAS,MAFd,mBAEZmD,EAFY,KAENrD,EAFM,KAGnB,OACE,kBAACJ,EAAYiN,SAAb,CAAsBlK,MAAO,CAAEU,OAAMrD,YACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8M,OAAK,EAACC,KAAK,KACf1J,EAAO,kBAAC,IAAD,CAAUoB,GAAG,eAAiB,kBAACuI,GAAD,OAExC,kBAAC,IAAD,CAAOD,KAAK,QAAQE,OAAQ,kBAAM,kBAACD,GAAD,SAClC,kBAAC,IAAD,CAAOD,KAAK,aAAaE,OAAQ,kBAAM,kBAACC,GAAD,SAErC7J,EACE,kBAAC,IAAD,CAAO4J,OAAQ,kBAAM,kBAAC,IAAD,CAAUxI,GAAG,kBAClC,kBAAC,IAAD,CAAOwI,OAAQ,kBAAM,kBAAC,IAAD,CAAUxI,GAAG,Y,mBCkB/Bb,I,OAnCDuJ,aAAe,CACzB3F,QAAS,CACLe,QAAS,CACLd,KAAM,UACN2F,aAAc,WAElBC,UAAW,CACP5F,KAAM,WAEVF,SAAU,CACNE,KAAM,WAEVC,SAAU,CACND,KAAM,WAEV6F,WAAY,CACRC,QAAS,YAGjBC,WAAY,CACRC,WAAY,CACR,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACFC,KAAK,SC3BfC,IAASV,OACP,kBAAC,IAAD,KACI,kBAACW,GAAA,EAAD,CAAehK,MAAOA,IACpB,kBAACiK,GAAD,QAGNnM,SAASoM,eAAe,W","file":"static/js/main.4091140a.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nexport const UserContext = createContext(null)","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport axios from 'axios'\nimport { UserContext } from '../../../UserContext'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport default ({ open, onClose }) => {\n\n    const { setUser } = useContext(UserContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleLogin = useCallback(() => {\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/login', {\n            email: email,\n            password: password\n        })\n            .then((response) => {\n                onClose()\n                localStorage.setItem('token', response.data.token)\n                setUser(response.data.auth)\n            })\n            .catch((error) => {\n                alert(error)\n            })\n    },[email, password, onClose, setUser])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleLogin();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n    }, [open, handleLogin])\n\n    return (\n        <Dialog open={open ? open : false} onClose={onClose}>\n            <DialogTitle>\n                Login\n                <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                <DialogActions>\n                    <Button onClick={handleLogin} color='primary'>Login</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport default ({ open, onClose }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const handleRegister = useCallback(() => {\n        if (password === confirmPassword) {\n            axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/register', {\n                email: email,\n                password: password\n            })\n                .then((response) => {\n                    onClose()\n                    setEmail('')\n                    setPassword('')\n                    setConfirmPassword('')\n                })\n        }\n        else {\n            alert('Password does not match')\n        }\n    }, [email, password, confirmPassword, onClose])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleRegister();\n            }\n        }\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        }\n    }, [open, handleRegister])\n\n    return (\n        <Dialog open={open ? open : false} onClose={onClose}>\n            <DialogTitle>\n                Register\n                <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                <TextField label='Password' type='password' fullWidth value={confirmPassword} onChange={(event) => { setConfirmPassword(event.target.value) }} />\n                <DialogActions>\n                    <Button onClick={handleRegister} color='primary'>Register</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}","import React, { useEffect, useContext } from 'react'\nimport axios from 'axios'\nimport { UserContext } from '../../../UserContext'\n\n// check if token exists\nexport default () => {\n    const {user, setUser} = useContext(UserContext)\n\n    useEffect( () => {\n        const token = localStorage.getItem('token')\n        if(!user && token){\n            axios.get(process.env.REACT_APP_BACKEND_URL + 'auth/findUser', {\n                headers: { Authorization: `JWT ${token}` }\n            }).then(response => {\n                setUser(response.data.auth);\n            })\n        } \n    }, [user, setUser])\n\n    return(\n        <>\n        </>\n    )\n}","import React, { useState, useContext } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { AppBar, Toolbar, Button, IconButton, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Login from './Auth/Login'\nimport Register from './Auth/Register'\nimport { UserContext } from '../../UserContext'\nimport InitAuth from './Auth/InitAuth'\nimport GitHubIcon from '@material-ui/icons/GitHub'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginBottom: theme.spacing(5)\n    }\n}))\n\nexport default () => {\n\n    const { user, setUser } = useContext(UserContext)\n    const [showLogin, setShowLogin] = useState(false)\n    const [showRegister, setShowRegister] = useState(false)\n\n    const classes = useStyles()\n\n    const handleLogout = () => {\n        setUser(null);\n        localStorage.removeItem('token');\n        window.location.reload()\n    }\n\n    const renderButtons = !user ?\n        [\n            <Button color=\"inherit\" onClick={() => { setShowLogin(true) }} key={'login'}>Login</Button>,\n            <Button color=\"inherit\" onClick={() => { setShowRegister(true) }} key={'register'}>Register</Button>\n        ]\n        :\n        [\n            <Button color=\"inherit\" component={NavLink} to='/dashboard' key={'dashboard'}>Dashboard</Button>,\n            <Button color=\"inherit\" onClick={handleLogout} key={'logout'}>Logout</Button>\n        ]\n\n    return (\n        <>\n            <InitAuth />\n            <AppBar position='static' className={classes.root}>\n                <Toolbar>\n                    <Grid container spacing={1} justify='space-between' alignItems='center'>\n                        <Grid item xs={8}>\n                            <IconButton onClick={() => window.open('https://github.com/bmai53/budget-tracker', \"_blank\")}>\n                                <GitHubIcon fontSize='large' color='secondary'/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={4} style={{ textAlign: 'right' }}>\n                            {renderButtons}\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Login open={showLogin} onClose={() => setShowLogin(false)} />\n            <Register open={showRegister} onClose={() => setShowRegister(false)} />\n        </>\n    )\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { makeStyles } from '@material-ui/core/styles'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\nexport default ({ open, onClose, data, categoriesList, getActivities }) => {\n    const [name, setName] = useState(data.name)\n    const [amount, setAmount] = useState(data.amount)\n    const [date, setDate] = useState(moment(data.date).format('YYYY-MM-DD'))\n    const [categoryId, setCategoryId] = useState(data.category_id)\n    const [type, setType] = useState(data.type)\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.put(process.env.REACT_APP_BACKEND_URL + 'activity/updateActivity', {\n            id: data.id,\n            updateData: {\n                name: name,\n                amount: amount,\n                date: date,\n                category_id: categoryId,\n                type: type\n            }\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            },\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }, [getActivities, name, amount, date, categoryId, type, token, data.id, onClose])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'activity/deleteActivity', {\n            data: {\n                id: data.id\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [handleSubmit, open])\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle>\n                Edit Activities\n                <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Name' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <TextField label='Amount' type='number' fullWidth value={amount} onChange={(event) => { setAmount(event.target.value) }} />\n                <TextField label='Date' type='date' fullWidth value={date} InputLabelProps={{ shrink: true }} onChange={event => setDate(event.target.value)} />\n                <TextField label='Category' type='number' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <TextField label='Type' fullWidth value={type} select onChange={event => setType(event.target.value)}>\n                    <MenuItem value={'expense'}>Expense</MenuItem>\n                    <MenuItem value={'income'}>Income</MenuItem>\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                    <Button onClick={handleSubmit} color='primary'>Update</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    positive: {\n        color: theme.palette.positive.main\n    },\n    negative: {\n        color: theme.palette.negative.main\n    }\n}))\n\nexport default ({ data }) => {\n    let total = 0\n    data.forEach(d => {\n        d.type === 'income' ? total += parseFloat(d.amount) : total -= parseFloat(d.amount)\n    })\n\n    const classes = useStyles()\n    return (\n        <>\n            <Typography variant='h3' display='inline'>\n                Activities Total:&nbsp;\n            </Typography>\n            <Typography variant='h3' display='inline' className={total >= 0 ? classes.positive : classes.negative}>\n                ${total.toFixed(2)}\n            </Typography>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\n    TablePagination, Paper, IconButton, Tooltip, CircularProgress, TextField, MenuItem\n} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit';\nimport moment from 'moment'\nimport EditActivity from './EditActivity';\nimport ActivityTotal from './ActivityTotal'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        maxWidth: 1000,\n    },\n    tableHeader: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    income: {\n        color: theme.palette.positive.main\n    },\n    expense: {\n        color: theme.palette.negative.main\n    }\n}))\n\nexport default ({ activitiesList, categoriesList, getActivities, loading }) => {\n    const [data, setData] = useState([])\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5)\n    const [categoryFilter, setCategoryFilter] = useState('None')\n    const [showEditActivity, setShowEditActivity] = useState(false)\n    const [editRow, setEditRow] = useState() // store data of row to edit\n\n    useEffect(() => {\n        const filteredData = activitiesList.filter(a => a.category_name === categoryFilter)\n        if (categoryFilter === 'None') {\n            setData(activitiesList)\n        }\n        else {\n            setData(filteredData)\n        }\n    }, [activitiesList, categoriesList, categoryFilter])\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    }\n\n\n    const classes = useStyles()\n    const rows = data.map(row => (\n        <TableRow key={row.id}>\n            <TableCell>{row.name}</TableCell>\n            <TableCell align=\"right\">{moment(row.date).format('MMMM D, YYYY')}</TableCell>\n            <TableCell align=\"right\">{row.amount}</TableCell>\n            <TableCell align=\"right\">{row.category_name}</TableCell>\n            <TableCell align=\"right\" className={row.type === 'income' ? classes.income : classes.expense} >\n                {row.type.charAt(0).toUpperCase() + row.type.slice(1)}\n            </TableCell>\n            <TableCell>\n                <Tooltip title='Edit'>\n                    <IconButton onClick={() => {\n                        setShowEditActivity(true)\n                        setEditRow(row)\n                    }}>\n                        <EditIcon />\n                    </IconButton>\n                </Tooltip>\n            </TableCell>\n        </TableRow>\n    ))\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <>\n            <Paper className={classes.table}>\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell colSpan={4}>\n                                    <ActivityTotal data={data} />\n                                </TableCell>\n                                <TableCell colSpan={2} align='right'>\n                                    <TextField label='Category Filter' type='text' fullWidth value={categoryFilter} select onChange={e => setCategoryFilter(e.target.value)}>\n                                        <MenuItem value='None' key='None'>None</MenuItem>\n                                        {categoriesList.map(c => <MenuItem value={c.name} key={c.name}>{c.name}</MenuItem>)}\n                                    </TextField>\n                                </TableCell>\n                            </TableRow>\n       \n                            <TableRow>\n                                <TableCell className={classes.tableHeader}>Name</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Date</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Amount</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Category</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Type</TableCell>\n                                <TableCell className={classes.tableHeader} padding='checkbox' />\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                loading ?\n                                    <TableRow>\n                                        <TableCell colSpan={6} align='center'>\n                                            <CircularProgress size={100} color=\"primary\" />\n                                        </TableCell>\n                                    </TableRow>\n                                    :\n                                    rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            }\n                            {\n                                rows.length === 0 ?\n                                    <TableRow>\n                                        <TableCell colSpan={6} align='center'>\n                                            <Typography>No activities found</Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                    :\n                                    emptyRows > 0 && (\n                                        <TableRow key={'empty rows'} style={{ height: (53) * emptyRows }}>\n                                            <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            {\n                // test for showEditActivity to remount dialog to reset initial useState()\n                editRow && showEditActivity ?\n                    <EditActivity\n                        categoriesList={categoriesList}\n                        getActivities={getActivities}\n                        data={editRow}\n                        open={showEditActivity}\n                        onClose={() => {\n                            setShowEditActivity(false)\n                            setEditRow({})\n                        }}\n                    />\n                    :\n                    <></>\n            }\n        </>\n    )\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem, Box } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport default ({ open, onClose, categoriesList, getActivities, setShowEditCategory }) => {\n\n    const [name, setName] = useState('')\n    const [amount, setAmount] = useState(0)\n    const [date, setDate] = useState('')\n    const [categoryId, setCategoryId] = useState('')\n    const [type, setType] = useState('')\n    // const [categoriesList, setCategoriesList] = useState([])\n\n    const handleSubmit = useCallback(() => {\n        const token = localStorage.getItem('token')\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'activity/addActivity', {\n            name: name,\n            amount: amount,\n            date: date,\n            category_id: categoryId,\n            type: type,\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then((response) => {\n                getActivities()\n                onClose()\n            })\n    }, [getActivities, onClose, amount, categoryId, date, name, type])\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit()\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener)\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener)\n        };\n    }, [open, handleSubmit])\n\n    return (\n        <Dialog open={open ? open : false} onClose={onClose}>\n            <DialogTitle>\n                Add Activity\n                <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Name' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <TextField label='Amount' type='number' fullWidth value={amount} onChange={(event) => { setAmount(event.target.value) }} />\n                <TextField label='Date' type='date' fullWidth value={date} InputLabelProps={{ shrink: true }} onChange={event => setDate(event.target.value)} />\n                <Box width='100%' style={{ display: 'inline-flex' }}>\n                    <TextField label='Category' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                        {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                    </TextField>\n                    <DialogActions>\n                        <Button\n                            color='primary'\n                            onClick={() => {\n                                onClose()\n                                setShowEditCategory(true)\n                            }}\n                        >\n                            Add Category\n                        </Button>\n                    </DialogActions>\n                </Box>\n                <TextField label='Type' fullWidth value={type} select onChange={event => setType(event.target.value)}>\n                    <MenuItem value={'expense'}>Expense</MenuItem>\n                    <MenuItem value={'income'}>Income</MenuItem>\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleSubmit} color='primary'>Submit</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\n\nexport default ({ open, onClose, categoriesList, getCategories, getActivities }) => {\n    const [name, setName] = useState('')\n    const [categoryId, setCategoryId] = useState('')\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'category/addCategory', {\n            name: name\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                setName('')\n                getCategories()\n                onClose()\n            })\n    }, [name, onClose, token, getCategories])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'category/deleteCategory', {\n            data: {\n                id: categoryId\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getCategories()\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [open, handleSubmit])\n\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle>\n                Edit Categories\n                <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Add New Category' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <DialogActions>\n                    <Button onClick={handleSubmit} color='primary'>Add</Button>\n                </DialogActions>\n\n                <TextField label='Delete Existing Category' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                </DialogActions>\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Nav from './Components/Nav'\nimport ActivityTable from './Components/Data/ActivityTable'\nimport { UserContext } from '../UserContext'\nimport { Button, ButtonGroup, Typography, Box } from '@material-ui/core'\nimport AddActivity from './Components/Data/AddActivity'\nimport EditCategory from './Components/Data/EditCategory'\n\nexport default () => {\n    const { user } = useContext(UserContext)\n    const [loading, setLoading] = useState(true)\n    const [activitiesList, setActivitiesList] = useState([])\n    const [categoriesList, setCategoriesList] = useState([])\n    const [showAddActivity, setShowAddActivity] = useState(false)\n    const [showEditCategory, setShowEditCategory] = useState(false)\n\n    const getActivities = () => {\n        setLoading(true)\n        const token = localStorage.getItem('token')\n        axios.get(process.env.REACT_APP_BACKEND_URL + 'activity/getActivities', {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        }).then((response) => {\n            setActivitiesList(response.data)\n            setLoading(false)\n        })\n    }\n\n    const getCategories = () => {\n        setLoading(true)\n        const token = localStorage.getItem('token')\n        axios.get(process.env.REACT_APP_BACKEND_URL + 'category/getCategories', {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        }).then((response) => {\n            setCategoriesList(response.data)\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        getActivities()\n        getCategories()\n    }, [user])\n\n    if (!user) {\n        return (\n            <>\n                <Nav />\n                <Typography>You must be logged in to access this page.</Typography>\n            </>\n        )\n    }\n\n    return (\n        <>\n            <Nav />\n            <Box align=\"center\">\n                <ActivityTable activitiesList={activitiesList} categoriesList={categoriesList} getActivities={getActivities} loading={loading} />\n            </Box>\n            <br />\n            <Box align=\"center\">\n                <ButtonGroup variant=\"contained\" size=\"large\" color=\"primary\" >\n                    <Button onClick={() => { setShowAddActivity(true) }} key={'addActivity'}>Add Activity</Button>\n                    <Button onClick={() => { setShowEditCategory(true) }} key={'editCategory'}>Edit Categories</Button>\n                </ButtonGroup>\n            </Box>\n            <AddActivity categoriesList={categoriesList} open={showAddActivity} setShowEditCategory={setShowEditCategory} getActivities={getActivities} onClose={() => setShowAddActivity(false)} />\n            <EditCategory categoriesList={categoriesList} open={showEditCategory} getCategories={getCategories} getActivities={getActivities} onClose={() => setShowEditCategory(false)} />\n        </>\n    )\n}","import React from 'react'\nimport Nav from './Components/Nav'\nimport { Typography } from '@material-ui/core'\n\nexport default () => {\n    return (\n        <>\n            <Nav />\n            <Typography variant='h1' align='center'>Welcome to Budget Tracker</Typography>\n            <Typography variant='h3' align='center'>Log in or register to get started!</Typography>\n            \n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { Switch, Route, Redirect } from \"react-router-dom\"\nimport Dashboard from './views/Dashboard'\nimport LandingPage from './views/LandingPage'\nimport { UserContext } from './UserContext'\n\nexport default () => {\n\n  const [user, setUser] = useState(null)\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <Switch>\n        <Route exact path=\"/\">\n          {user ? <Redirect to='/dashboard'/> : <LandingPage />}\n        </Route>\n        <Route path=\"/home\" render={() => <LandingPage />} />\n        <Route path=\"/dashboard\" render={() => <Dashboard />} />\n        {\n          user ?\n            <Route render={() => <Redirect to=\"/dashboard\" />} /> :\n            <Route render={() => <Redirect to=\"/\" />} />\n        }\n      </Switch>\n    </UserContext.Provider>\n  )\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport 'typeface-roboto'\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#35B234',        // Light green\n            contrastText: \"#FFFFFF\" \n        },\n        secondary: {\n            main: '#FFFFFF'     // White\n        },\n        positive: {\n            main: '#4caf50'      // default palette success\n        },\n        negative: {\n            main: '#f44336'     // default palette error\n        },\n        background: {\n            default: '#FFFFFF',\n        },\n    },\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    },\n})\n\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <Router>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}