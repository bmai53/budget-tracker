{"version":3,"sources":["UserContext.js","views/Components/Auth/Login.js","views/Components/Auth/Register.js","views/Components/Nav.js","views/Components/Data/EditActivity.js","views/Components/Data/ActivityTotal.js","views/Components/Data/ActivityTable.js","views/Components/Data/AddActivity.js","views/Components/Data/EditCategory.js","views/Dashboard.js","views/LandingPage.js","views/Components/Auth/Init.js","App.js","theme.js","index.js"],"names":["UserContext","createContext","open","onClose","setUser","useContext","useState","email","setEmail","password","setPassword","showSuccess","setShowSuccess","showError","setShowError","handleLogin","useCallback","axios","post","process","then","response","localStorage","setItem","data","token","auth","catch","error","useEffect","enterPressListener","e","code","document","addEventListener","removeEventListener","Dialog","DialogTitle","IconButton","onClick","style","position","top","right","DialogContent","TextField","autoFocus","label","type","fullWidth","value","onChange","event","target","DialogActions","Button","color","Snackbar","autoHideDuration","Alert","severity","confirmPassword","setConfirmPassword","showEmailError","setShowEmailError","showPasswordError","setShowPasswordError","handleRegister","status","useStyles","makeStyles","theme","root","flexGrow","marginBottom","spacing","user","showLogin","setShowLogin","showRegister","setShowRegister","classes","renderButtons","component","NavLink","to","key","removeItem","window","location","reload","AppBar","className","Toolbar","Grid","container","justify","alignItems","item","xs","display","fontSize","Typography","variant","textAlign","Login","Register","deleteButton","categoriesList","getActivities","name","setName","amount","setAmount","moment","date","format","setDate","category_id","categoryId","setCategoryId","setType","getItem","handleSubmit","put","id","updateData","headers","Authorization","InputLabelProps","shrink","select","map","c","MenuItem","delete","positive","palette","main","negative","total","forEach","d","parseFloat","toFixed","table","maxWidth","tableHeader","backgroundColor","primary","common","white","income","expense","activitiesList","loading","setData","page","setPage","rowsPerPage","setRowsPerPage","categoryFilter","setCategoryFilter","showEditActivity","setShowEditActivity","editRow","setEditRow","filteredData","filter","a","category_name","rows","row","TableRow","TableCell","align","charAt","toUpperCase","slice","Tooltip","title","emptyRows","Math","min","length","Paper","TableContainer","Table","TableHead","colSpan","ActivityTotal","padding","TableBody","CircularProgress","size","height","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","EditActivity","setShowEditCategory","Box","width","getCategories","setLoading","setActivitiesList","setCategoriesList","showAddActivity","setShowAddActivity","showEditCategory","get","Nav","ActivityTable","ButtonGroup","AddActivity","EditCategory","Provider","Init","exact","path","LandingPage","render","Dashboard","createMuiTheme","contrastText","secondary","background","default","typography","fontFamily","join","ReactDOM","ThemeProvider","App","getElementById"],"mappings":"iTAEaA,EAAcC,wBAAc,M,gFCM1B,cAAwB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAEZC,EAAYC,qBAAWL,GAAvBI,QAF0B,EAGRE,mBAAS,IAHD,mBAG3BC,EAH2B,KAGpBC,EAHoB,OAIFF,mBAAS,IAJP,mBAI3BG,EAJ2B,KAIjBC,EAJiB,OAOIJ,oBAAS,GAPb,mBAO3BK,EAP2B,KAOdC,EAPc,OAQAN,oBAAS,GART,mBAQ3BO,EAR2B,KAQhBC,EARgB,KAW5BC,EAAcC,uBAAY,WAC5BC,IAAMC,KAAKC,gEAAkD,CACzDZ,MAAOA,EACPE,SAAUA,IAETW,MAAK,SAACC,GACHC,aAAaC,QAAQ,QAASF,EAASG,KAAKC,OAC5CrB,EAAQiB,EAASG,KAAKE,MACtBd,GAAe,GACfT,OAEHwB,OAAM,SAACC,GACJd,GAAa,QAEtB,CAACP,EAAOE,EAAUN,EAASC,IAe9B,OAZAyB,qBAAU,WACN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2B9B,GACpDa,KAIR,OADAkB,SAASC,iBAAiB,UAAWJ,GAC9B,WACHG,SAASE,oBAAoB,UAAWL,MAE7C,CAAC5B,EAAMa,IAGN,oCACI,kBAACqB,EAAA,EAAD,CAAQlC,KAAMA,IAAc,EAAOC,QAASA,GACxC,kBAACkC,EAAA,EAAD,aAEA,kBAACC,EAAA,EAAD,CAAYC,QAASpC,EAASqC,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACpE,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,QAAQC,KAAK,QAAQC,WAAS,EAACC,MAAO3C,EAAO4C,SAAU,SAACC,GAAY5C,EAAS4C,EAAMC,OAAOH,UACrH,kBAACL,EAAA,EAAD,CAAWE,MAAM,WAAWC,KAAK,WAAWC,WAAS,EAACC,MAAOzC,EAAU0C,SAAU,SAACC,GAAY1C,EAAY0C,EAAMC,OAAOH,UACvH,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAASxB,EAAayC,MAAM,WAApC,YAKZ,kBAACC,EAAA,EAAD,CAAUvD,KAAMS,EAAa+C,iBAAkB,IAAMvD,QAAS,WAAQS,GAAe,KACjF,kBAAC+C,EAAA,EAAD,CAAOxD,QAAS,WAAQS,GAAe,IAAUgD,SAAS,WAA1D,mBAIJ,kBAACH,EAAA,EAAD,CAAUvD,KAAMW,EAAW6C,iBAAkB,IAAMvD,QAAS,WAAQW,GAAa,KAC7E,kBAAC6C,EAAA,EAAD,CAAOxD,QAAS,WAAQW,GAAa,IAAU8C,SAAS,SAAxD,0BCjED,cAAwB,IAArB1D,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EAERG,mBAAS,IAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGFF,mBAAS,IAHP,mBAG3BG,EAH2B,KAGjBC,EAHiB,OAIYJ,mBAAS,IAJrB,mBAI3BuD,EAJ2B,KAIVC,EAJU,OAMIxD,oBAAS,GANb,mBAM3BK,EAN2B,KAMdC,EANc,OAOAN,oBAAS,GAPT,mBAO3BO,EAP2B,KAOhBC,EAPgB,OAQUR,oBAAS,GARnB,mBAQ3ByD,EAR2B,KAQXC,EARW,OASgB1D,oBAAS,GATzB,mBAS3B2D,EAT2B,KASRC,EATQ,KAY5BC,EAAiBnD,uBAAY,WAC3BP,IAAaoD,EACb5C,IAAMC,KAAKC,mEAAqD,CAC5DZ,MAAOA,EACPE,SAAUA,IAETW,MAAK,SAACC,GACHb,EAAS,IACTE,EAAY,IACZoD,EAAmB,IACnBlD,GAAe,GACfT,OAEHwB,OAAM,SAACC,GACAA,EAAMP,WACoB,MAA1BO,EAAMP,SAAS+C,OAAiBJ,GAAkB,GAAQlD,GAAa,OAKnFoD,GAAqB,KAE1B,CAAC3D,EAAOE,EAAUoD,EAAiB1D,IAetC,OAZA0B,qBAAU,WACN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2B9B,GACpDiE,KAIR,OADAlC,SAASC,iBAAiB,UAAWJ,GAC9B,WACHG,SAASE,oBAAoB,UAAWL,MAE7C,CAAC5B,EAAMiE,IAGN,oCACI,kBAAC/B,EAAA,EAAD,CAAQlC,KAAMA,IAAc,EAAOC,QAASA,GACxC,kBAACkC,EAAA,EAAD,gBAEA,kBAACC,EAAA,EAAD,CAAYC,QAASpC,EAASqC,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACpE,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,QAAQC,KAAK,QAAQC,WAAS,EAACC,MAAO3C,EAAO4C,SAAU,SAACC,GAAY5C,EAAS4C,EAAMC,OAAOH,UACrH,kBAACL,EAAA,EAAD,CAAWE,MAAM,WAAWC,KAAK,WAAWC,WAAS,EAACC,MAAOzC,EAAU0C,SAAU,SAACC,GAAY1C,EAAY0C,EAAMC,OAAOH,UACvH,kBAACL,EAAA,EAAD,CAAWE,MAAM,WAAWC,KAAK,WAAWC,WAAS,EAACC,MAAOW,EAAiBV,SAAU,SAACC,GAAYU,EAAmBV,EAAMC,OAAOH,UACrI,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAAS4B,EAAgBX,MAAM,WAAvC,eAKZ,kBAACC,EAAA,EAAD,CAAUvD,KAAMS,EAAa+C,iBAAkB,IAAMvD,QAAS,WAAQS,GAAe,KACjF,kBAAC+C,EAAA,EAAD,CAAOxD,QAAS,WAAQS,GAAe,IAAUgD,SAAS,WAA1D,qBAIJ,kBAACH,EAAA,EAAD,CAAUvD,KAAMW,EAAW6C,iBAAkB,IAAMvD,QAAS,WAAQW,GAAa,KAC7E,kBAAC6C,EAAA,EAAD,CAAOxD,QAAS,WAAQW,GAAa,IAAU8C,SAAS,SAAxD,uBAIJ,kBAACH,EAAA,EAAD,CAAUvD,KAAM6D,EAAgBL,iBAAkB,IAAMvD,QAAS,WAAQ6D,GAAkB,KACvF,kBAACL,EAAA,EAAD,CAAOxD,QAAS,WAAQ6D,GAAkB,IAAUJ,SAAS,QAA7D,6BAIJ,kBAACH,EAAA,EAAD,CAAUvD,KAAM+D,EAAmBP,iBAAkB,IAAMvD,QAAS,WAAQ+D,GAAqB,KAC7F,kBAACP,EAAA,EAAD,CAAOxD,QAAS,WAAQ+D,GAAqB,IAAUN,SAAS,QAAhE,8B,iBClFVS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,EACVC,aAAcH,EAAMI,QAAQ,QAIrB,aAAO,IAAD,EAEStE,qBAAWL,GAA7B4E,EAFS,EAETA,KAAMxE,EAFG,EAEHA,QAFG,EAGiBE,oBAAS,GAH1B,mBAGVuE,EAHU,KAGCC,EAHD,OAIuBxE,oBAAS,GAJhC,mBAIVyE,EAJU,KAIIC,EAJJ,KAMXC,EAAUZ,IAQVa,EAAiBN,EAMnB,CACI,kBAACrB,EAAA,EAAD,CAAQC,MAAM,UAAU2B,UAAWC,IAASC,GAAG,aAAaC,IAAK,aAAjE,aACA,kBAAC/B,EAAA,EAAD,CAAQC,MAAM,UAAUjB,QAdX,WACjBnC,EAAQ,MACRkB,aAAaiE,WAAW,SACxBC,OAAOC,SAASC,UAWmCJ,IAAK,UAApD,WAPJ,CACI,kBAAC/B,EAAA,EAAD,CAAQC,MAAM,UAAUjB,QAAS,WAAQuC,GAAa,IAASQ,IAAK,SAApE,SACA,kBAAC/B,EAAA,EAAD,CAAQC,MAAM,UAAUjB,QAAS,WAAQyC,GAAgB,IAASM,IAAK,YAAvE,aAQR,OACI,oCACI,kBAACK,EAAA,EAAD,CAAQlD,SAAS,SAASmD,UAAWX,EAAQT,MACzC,kBAACqB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACpB,QAAS,EAAGqB,QAAQ,gBAAgBC,WAAW,UAC3D,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,yBAAK3D,MAAO,CAAE4D,QAAS,cAAeH,WAAY,WAC9C,kBAAC3D,EAAA,EAAD,CAAYC,QAAS,kBAAMiD,OAAOtF,KAAK,2CAA4C,YAC/E,kBAAC,IAAD,CAAYmG,SAAS,QAAQ7C,MAAM,eAEvC,kBAAC8C,EAAA,EAAD,CAAYC,QAAQ,MAApB,oBAGR,kBAACT,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAG3D,MAAO,CAAEgE,UAAW,UACjCtB,MAKjB,kBAACuB,EAAD,CAAOvG,KAAM2E,EAAW1E,QAAS,kBAAM2E,GAAa,MACpD,kBAAC4B,EAAD,CAAUxG,KAAM6E,EAAc5E,QAAS,kBAAM6E,GAAgB,Q,qICtDnEX,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCoC,aAAc,CACVnD,MAAO,WAIA,cAA6D,IAA1DtD,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASqB,EAA0C,EAA1CA,KAAMoF,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cAAoB,EAC/CvG,mBAASkB,EAAKsF,MADiC,mBAChEA,EADgE,KAC1DC,EAD0D,OAE3CzG,mBAASkB,EAAKwF,QAF6B,mBAEhEA,EAFgE,KAExDC,EAFwD,OAG/C3G,mBAAS4G,IAAO1F,EAAK2F,MAAMC,OAAO,eAHa,mBAGhED,EAHgE,KAG1DE,EAH0D,OAInC/G,mBAASkB,EAAK8F,aAJqB,mBAIhEC,EAJgE,KAIpDC,EAJoD,OAK/ClH,mBAASkB,EAAKwB,MALiC,mBAKhEA,EALgE,KAK1DyE,EAL0D,KAOjEhG,EAAQH,aAAaoG,QAAQ,SAC7BC,EAAe3G,uBAAY,WAC7BC,IAAM2G,IAAIzG,6EAA+D,CACrE0G,GAAIrG,EAAKqG,GACTC,WAAY,CACRhB,KAAMA,EACNE,OAAQA,EACRG,KAAMA,EACNG,YAAaC,EACbvE,KAAMA,IAEX,CACC+E,QAAS,CACLC,cAAc,OAAD,OAASvG,MAGzBL,MAAK,WACFyF,IACA1G,SAET,CAAC0G,EAAeC,EAAME,EAAQG,EAAMI,EAAYvE,EAAMvB,EAAOD,EAAKqG,GAAI1H,IAiBzE0B,qBAAU,WAEN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2B9B,GACpDyH,KAKR,OAFA1F,SAASC,iBAAiB,UAAWJ,GAE9B,WACHG,SAASE,oBAAoB,UAAWL,MAG7C,CAAC6F,EAAczH,IAElB,IAAM+E,EAAUZ,IAChB,OACI,kBAACjC,EAAA,EAAD,CAAQlC,KAAMA,IAAc,EAAOC,QAASA,EAAS8C,WAAS,GAC1D,kBAACZ,EAAA,EAAD,uBAEI,kBAACC,EAAA,EAAD,CAAYC,QAASpC,EAASqC,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACxE,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAO4D,EAAM3D,SAAU,SAACC,GAAY2D,EAAQ3D,EAAMC,OAAOH,UACjH,kBAACL,EAAA,EAAD,CAAWE,MAAM,SAASC,KAAK,SAASC,WAAS,EAACC,MAAO8D,EAAQ7D,SAAU,SAACC,GAAY6D,EAAU7D,EAAMC,OAAOH,UAC/G,kBAACL,EAAA,EAAD,CAAWE,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAOiE,EAAMc,gBAAiB,CAAEC,QAAQ,GAAQ/E,SAAU,SAAAC,GAAK,OAAIiE,EAAQjE,EAAMC,OAAOH,UACtI,kBAACL,EAAA,EAAD,CAAWE,MAAM,WAAWC,KAAK,SAASC,WAAS,EAACC,MAAOqE,EAAYY,QAAM,EAAChF,SAAU,SAAAC,GAAK,OAAIoE,EAAcpE,EAAMC,OAAOH,SACvH0D,EAAewB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAUpF,MAAOmF,EAAER,GAAIvC,IAAK+C,EAAER,IAAKQ,EAAEvB,UAElE,kBAACjE,EAAA,EAAD,CAAWE,MAAM,OAAOE,WAAS,EAACC,MAAOF,EAAMmF,QAAM,EAAChF,SAAU,SAAAC,GAAK,OAAIqE,EAAQrE,EAAMC,OAAOH,SAC1F,kBAACoF,EAAA,EAAD,CAAUpF,MAAO,WAAjB,WACA,kBAACoF,EAAA,EAAD,CAAUpF,MAAO,UAAjB,WAEJ,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAnDH,WACjBtB,IAAMsH,OAAOpH,6EAA+D,CACxEK,KAAM,CACFqG,GAAIrG,EAAKqG,IAEbE,QAAS,CACLC,cAAc,OAAD,OAASvG,MAGzBL,MAAK,WACFyF,IACA1G,QAwCmCyF,UAAWX,EAAQ0B,cAAlD,UACA,kBAACpD,EAAA,EAAD,CAAQhB,QAASoF,EAAcnE,MAAM,WAArC,cC1Fda,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCiE,SAAU,CACNhF,MAAOe,EAAMkE,QAAQD,SAASE,MAElCC,SAAU,CACNnF,MAAOe,EAAMkE,QAAQE,SAASD,UAIvB,cAAe,IAAZlH,EAAW,EAAXA,KACVoH,EAAQ,EACZpH,EAAKqH,SAAQ,SAAAC,GACE,WAAXA,EAAE9F,KAAoB4F,GAASG,WAAWD,EAAE9B,QAAU4B,GAASG,WAAWD,EAAE9B,WAGhF,IAAM/B,EAAUZ,IAChB,OACI,oCACI,kBAACiC,EAAA,EAAD,CAAYC,QAAQ,KAAKH,QAAQ,UAAjC,yBAGA,kBAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKH,QAAQ,SAASR,UAAWgD,GAAS,EAAI3D,EAAQuD,SAAWvD,EAAQ0D,UAA7F,IACMC,EAAMI,QAAQ,MCf1B3E,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC0E,MAAO,CACHC,SAAU,KAEdC,YAAa,CACTC,gBAAiB7E,EAAMkE,QAAQY,QAAQX,KACvClF,MAAOe,EAAMkE,QAAQa,OAAOC,OAEhCC,OAAQ,CACJhG,MAAOe,EAAMkE,QAAQD,SAASE,MAElCe,QAAS,CACLjG,MAAOe,EAAMkE,QAAQE,SAASD,UAIvB,eAAiE,IAA9DgB,EAA6D,EAA7DA,eAAgB9C,EAA6C,EAA7CA,eAAgBC,EAA6B,EAA7BA,cAAe8C,EAAc,EAAdA,QAAc,EACnDrJ,mBAAS,IAD0C,mBACpEkB,EADoE,KAC9DoI,EAD8D,OAEnDtJ,mBAAS,GAF0C,mBAEpEuJ,EAFoE,KAE9DC,EAF8D,OAGrCxJ,mBAAS,GAH4B,mBAGpEyJ,EAHoE,KAGvDC,EAHuD,OAI/B1J,mBAAS,QAJsB,mBAIpE2J,EAJoE,KAIpDC,EAJoD,OAK3B5J,oBAAS,GALkB,mBAKpE6J,EALoE,KAKlDC,EALkD,OAM7C9J,qBAN6C,mBAMpE+J,EANoE,KAM3DC,EAN2D,KAQ3EzI,qBAAU,WACN,IAAM0I,EAAeb,EAAec,QAAO,SAAAC,GAAC,OAAIA,EAAEC,gBAAkBT,KAEhEL,EADmB,SAAnBK,EACQP,EAGAa,KAEb,CAACb,EAAgB9C,EAAgBqD,IAEpC,IAUMhF,EAAUZ,KACVsG,EAAOnJ,EAAK4G,KAAI,SAAAwC,GAAG,OACrB,kBAACC,EAAA,EAAD,CAAUvF,IAAKsF,EAAI/C,IACf,kBAACiD,EAAA,EAAD,KAAYF,EAAI9D,MAChB,kBAACgE,EAAA,EAAD,CAAWC,MAAM,SAAS7D,IAAO0D,EAAIzD,MAAMC,OAAO,iBAClD,kBAAC0D,EAAA,EAAD,CAAWC,MAAM,SAASH,EAAI5D,QAC9B,kBAAC8D,EAAA,EAAD,CAAWC,MAAM,SAASH,EAAIF,eAC9B,kBAACI,EAAA,EAAD,CAAWC,MAAM,QAAQnF,UAAwB,WAAbgF,EAAI5H,KAAoBiC,EAAQuE,OAASvE,EAAQwE,SAChFmB,EAAI5H,KAAKgI,OAAO,GAAGC,cAAgBL,EAAI5H,KAAKkI,MAAM,IAEvD,kBAACJ,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CAASC,MAAM,QACX,kBAAC9I,EAAA,EAAD,CAAYC,QAAS,WACjB6H,GAAoB,GACpBE,EAAWM,KAEX,kBAAC,IAAD,aAOdS,EAAYtB,EAAcuB,KAAKC,IAAIxB,EAAaY,EAAKa,OAAS3B,EAAOE,GAE3E,OACI,oCACI,kBAAC0B,EAAA,EAAD,CAAO7F,UAAWX,EAAQgE,OACtB,kBAACyC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACf,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWe,QAAS,GAChB,kBAACC,EAAD,CAAetK,KAAMA,KAEzB,kBAACsJ,EAAA,EAAD,CAAWe,QAAS,EAAGd,MAAM,SACzB,kBAAClI,EAAA,EAAD,CAAWE,MAAM,kBAAkBC,KAAK,OAAOC,WAAS,EAACC,MAAO+G,EAAgB9B,QAAM,EAAChF,SAAU,SAAApB,GAAC,OAAImI,EAAkBnI,EAAEsB,OAAOH,SAC7H,kBAACoF,EAAA,EAAD,CAAUpF,MAAM,OAAOoC,IAAI,QAA3B,QACCsB,EAAewB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAUpF,MAAOmF,EAAEvB,KAAMxB,IAAK+C,EAAEvB,MAAOuB,EAAEvB,YAK9E,kBAAC+D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWlF,UAAWX,EAAQkE,aAA9B,QACA,kBAAC2B,EAAA,EAAD,CAAWlF,UAAWX,EAAQkE,YAAa4B,MAAM,SAAjD,QACA,kBAACD,EAAA,EAAD,CAAWlF,UAAWX,EAAQkE,YAAa4B,MAAM,SAAjD,UACA,kBAACD,EAAA,EAAD,CAAWlF,UAAWX,EAAQkE,YAAa4B,MAAM,SAAjD,YACA,kBAACD,EAAA,EAAD,CAAWlF,UAAWX,EAAQkE,YAAa4B,MAAM,SAAjD,QACA,kBAACD,EAAA,EAAD,CAAWlF,UAAWX,EAAQkE,YAAa4C,QAAQ,eAG3D,kBAACC,EAAA,EAAD,KAEQrC,EACI,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWe,QAAS,EAAGd,MAAM,UACzB,kBAACkB,EAAA,EAAD,CAAkBC,KAAM,IAAK1I,MAAM,cAI3CmH,EAAKO,MAAMrB,EAAOE,EAAaF,EAAOE,EAAcA,GAGxC,IAAhBY,EAAKa,OACD,kBAACX,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWe,QAAS,EAAGd,MAAM,UACzB,kBAACzE,EAAA,EAAD,8BAIR+E,EAAY,GACR,kBAACR,EAAA,EAAD,CAAUvF,IAAK,aAAc9C,MAAO,CAAE2J,OAAS,GAAMd,IACjD,kBAACP,EAAA,EAAD,CAAWe,QAAS,QAOhD,kBAACO,EAAA,EAAD,CACIC,mBAAoB,CAAC,EAAG,GAAI,IAC5BlH,UAAU,MACVmH,MAAO9K,EAAKgK,OACZzB,YAAaA,EACbF,KAAMA,EACN0C,aAhGS,SAACnJ,EAAOoJ,GAC7B1C,EAAQ0C,IAgGIC,oBA7FgB,SAACrJ,GAC7B4G,EAAe0C,SAAStJ,EAAMC,OAAOH,MAAO,KAC5C4G,EAAQ,OAgGAO,GAAWF,EACP,kBAACwC,EAAD,CACI/F,eAAgBA,EAChBC,cAAeA,EACfrF,KAAM6I,EACNnK,KAAMiK,EACNhK,QAAS,WACLiK,GAAoB,GACpBE,EAAW,OAInB,uC,oBC1JL,eAA4E,IAAzEpK,EAAwE,EAAxEA,KAAMC,EAAkE,EAAlEA,QAASyG,EAAyD,EAAzDA,eAAgBC,EAAyC,EAAzCA,cAAe+F,EAA0B,EAA1BA,oBAA0B,EAE9DtM,mBAAS,IAFqD,mBAE/EwG,EAF+E,KAEzEC,EAFyE,OAG1DzG,mBAAS,GAHiD,mBAG/E0G,EAH+E,KAGvEC,EAHuE,OAI9D3G,mBAAS,IAJqD,mBAI/E6G,EAJ+E,KAIzEE,EAJyE,OAKlD/G,mBAAS,IALyC,mBAK/EiH,EAL+E,KAKnEC,EALmE,OAM9DlH,mBAAS,IANqD,mBAM/E0C,EAN+E,KAMzEyE,EANyE,KAShFE,EAAe3G,uBAAY,WAC7B,IAAMS,EAAQH,aAAaoG,QAAQ,SACnCzG,IAAMC,KAAKC,0EAA4D,CACnE2F,KAAMA,EACNE,OAAQA,EACRG,KAAMA,EACNG,YAAaC,EACbvE,KAAMA,GACP,CACC+E,QAAS,CACLC,cAAc,OAAD,OAASvG,MAGzBL,MAAK,SAACC,GACHwF,IACA1G,SAET,CAAC0G,EAAe1G,EAAS6G,EAAQO,EAAYJ,EAAML,EAAM9D,IAgB5D,OAdAnB,qBAAU,WAEN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2B9B,GACpDyH,KAKR,OAFA1F,SAASC,iBAAiB,UAAWJ,GAE9B,WACHG,SAASE,oBAAoB,UAAWL,MAE7C,CAAC5B,EAAMyH,IAGN,kBAACvF,EAAA,EAAD,CAAQlC,KAAMA,IAAc,EAAOC,QAASA,GACxC,kBAACkC,EAAA,EAAD,oBAEI,kBAACC,EAAA,EAAD,CAAYC,QAASpC,EAASqC,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACxE,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAO4D,EAAM3D,SAAU,SAACC,GAAY2D,EAAQ3D,EAAMC,OAAOH,UACjH,kBAACL,EAAA,EAAD,CAAWE,MAAM,SAASC,KAAK,SAASC,WAAS,EAACC,MAAO8D,EAAQ7D,SAAU,SAACC,GAAY6D,EAAU7D,EAAMC,OAAOH,UAC/G,kBAACL,EAAA,EAAD,CAAWE,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAOiE,EAAMc,gBAAiB,CAAEC,QAAQ,GAAQ/E,SAAU,SAAAC,GAAK,OAAIiE,EAAQjE,EAAMC,OAAOH,UACtI,kBAAC2J,GAAA,EAAD,CAAKC,MAAM,OAAOtK,MAAO,CAAE4D,QAAS,gBAChC,kBAACvD,EAAA,EAAD,CAAWE,MAAM,WAAWE,WAAS,EAACC,MAAOqE,EAAYY,QAAM,EAAChF,SAAU,SAAAC,GAAK,OAAIoE,EAAcpE,EAAMC,OAAOH,SACzG0D,EAAewB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAUpF,MAAOmF,EAAER,GAAIvC,IAAK+C,EAAER,IAAKQ,EAAEvB,UAElE,kBAACxD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,MAAM,UACNjB,QAAS,WACLpC,IACAyM,GAAoB,KAJ5B,kBAWR,kBAAC/J,EAAA,EAAD,CAAWE,MAAM,OAAOE,WAAS,EAACC,MAAOF,EAAMmF,QAAM,EAAChF,SAAU,SAAAC,GAAK,OAAIqE,EAAQrE,EAAMC,OAAOH,SAC1F,kBAACoF,EAAA,EAAD,CAAUpF,MAAO,WAAjB,WACA,kBAACoF,EAAA,EAAD,CAAUpF,MAAO,UAAjB,WAEJ,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAASoF,EAAcnE,MAAM,WAArC,cC1Eda,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCoC,aAAc,CACVnD,MAAO,WAKA,eAAsE,IAAnEtD,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,QAASyG,EAAmD,EAAnDA,eAAgBmG,EAAmC,EAAnCA,cAAelG,EAAoB,EAApBA,cAAoB,EACxDvG,mBAAS,IAD+C,mBACzEwG,EADyE,KACnEC,EADmE,OAE5CzG,mBAAS,IAFmC,mBAEzEiH,EAFyE,KAE7DC,EAF6D,KAI1E/F,EAAQH,aAAaoG,QAAQ,SAC7BC,EAAe3G,uBAAY,WAC7BC,IAAMC,KAAKC,0EAA4D,CACnE2F,KAAMA,GACP,CACCiB,QAAS,CACLC,cAAc,OAAD,OAASvG,MAGzBL,MAAK,WACF2F,EAAQ,IACRgG,IACA5M,SAET,CAAC2G,EAAM3G,EAASsB,EAAOsL,IAkB1BlL,qBAAU,WAEN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2B9B,GACpDyH,KAKR,OAFA1F,SAASC,iBAAiB,UAAWJ,GAE9B,WACHG,SAASE,oBAAoB,UAAWL,MAG7C,CAAC5B,EAAMyH,IAGV,IAAM1C,EAAUZ,KAChB,OACI,kBAACjC,EAAA,EAAD,CAAQlC,KAAMA,IAAc,EAAOC,QAASA,EAAS8C,WAAS,GAC1D,kBAACZ,EAAA,EAAD,uBAEI,kBAACC,EAAA,EAAD,CAAYC,QAASpC,EAASqC,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACxE,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,mBAAmBC,KAAK,OAAOC,WAAS,EAACC,MAAO4D,EAAM3D,SAAU,SAACC,GAAY2D,EAAQ3D,EAAMC,OAAOH,UAC7H,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAASoF,EAAcnE,MAAM,WAArC,QAGJ,kBAACX,EAAA,EAAD,CAAWE,MAAM,2BAA2BE,WAAS,EAACC,MAAOqE,EAAYY,QAAM,EAAChF,SAAU,SAAAC,GAAK,OAAIoE,EAAcpE,EAAMC,OAAOH,SACzH0D,EAAewB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAUpF,MAAOmF,EAAER,GAAIvC,IAAK+C,EAAER,IAAKQ,EAAEvB,UAElE,kBAACxD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhB,QAnDH,WACjBtB,IAAMsH,OAAOpH,6EAA+D,CACxEK,KAAM,CACFqG,GAAIN,GAERQ,QAAS,CACLC,cAAc,OAAD,OAASvG,MAGzBL,MAAK,WACF2L,IACAlG,IACA1G,QAuCmCyF,UAAWX,EAAQ0B,cAAlD,cC3EL,cAAO,IACV/B,EAASvE,qBAAWL,GAApB4E,KADS,EAEatE,oBAAS,GAFtB,mBAEVqJ,EAFU,KAEDqD,EAFC,OAG2B1M,mBAAS,IAHpC,mBAGVoJ,EAHU,KAGMuD,EAHN,OAI2B3M,mBAAS,IAJpC,mBAIVsG,EAJU,KAIMsG,EAJN,OAK6B5M,oBAAS,GALtC,mBAKV6M,EALU,KAKOC,EALP,OAM+B9M,oBAAS,GANxC,mBAMV+M,EANU,KAMQT,EANR,KAQX/F,EAAgB,WAClBmG,GAAW,GACX,IAAMvL,EAAQH,aAAaoG,QAAQ,SACnCzG,IAAMqM,IAAInM,4EAA8D,CACpE4G,QAAS,CACLC,cAAc,OAAD,OAASvG,MAE3BL,MAAK,SAACC,GACL4L,EAAkB5L,EAASG,MAC3BwL,GAAW,OAIbD,EAAgB,WAClBC,GAAW,GACX,IAAMvL,EAAQH,aAAaoG,QAAQ,SACnCzG,IAAMqM,IAAInM,4EAA8D,CACpE4G,QAAS,CACLC,cAAc,OAAD,OAASvG,MAE3BL,MAAK,SAACC,GACL6L,EAAkB7L,EAASG,MAC3BwL,GAAW,OASnB,OALAnL,qBAAU,WACNgF,IACAkG,MACD,CAACnI,IAECA,EAUD,oCACI,kBAAC2I,EAAD,MACA,kBAACV,GAAA,EAAD,CAAK9B,MAAM,UACP,kBAACyC,GAAD,CAAe9D,eAAgBA,EAAgB9C,eAAgBA,EAAgBC,cAAeA,EAAe8C,QAASA,KAE1H,6BACA,kBAACkD,GAAA,EAAD,CAAK9B,MAAM,UACP,kBAAC0C,GAAA,EAAD,CAAalH,QAAQ,YAAY2F,KAAK,QAAQ1I,MAAM,WAChD,kBAACD,EAAA,EAAD,CAAQhB,QAAS,WAAQ6K,GAAmB,IAAS9H,IAAK,eAA1D,gBACA,kBAAC/B,EAAA,EAAD,CAAQhB,QAAS,WAAQqK,GAAoB,IAAStH,IAAK,gBAA3D,qBAGR,kBAACoI,GAAD,CAAa9G,eAAgBA,EAAgB1G,KAAMiN,EAAiBP,oBAAqBA,EAAqB/F,cAAeA,EAAe1G,QAAS,kBAAMiN,GAAmB,MAC9K,kBAACO,GAAD,CAAc/G,eAAgBA,EAAgB1G,KAAMmN,EAAkBN,cAAeA,EAAelG,cAAeA,EAAe1G,QAAS,kBAAMyM,GAAoB,OArBrK,oCACI,kBAACW,EAAD,MACA,kBAACjH,EAAA,EAAD,qDChDD,cACX,OACI,oCACI,kBAACiH,EAAD,MACA,kBAACjH,EAAA,EAAD,CAAYC,QAAQ,KAAKwE,MAAM,UAA/B,6BACA,kBAACzE,EAAA,EAAD,CAAYC,QAAQ,KAAKwE,MAAM,UAA/B,wCCJG,cAAO,IAAD,EACO1K,qBAAWL,GAA5B4E,EADU,EACVA,KAAMxE,EADI,EACJA,QAab,OAXAyB,qBAAW,WACP,IAAMJ,EAAQH,aAAaoG,QAAQ,UAC/B9C,GAAQnD,GACRR,IAAMqM,IAAInM,mEAAqD,CAC3D4G,QAAS,CAAEC,cAAc,OAAD,OAASvG,MAClCL,MAAK,SAAAC,GACJjB,EAAQiB,EAASG,KAAKE,WAG/B,CAACkD,EAAMxE,IAGN,sCCbO,cAAO,IAAD,EAEKE,mBAAS,MAFd,mBAEZsE,EAFY,KAENxE,EAFM,KAGnB,OACE,kBAACJ,EAAY4N,SAAb,CAAsB1K,MAAO,CAAE0B,OAAMxE,YACnC,kBAACyN,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACfnJ,EAAO,kBAAC,IAAD,CAAUS,GAAG,eAAiB,kBAAC2I,GAAD,OAExC,kBAAC,IAAD,CAAOD,KAAK,QAAQE,OAAQ,kBAAM,kBAACD,GAAD,SAClC,kBAAC,IAAD,CAAOD,KAAK,aAAaE,OAAQ,kBAAM,kBAACC,GAAD,SAErCtJ,EACE,kBAAC,IAAD,CAAOqJ,OAAQ,kBAAM,kBAAC,IAAD,CAAU5I,GAAG,kBAClC,kBAAC,IAAD,CAAO4I,OAAQ,kBAAM,kBAAC,IAAD,CAAU5I,GAAG,Y,mBCgB/Bd,I,OAnCD4J,aAAe,CACzB1F,QAAS,CACLY,QAAS,CACLX,KAAM,UACN0F,aAAc,WAElBC,UAAW,CACP3F,KAAM,WAEVF,SAAU,CACNE,KAAM,WAEVC,SAAU,CACND,KAAM,WAEV4F,WAAY,CACRC,QAAS,YAGjBC,WAAY,CACRC,WAAY,CACR,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACFC,KAAK,SC3BfC,IAASV,OACP,kBAAC,IAAD,KACI,kBAACW,GAAA,EAAD,CAAerK,MAAOA,IACpB,kBAACsK,GAAD,QAGN5M,SAAS6M,eAAe,W","file":"static/js/main.0232ee50.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nexport const UserContext = createContext(null)","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport axios from 'axios'\nimport { UserContext } from '../../../UserContext'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default ({ open, onClose }) => {\n\n    const { setUser } = useContext(UserContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    // snackbars\n    const [showSuccess, setShowSuccess] = useState(false)\n    const [showError, setShowError] = useState(false)\n\n\n    const handleLogin = useCallback(() => {\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/login', {\n            email: email,\n            password: password\n        })\n            .then((response) => {\n                localStorage.setItem('token', response.data.token)\n                setUser(response.data.auth)\n                setShowSuccess(true)\n                onClose()\n            })\n            .catch((error) => {\n                setShowError(true)\n            })\n    }, [email, password, onClose, setUser])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleLogin();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n    }, [open, handleLogin])\n\n    return (\n        <>\n            <Dialog open={open ? open : false} onClose={onClose}>\n                <DialogTitle>\n                    Login\n                <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                    <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                    <DialogActions>\n                        <Button onClick={handleLogin} color='primary'>Login</Button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n\n            <Snackbar open={showSuccess} autoHideDuration={3000} onClose={() => { setShowSuccess(false) }}>\n                <Alert onClose={() => { setShowSuccess(false) }} severity=\"success\">\n                    Login Success!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showError} autoHideDuration={3000} onClose={() => { setShowError(false) }}>\n                <Alert onClose={() => { setShowError(false) }} severity=\"error\">\n                    Invalid Credentials\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default ({ open, onClose }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    // snackbars\n    const [showSuccess, setShowSuccess] = useState(false)\n    const [showError, setShowError] = useState(false)\n    const [showEmailError, setShowEmailError] = useState(false)\n    const [showPasswordError, setShowPasswordError] = useState(false)\n\n\n    const handleRegister = useCallback(() => {\n        if (password === confirmPassword) {\n            axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/register', {\n                email: email,\n                password: password\n            })\n                .then((response) => {\n                    setEmail('')\n                    setPassword('')\n                    setConfirmPassword('')\n                    setShowSuccess(true)\n                    onClose()\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        error.response.status === 409 ? setShowEmailError(true) : setShowError(true)\n                    }\n                })\n        }\n        else {\n            setShowPasswordError(true)\n        }\n    }, [email, password, confirmPassword, onClose])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleRegister();\n            }\n        }\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        }\n    }, [open, handleRegister])\n\n    return (\n        <>\n            <Dialog open={open ? open : false} onClose={onClose}>\n                <DialogTitle>\n                    Register\n                <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                    <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                    <TextField label='Password' type='password' fullWidth value={confirmPassword} onChange={(event) => { setConfirmPassword(event.target.value) }} />\n                    <DialogActions>\n                        <Button onClick={handleRegister} color='primary'>Register</Button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n\n            <Snackbar open={showSuccess} autoHideDuration={3000} onClose={() => { setShowSuccess(false) }}>\n                <Alert onClose={() => { setShowSuccess(false) }} severity=\"success\">\n                    Account created!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showError} autoHideDuration={3000} onClose={() => { setShowError(false) }}>\n                <Alert onClose={() => { setShowError(false) }} severity=\"error\">\n                    Registration error\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showEmailError} autoHideDuration={3000} onClose={() => { setShowEmailError(false) }}>\n                <Alert onClose={() => { setShowEmailError(false) }} severity=\"info\">\n                    Email already registered\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showPasswordError} autoHideDuration={3000} onClose={() => { setShowPasswordError(false) }}>\n                <Alert onClose={() => { setShowPasswordError(false) }} severity=\"info\">\n                    Password does not match\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}","import React, { useState, useContext } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { AppBar, Toolbar, Button, IconButton, Grid, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Login from './Auth/Login'\nimport Register from './Auth/Register'\nimport { UserContext } from '../../UserContext'\nimport GitHubIcon from '@material-ui/icons/GitHub'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginBottom: theme.spacing(5)\n    }\n}))\n\nexport default () => {\n\n    const { user, setUser } = useContext(UserContext)\n    const [showLogin, setShowLogin] = useState(false)\n    const [showRegister, setShowRegister] = useState(false)\n\n    const classes = useStyles()\n\n    const handleLogout = () => {\n        setUser(null);\n        localStorage.removeItem('token');\n        window.location.reload()\n    }\n\n    const renderButtons = !user ?\n        [\n            <Button color=\"inherit\" onClick={() => { setShowLogin(true) }} key={'login'}>Login</Button>,\n            <Button color=\"inherit\" onClick={() => { setShowRegister(true) }} key={'register'}>Register</Button>\n        ]\n        :\n        [\n            <Button color=\"inherit\" component={NavLink} to='/dashboard' key={'dashboard'}>Dashboard</Button>,\n            <Button color=\"inherit\" onClick={handleLogout} key={'logout'}>Logout</Button>\n        ]\n\n    return (\n        <>\n            <AppBar position='static' className={classes.root}>\n                <Toolbar>\n                    <Grid container spacing={1} justify='space-between' alignItems='center'>\n                        <Grid item xs={8}>\n                            <div style={{ display: 'inline-flex', alignItems: 'center' }}>\n                                <IconButton onClick={() => window.open('https://github.com/bmai53/budget-tracker', \"_blank\")}>\n                                    <GitHubIcon fontSize='large' color='secondary' />\n                                </IconButton>\n                                <Typography variant='h4'>Budget Tracker</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={4} style={{ textAlign: 'right' }}>\n                            {renderButtons}\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Login open={showLogin} onClose={() => setShowLogin(false)} />\n            <Register open={showRegister} onClose={() => setShowRegister(false)} />\n        </>\n    )\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { makeStyles } from '@material-ui/core/styles'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\nexport default ({ open, onClose, data, categoriesList, getActivities }) => {\n    const [name, setName] = useState(data.name)\n    const [amount, setAmount] = useState(data.amount)\n    const [date, setDate] = useState(moment(data.date).format('YYYY-MM-DD'))\n    const [categoryId, setCategoryId] = useState(data.category_id)\n    const [type, setType] = useState(data.type)\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.put(process.env.REACT_APP_BACKEND_URL + 'activity/updateActivity', {\n            id: data.id,\n            updateData: {\n                name: name,\n                amount: amount,\n                date: date,\n                category_id: categoryId,\n                type: type\n            }\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            },\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }, [getActivities, name, amount, date, categoryId, type, token, data.id, onClose])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'activity/deleteActivity', {\n            data: {\n                id: data.id\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [handleSubmit, open])\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle>\n                Edit Activities\n                <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Name' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <TextField label='Amount' type='number' fullWidth value={amount} onChange={(event) => { setAmount(event.target.value) }} />\n                <TextField label='Date' type='date' fullWidth value={date} InputLabelProps={{ shrink: true }} onChange={event => setDate(event.target.value)} />\n                <TextField label='Category' type='number' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <TextField label='Type' fullWidth value={type} select onChange={event => setType(event.target.value)}>\n                    <MenuItem value={'expense'}>Expense</MenuItem>\n                    <MenuItem value={'income'}>Income</MenuItem>\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                    <Button onClick={handleSubmit} color='primary'>Update</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    positive: {\n        color: theme.palette.positive.main\n    },\n    negative: {\n        color: theme.palette.negative.main\n    }\n}))\n\nexport default ({ data }) => {\n    let total = 0\n    data.forEach(d => {\n        d.type === 'income' ? total += parseFloat(d.amount) : total -= parseFloat(d.amount)\n    })\n\n    const classes = useStyles()\n    return (\n        <>\n            <Typography variant='h3' display='inline'>\n                Activities Total:&nbsp;\n            </Typography>\n            <Typography variant='h3' display='inline' className={total >= 0 ? classes.positive : classes.negative}>\n                ${total.toFixed(2)}\n            </Typography>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\n    TablePagination, Paper, IconButton, Tooltip, CircularProgress, TextField, MenuItem\n} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit';\nimport moment from 'moment'\nimport EditActivity from './EditActivity';\nimport ActivityTotal from './ActivityTotal'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        maxWidth: 1000,\n    },\n    tableHeader: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    income: {\n        color: theme.palette.positive.main\n    },\n    expense: {\n        color: theme.palette.negative.main\n    }\n}))\n\nexport default ({ activitiesList, categoriesList, getActivities, loading }) => {\n    const [data, setData] = useState([])\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5)\n    const [categoryFilter, setCategoryFilter] = useState('None')\n    const [showEditActivity, setShowEditActivity] = useState(false)\n    const [editRow, setEditRow] = useState() // store data of row to edit\n\n    useEffect(() => {\n        const filteredData = activitiesList.filter(a => a.category_name === categoryFilter)\n        if (categoryFilter === 'None') {\n            setData(activitiesList)\n        }\n        else {\n            setData(filteredData)\n        }\n    }, [activitiesList, categoriesList, categoryFilter])\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    }\n\n\n    const classes = useStyles()\n    const rows = data.map(row => (\n        <TableRow key={row.id}>\n            <TableCell>{row.name}</TableCell>\n            <TableCell align=\"right\">{moment(row.date).format('MMMM D, YYYY')}</TableCell>\n            <TableCell align=\"right\">{row.amount}</TableCell>\n            <TableCell align=\"right\">{row.category_name}</TableCell>\n            <TableCell align=\"right\" className={row.type === 'income' ? classes.income : classes.expense} >\n                {row.type.charAt(0).toUpperCase() + row.type.slice(1)}\n            </TableCell>\n            <TableCell>\n                <Tooltip title='Edit'>\n                    <IconButton onClick={() => {\n                        setShowEditActivity(true)\n                        setEditRow(row)\n                    }}>\n                        <EditIcon />\n                    </IconButton>\n                </Tooltip>\n            </TableCell>\n        </TableRow>\n    ))\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <>\n            <Paper className={classes.table}>\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell colSpan={4}>\n                                    <ActivityTotal data={data} />\n                                </TableCell>\n                                <TableCell colSpan={2} align='right'>\n                                    <TextField label='Category Filter' type='text' fullWidth value={categoryFilter} select onChange={e => setCategoryFilter(e.target.value)}>\n                                        <MenuItem value='None' key='None'>None</MenuItem>\n                                        {categoriesList.map(c => <MenuItem value={c.name} key={c.name}>{c.name}</MenuItem>)}\n                                    </TextField>\n                                </TableCell>\n                            </TableRow>\n       \n                            <TableRow>\n                                <TableCell className={classes.tableHeader}>Name</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Date</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Amount</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Category</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Type</TableCell>\n                                <TableCell className={classes.tableHeader} padding='checkbox' />\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                loading ?\n                                    <TableRow>\n                                        <TableCell colSpan={6} align='center'>\n                                            <CircularProgress size={100} color=\"primary\" />\n                                        </TableCell>\n                                    </TableRow>\n                                    :\n                                    rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            }\n                            {\n                                rows.length === 0 ?\n                                    <TableRow>\n                                        <TableCell colSpan={6} align='center'>\n                                            <Typography>No activities found</Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                    :\n                                    emptyRows > 0 && (\n                                        <TableRow key={'empty rows'} style={{ height: (53) * emptyRows }}>\n                                            <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            {\n                // test for showEditActivity to remount dialog to reset initial useState()\n                editRow && showEditActivity ?\n                    <EditActivity\n                        categoriesList={categoriesList}\n                        getActivities={getActivities}\n                        data={editRow}\n                        open={showEditActivity}\n                        onClose={() => {\n                            setShowEditActivity(false)\n                            setEditRow({})\n                        }}\n                    />\n                    :\n                    <></>\n            }\n        </>\n    )\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem, Box } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport default ({ open, onClose, categoriesList, getActivities, setShowEditCategory }) => {\n\n    const [name, setName] = useState('')\n    const [amount, setAmount] = useState(0)\n    const [date, setDate] = useState('')\n    const [categoryId, setCategoryId] = useState('')\n    const [type, setType] = useState('')\n    // const [categoriesList, setCategoriesList] = useState([])\n\n    const handleSubmit = useCallback(() => {\n        const token = localStorage.getItem('token')\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'activity/addActivity', {\n            name: name,\n            amount: amount,\n            date: date,\n            category_id: categoryId,\n            type: type,\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then((response) => {\n                getActivities()\n                onClose()\n            })\n    }, [getActivities, onClose, amount, categoryId, date, name, type])\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit()\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener)\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener)\n        };\n    }, [open, handleSubmit])\n\n    return (\n        <Dialog open={open ? open : false} onClose={onClose}>\n            <DialogTitle>\n                Add Activity\n                <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Name' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <TextField label='Amount' type='number' fullWidth value={amount} onChange={(event) => { setAmount(event.target.value) }} />\n                <TextField label='Date' type='date' fullWidth value={date} InputLabelProps={{ shrink: true }} onChange={event => setDate(event.target.value)} />\n                <Box width='100%' style={{ display: 'inline-flex' }}>\n                    <TextField label='Category' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                        {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                    </TextField>\n                    <DialogActions>\n                        <Button\n                            color='primary'\n                            onClick={() => {\n                                onClose()\n                                setShowEditCategory(true)\n                            }}\n                        >\n                            Add Category\n                        </Button>\n                    </DialogActions>\n                </Box>\n                <TextField label='Type' fullWidth value={type} select onChange={event => setType(event.target.value)}>\n                    <MenuItem value={'expense'}>Expense</MenuItem>\n                    <MenuItem value={'income'}>Income</MenuItem>\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleSubmit} color='primary'>Submit</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\n\nexport default ({ open, onClose, categoriesList, getCategories, getActivities }) => {\n    const [name, setName] = useState('')\n    const [categoryId, setCategoryId] = useState('')\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'category/addCategory', {\n            name: name\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                setName('')\n                getCategories()\n                onClose()\n            })\n    }, [name, onClose, token, getCategories])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'category/deleteCategory', {\n            data: {\n                id: categoryId\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getCategories()\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [open, handleSubmit])\n\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle>\n                Edit Categories\n                <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Add New Category' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <DialogActions>\n                    <Button onClick={handleSubmit} color='primary'>Add</Button>\n                </DialogActions>\n\n                <TextField label='Delete Existing Category' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                </DialogActions>\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Nav from './Components/Nav'\nimport ActivityTable from './Components/Data/ActivityTable'\nimport { UserContext } from '../UserContext'\nimport { Button, ButtonGroup, Typography, Box } from '@material-ui/core'\nimport AddActivity from './Components/Data/AddActivity'\nimport EditCategory from './Components/Data/EditCategory'\n\nexport default () => {\n    const { user } = useContext(UserContext)\n    const [loading, setLoading] = useState(true)\n    const [activitiesList, setActivitiesList] = useState([])\n    const [categoriesList, setCategoriesList] = useState([])\n    const [showAddActivity, setShowAddActivity] = useState(false)\n    const [showEditCategory, setShowEditCategory] = useState(false)\n\n    const getActivities = () => {\n        setLoading(true)\n        const token = localStorage.getItem('token')\n        axios.get(process.env.REACT_APP_BACKEND_URL + 'activity/getActivities', {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        }).then((response) => {\n            setActivitiesList(response.data)\n            setLoading(false)\n        })\n    }\n\n    const getCategories = () => {\n        setLoading(true)\n        const token = localStorage.getItem('token')\n        axios.get(process.env.REACT_APP_BACKEND_URL + 'category/getCategories', {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        }).then((response) => {\n            setCategoriesList(response.data)\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        getActivities()\n        getCategories()\n    }, [user])\n\n    if (!user) {\n        return (\n            <>\n                <Nav />\n                <Typography>You must be logged in to access this page.</Typography>\n            </>\n        )\n    }\n\n    return (\n        <>\n            <Nav />\n            <Box align=\"center\">\n                <ActivityTable activitiesList={activitiesList} categoriesList={categoriesList} getActivities={getActivities} loading={loading} />\n            </Box>\n            <br />\n            <Box align=\"center\">\n                <ButtonGroup variant=\"contained\" size=\"large\" color=\"primary\" >\n                    <Button onClick={() => { setShowAddActivity(true) }} key={'addActivity'}>Add Activity</Button>\n                    <Button onClick={() => { setShowEditCategory(true) }} key={'editCategory'}>Edit Categories</Button>\n                </ButtonGroup>\n            </Box>\n            <AddActivity categoriesList={categoriesList} open={showAddActivity} setShowEditCategory={setShowEditCategory} getActivities={getActivities} onClose={() => setShowAddActivity(false)} />\n            <EditCategory categoriesList={categoriesList} open={showEditCategory} getCategories={getCategories} getActivities={getActivities} onClose={() => setShowEditCategory(false)} />\n        </>\n    )\n}","import React from 'react'\nimport Nav from './Components/Nav'\nimport { Typography } from '@material-ui/core'\n\nexport default () => {\n    return (\n        <>\n            <Nav />\n            <Typography variant='h1' align='center'>Welcome to Budget Tracker</Typography>\n            <Typography variant='h3' align='center'>Log in or register to get started!</Typography>\n            \n        </>\n    )\n}\n","import React, { useEffect, useContext } from 'react'\nimport axios from 'axios'\nimport { UserContext } from '../../../UserContext'\n\n// check if token exists\nexport default () => {\n    const {user, setUser} = useContext(UserContext)\n\n    useEffect( () => {\n        const token = localStorage.getItem('token')\n        if(!user && token){\n            axios.get(process.env.REACT_APP_BACKEND_URL + 'auth/findUser', {\n                headers: { Authorization: `JWT ${token}` }\n            }).then(response => {\n                setUser(response.data.auth);\n            })\n        } \n    }, [user, setUser])\n\n    return(\n        <>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { Switch, Route, Redirect } from \"react-router-dom\"\nimport Dashboard from './views/Dashboard'\nimport LandingPage from './views/LandingPage'\nimport { UserContext } from './UserContext'\nimport Init from './views/Components/Auth/Init'\n\nexport default () => {\n\n  const [user, setUser] = useState(null)\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <Init />\n      <Switch>\n        <Route exact path=\"/\">\n          {user ? <Redirect to='/dashboard'/> : <LandingPage />}\n        </Route>\n        <Route path=\"/home\" render={() => <LandingPage />} />\n        <Route path=\"/dashboard\" render={() => <Dashboard />} />\n        {\n          user ?\n            <Route render={() => <Redirect to=\"/dashboard\" />} /> :\n            <Route render={() => <Redirect to=\"/\" />} />\n        }\n      </Switch>\n    </UserContext.Provider>\n  )\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport 'typeface-roboto'\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#35B234',        // Light green\n            contrastText: \"#FFFFFF\" \n        },\n        secondary: {\n            main: '#FFFFFF'     // White\n        },\n        positive: {\n            main: '#4caf50'      // default palette success\n        },\n        negative: {\n            main: '#f44336'     // default palette error\n        },\n        background: {\n            default: '#FFFFFF',\n        },\n    },\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    },\n})\n\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <Router>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}