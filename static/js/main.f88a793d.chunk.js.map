{"version":3,"sources":["images/landing.jpg","images/budget-tracker.png","theme.js","UserContext.js","views/Components/Auth/Login.js","views/Components/Auth/Register.js","views/Components/Nav.js","views/Components/Data/EditActivity.js","views/Components/Data/ActivityTotal.js","views/Components/Data/Filter.js","views/Components/Data/ActivityTable.js","views/Components/Data/AddActivity.js","views/Components/Data/EditCategory.js","views/Components/Data/ImportCSV/HeaderMatching.js","views/Components/Data/ImportCSV/Upload.js","views/Components/Data/ImportCSV/ErrorSnackbar.js","views/Components/Data/ImportCSV/ImportCSV.js","views/Components/Graphs/Donut.js","views/Components/Graphs/LineChart.js","views/Components/Graphs/utils.js","views/DashboardGraphs.js","views/Dashboard.js","views/LandingPage.js","views/Components/Splash.js","views/Components/Auth/Init.js","App.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","main","contrastText","secondary","positive","negative","background","default","typography","fontFamily","join","UserContext","createContext","open","onClose","setUser","useContext","useState","email","setEmail","password","setPassword","waiting","setWaiting","showSuccess","setShowSuccess","showError","setShowError","handleLogin","useCallback","axios","post","process","then","response","localStorage","setItem","data","token","auth","catch","error","useEffect","enterPressListener","e","code","document","addEventListener","removeEventListener","Dialog","DialogTitle","style","backgroundColor","color","IconButton","onClick","position","top","right","DialogContent","TextField","autoFocus","label","type","fullWidth","value","onChange","event","target","DialogActions","Button","CircularProgress","size","Snackbar","autoHideDuration","Alert","severity","confirmPassword","setConfirmPassword","showEmailError","setShowEmailError","showPasswordError","setShowPasswordError","handleRegister","status","useStyles","makeStyles","root","flexGrow","marginBottom","spacing","menu","marginTop","menuCard","menuList","float","menuListButton","user","showLogin","setShowLogin","showRegister","setShowRegister","showMenu","setShowMenu","classes","useTheme","isMobile","useMediaQuery","breakpoints","down","renderButtons","window","key","component","NavLink","to","removeItem","location","href","ENV","AppBar","className","Toolbar","Grid","container","justify","alignItems","item","xs","sm","display","textTransform","Typography","variant","fontSize","Hidden","xsDown","textAlign","smUp","Collapse","in","Card","List","map","b","ListItem","Login","Register","deleteButton","categoriesList","getActivities","name","setName","amount","setAmount","moment","date","format","setDate","category_id","categoryId","setCategoryId","setType","getItem","handleSubmit","put","id","updateData","headers","Authorization","InputLabelProps","shrink","select","c","MenuItem","delete","total","forEach","d","parseFloat","toFixed","inputField","filterFooter","categoryFilter","typeFilter","dateFilter","setCategoryFilter","setTypeFilter","setDateFilter","table","maxWidth","tableHeader","common","white","income","expense","activitiesList","showFilters","setShowFilters","getfilteredList","loading","setData","page","setPage","rowsPerPage","setRowsPerPage","showEditActivity","setShowEditActivity","editRow","setEditRow","rows","row","TableRow","TableCell","align","category_name","charAt","toUpperCase","slice","Tooltip","title","emptyRows","Math","min","length","raised","TableContainer","Table","TableHead","colSpan","verticalAlign","ActivityTotal","FormControlLabel","control","Switch","checked","Filter","padding","TableBody","height","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","EditActivity","setShowEditCategory","InputProps","inputProps","Box","width","getCategories","submitHandler","categoryName","setCategoryName","FormControl","Select","element","i","uploadHandler","acceptedFiles","filesLimit","clearOnUnmount","useChipsForPreview","previewGridProps","direction","showAlerts","alertSnackbarProps","anchorOrigin","vertical","horizontal","dropzoneText","dense","disablePadding","ListItemIcon","ListItemText","file","message","parsedFile","setParsedFile","setHeaders","confirmHeaders","setConfirmHeaders","emptyCells","setEmptyCells","duplicateCol","setDuplicateCol","failedToReadFile","setFailedToReadFile","noFile","setNoFile","headerMismatch","setHeaderMismatch","DuplicateHeader","setDuplicateHeader","UploadError","setUploadError","UploadSuccess","setUploadSuccess","HeaderMatching","preventDefault","Set","indexOf","res","console","log","Upload","reader","FileReader","readAsText","onload","fileContent","result","parseResults","readString","safeToContinue","pop","onerror","ErrorSnackbar","DoughnutChart","LineChart","options","processActivityCategories","activityType","arr","filter","a","Map","has","set","Number","get","push","processsLineChartData","accumulate","extraData","extendedList","sort","expenseData","incomeData","accumulateAmounts","fillGraphDiff","lastAmount","nullIndicies","diff","abs","n","j","max","setExpenseData","setIncomeData","lineChartData","setLineChartData","parsedExpenseData","parsedIncomeData","labels","datasets","borderWidth","halfGridItemProps","fullGridItemProps","paddingTop","margin","gutterBottom","Donut","fill","borderColor","scales","yAxes","ticks","beginAtZero","setLoading","setActivitiesList","setCategoriesList","showAddActivity","setShowAddActivity","showEditCategory","showUploadCSV","setShowUploadCSV","list","filteredData","today","Date","duration","getDate","Nav","ActivityTable","ButtonGroup","AddActivity","EditCategory","DashboardGraphs","ImportCSV","styles","box","backgroundImage","landing","backgroundSize","flexBox","flexDirection","justifyContent","card","splash","lineHeight","Splash","Provider","Init","exact","path","LandingPage","render","Dashboard","ReactDOM","ThemeProvider","App","getElementById"],"mappings":"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","file":"static/js/main.f88a793d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing.ac7640ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/budget-tracker.a7be8ac8.png\";","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport \"typeface-roboto\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#35B234\", // Light green\n      contrastText: \"#FFFFFF\",\n    },\n    secondary: {\n      main: \"#FFFFFF\", // White\n    },\n    positive: {\n      main: \"#4caf50\", // default palette success\n    },\n    negative: {\n      main: \"#f44336\", // default palette error\n    },\n    background: {\n      default: \"#FFFFFF\",\n    },\n  },\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n  },\n});\n\nexport default theme;\n","import {createContext} from 'react'\n\nexport const UserContext = createContext(null)","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { UserContext } from '../../../UserContext'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, CircularProgress } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default ({ open, onClose }) => {\n\n    const { setUser } = useContext(UserContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    // wait for server response to login POST\n    const [waiting, setWaiting] = useState(false)\n\n    // snackbars\n    const [showSuccess, setShowSuccess] = useState(false)\n    const [showError, setShowError] = useState(false)\n\n    const handleLogin = useCallback(() => {\n        setWaiting(true)\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/login', {\n            email: email,\n            password: password\n        })\n            .then((response) => {\n                localStorage.setItem('token', response.data.token)\n                setUser(response.data.auth)\n                setShowSuccess(true)\n                setWaiting(false)\n                onClose()\n            })\n            .catch((error) => {\n                setShowError(true)\n                setWaiting(false)\n            })\n    }, [email, password, onClose, setUser])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleLogin();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n    }, [open, handleLogin])\n\n    return (\n        <>\n            <Dialog open={open ? open : false} onClose={onClose}>\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    Login\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                    <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                    <DialogActions>\n\n                        <Button onClick={handleLogin} color='primary'>{waiting ? <CircularProgress size={25} color=\"primary\" /> : 'Login' }</Button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n\n\n            <Snackbar open={showSuccess} autoHideDuration={3000} onClose={() => { setShowSuccess(false) }}>\n                <Alert onClose={() => { setShowSuccess(false) }} severity=\"success\">\n                    Login Success!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showError} autoHideDuration={3000} onClose={() => { setShowError(false) }}>\n                <Alert onClose={() => { setShowError(false) }} severity=\"error\">\n                    Invalid Credentials\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, CircularProgress } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default ({ open, onClose }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    // wait for server response to register POST\n    const [waiting, setWaiting] = useState(false)\n\n    // snackbars\n    const [showSuccess, setShowSuccess] = useState(false)\n    const [showError, setShowError] = useState(false)\n    const [showEmailError, setShowEmailError] = useState(false)\n    const [showPasswordError, setShowPasswordError] = useState(false)\n\n\n    const handleRegister = useCallback(() => {\n        setWaiting(true)\n        if (password === confirmPassword) {\n            axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/register', {\n                email: email,\n                password: password\n            })\n                .then((response) => {\n                    setEmail('')\n                    setPassword('')\n                    setConfirmPassword('')\n                    setShowSuccess(true)\n                    onClose()\n                    setWaiting(false)\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        error.response.status === 409 ? setShowEmailError(true) : setShowError(true)\n                    }\n                    setWaiting(false)\n                })\n        }\n        else {\n            setShowPasswordError(true)\n        }\n    }, [email, password, confirmPassword, onClose])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleRegister();\n            }\n        }\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        }\n    }, [open, handleRegister])\n\n    return (\n        <>\n            <Dialog open={open ? open : false} onClose={onClose}>\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    Register\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                    <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                    <TextField label='Confirm Password' type='password' fullWidth value={confirmPassword} onChange={(event) => { setConfirmPassword(event.target.value) }} />\n                    <DialogActions>\n                        <Button onClick={handleRegister} color='primary'>{waiting ? <CircularProgress size={25} color=\"primary\" /> : 'Register'}</Button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n\n            <Snackbar open={showSuccess} autoHideDuration={3000} onClose={() => { setShowSuccess(false) }}>\n                <Alert onClose={() => { setShowSuccess(false) }} severity=\"success\">\n                    Account created!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showError} autoHideDuration={3000} onClose={() => { setShowError(false) }}>\n                <Alert onClose={() => { setShowError(false) }} severity=\"error\">\n                    Registration error\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showEmailError} autoHideDuration={3000} onClose={() => { setShowEmailError(false) }}>\n                <Alert onClose={() => { setShowEmailError(false) }} severity=\"info\">\n                    Email already registered\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showPasswordError} autoHideDuration={3000} onClose={() => { setShowPasswordError(false) }}>\n                <Alert onClose={() => { setShowPasswordError(false) }} severity=\"info\">\n                    Password does not match\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}","import React, { useState, useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  IconButton,\n  Grid,\n  Typography,\n  Collapse,\n  Card,\n  List,\n  ListItem,\n  Hidden,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Login from \"./Auth/Login\";\nimport Register from \"./Auth/Register\";\nimport { UserContext } from \"../../UserContext\";\nimport EcoIcon from \"@material-ui/icons/Eco\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(5),\n  },\n  menu: {\n    marginTop: -theme.spacing(6),\n    backgroundColor: theme.palette.primary.main,\n  },\n  menuCard: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  menuList: {\n    float: \"right\",\n  },\n  menuListButton: {\n    color: \"white\",\n  },\n}));\n\nexport default () => {\n  const { user, setUser } = useContext(UserContext);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem(\"token\");\n    window.location.href =\n      process.env.ENV === \"DEV\" ? \"/home\" : \"/budget-tracker/\";\n  };\n\n  const renderButtons = !user\n    ? [\n        <Button\n          color='inherit'\n          onClick={() =>\n            window.open(\"https://github.com/bmai53/budget-tracker\", \"_blank\")\n          }\n          key={\"github\"}\n        >\n          GitHub Repo\n        </Button>,\n        <Button\n          color='inherit'\n          onClick={() => {\n            setShowLogin(true);\n          }}\n          key={\"login\"}\n        >\n          Login\n        </Button>,\n        <Button\n          color='inherit'\n          onClick={() => {\n            setShowRegister(true);\n          }}\n          key={\"register\"}\n        >\n          Register\n        </Button>,\n      ]\n    : [\n        <Button\n          color='inherit'\n          onClick={() =>\n            window.open(\"https://github.com/bmai53/budget-tracker\", \"_blank\")\n          }\n          key={\"github\"}\n        >\n          GitHub Repo\n        </Button>,\n        <Button\n          color='inherit'\n          component={NavLink}\n          to='/dashboard'\n          key={\"dashboard\"}\n        >\n          Dashboard\n        </Button>,\n        <Button color='inherit' onClick={handleLogout} key={\"logout\"}>\n          Logout\n        </Button>,\n      ];\n\n  return (\n    <>\n      <AppBar position='static' className={classes.root}>\n        <Toolbar>\n          <Grid\n            container\n            spacing={1}\n            justify='space-between'\n            alignItems='center'\n          >\n            <Grid item xs={8} sm={6}>\n              <div style={{ display: \"inline-flex\", alignItems: \"center\" }}>\n                <Button\n                  style={{ textTransform: \"none\" }}\n                  color='inherit'\n                  component={NavLink}\n                  to='/home'\n                >\n                  <Typography variant={isMobile ? \"h6\" : \"h4\"}>\n                    Budget Tracker\n                    <EcoIcon fontSize='inherit' color='secondary' />\n                  </Typography>\n                </Button>\n              </div>\n            </Grid>\n            <Hidden xsDown>\n              <Grid item xs={4} sm={6} style={{ textAlign: \"right\" }}>\n                {renderButtons}\n              </Grid>\n            </Hidden>\n            <Hidden smUp>\n              <Grid item xs={4} sm={6} style={{ textAlign: \"right\" }}>\n                <IconButton onClick={() => setShowMenu(!showMenu)}>\n                  <MenuIcon fontSize='large' color='secondary' />\n                </IconButton>\n              </Grid>\n            </Hidden>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      {showMenu && (\n        <Collapse in={showMenu} className={classes.menu}>\n          <Card className={classes.menuCard}>\n            <List className={classes.menuList}>\n              {renderButtons.map((b) => (\n                <ListItem className={classes.menuListButton}>{b}</ListItem>\n              ))}\n            </List>\n          </Card>\n        </Collapse>\n      )}\n      <Login open={showLogin} onClose={() => setShowLogin(false)} />\n      <Register open={showRegister} onClose={() => setShowRegister(false)} />\n    </>\n  );\n};\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { makeStyles } from '@material-ui/core/styles'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\nexport default ({ open, onClose, data, categoriesList, getActivities }) => {\n    const [name, setName] = useState(data.name)\n    const [amount, setAmount] = useState(data.amount)\n    const [date, setDate] = useState(moment(data.date).format('YYYY-MM-DD'))\n    const [categoryId, setCategoryId] = useState(data.category_id)\n    const [type, setType] = useState(data.type)\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.put(process.env.REACT_APP_BACKEND_URL + 'activity/updateActivity', {\n            id: data.id,\n            updateData: {\n                name: name,\n                amount: amount,\n                date: date,\n                category_id: categoryId,\n                type: type\n            }\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            },\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }, [getActivities, name, amount, date, categoryId, type, token, data.id, onClose])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'activity/deleteActivity', {\n            data: {\n                id: data.id\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [handleSubmit, open])\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                Edit Activity\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Name' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <TextField label='Amount' type='number' fullWidth value={amount} onChange={(event) => { setAmount(event.target.value) }} />\n                <TextField label='Date' type='date' fullWidth value={date} InputLabelProps={{ shrink: true }} onChange={event => setDate(event.target.value)} />\n                <TextField label='Category' type='number' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <TextField label='Type' fullWidth value={type} select onChange={event => setType(event.target.value)}>\n                    <MenuItem value={'expense'}>Expense</MenuItem>\n                    <MenuItem value={'income'}>Income</MenuItem>\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                    <Button onClick={handleSubmit} color='primary'>Update</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    positive: {\n        color: theme.palette.positive.main\n    },\n    negative: {\n        color: theme.palette.negative.main\n    }\n}))\n\nexport default ({ data }) => {\n    let total = 0\n    data.forEach(d => {\n        d.type === 'income' ? total += parseFloat(d.amount) : total -= parseFloat(d.amount)\n    })\n\n    const classes = useStyles()\n    return (\n        <>\n            <Typography variant='h3' display='inline'>\n                Activities Total:&nbsp;\n            </Typography>\n            <Typography variant='h3' display='inline' className={total >= 0 ? classes.positive : classes.negative}>\n                ${total.toFixed(2)}\n            </Typography>\n        </>\n    )\n}","import React from \"react\";\n\nimport { TextField, MenuItem, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputField: {\n    marginBottom: \"24px\",\n  },\n\n  filterFooter: {\n    textAlign: \"center\",\n  },\n}));\n\nexport default ({\n  categoriesList,\n  categoryFilter,\n  typeFilter,\n  dateFilter,\n  setCategoryFilter,\n  setTypeFilter,\n  setDateFilter,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <TextField\n        className={classes.inputField}\n        label='Category Filter'\n        type='text'\n        fullWidth\n        select\n        value={categoryFilter}\n        onChange={(e) => setCategoryFilter(e.target.value)}\n      >\n        <MenuItem value='all' key='all'>\n          All\n        </MenuItem>\n        {categoriesList.map((c) => (\n          <MenuItem value={c.name} key={c.name}>\n            {c.name}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        className={classes.inputField}\n        label='Type Filter'\n        type='text'\n        fullWidth\n        select\n        value={typeFilter}\n        onChange={(e) => setTypeFilter(e.target.value)}\n      >\n        <MenuItem value='all'>All</MenuItem>\n        <MenuItem value='income'>Income</MenuItem>\n        <MenuItem value='expense'>Expense</MenuItem>\n      </TextField>\n      <TextField\n        className={classes.inputField}\n        label='Date Filter'\n        type='text'\n        fullWidth\n        select\n        value={dateFilter}\n        onChange={(e) => setDateFilter(e.target.value)}\n      >\n        <MenuItem value={0}>All</MenuItem>\n        <MenuItem value={30}>30 Days</MenuItem>\n        <MenuItem value={60}>60 Days</MenuItem>\n        <MenuItem value={180}>180 Days</MenuItem>\n        <MenuItem value={362}>1 Year</MenuItem>\n      </TextField>\n\n      <div className={classes.filterFooter}>\n        <Button\n          color='primary'\n          onClick={() => {\n            setCategoryFilter(\"all\");\n            setTypeFilter(\"all\");\n            setDateFilter(0);\n          }}\n        >\n          Clear Filters\n        </Button>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  IconButton,\n  Tooltip,\n  CircularProgress,\n  FormControlLabel,\n  Switch,\n  Collapse,\n  Grid,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport moment from \"moment\";\nimport EditActivity from \"./EditActivity\";\nimport ActivityTotal from \"./ActivityTotal\";\nimport Filter from \"./Filter\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    maxWidth: 1000,\n  },\n  tableHeader: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n  },\n  income: {\n    color: theme.palette.positive.main,\n  },\n  expense: {\n    color: theme.palette.negative.main,\n  },\n}));\n\nexport default ({\n  activitiesList,\n  categoriesList,\n  getActivities,\n  categoryFilter,\n  setCategoryFilter,\n  typeFilter,\n  setTypeFilter,\n  dateFilter,\n  setDateFilter,\n  showFilters,\n  setShowFilters,\n  getfilteredList,\n  loading,\n}) => {\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [showEditActivity, setShowEditActivity] = useState(false);\n  const [editRow, setEditRow] = useState(); // store data of row to edit\n\n  useEffect(() => {\n    setData(getfilteredList(activitiesList));\n  }, [activitiesList, categoriesList, categoryFilter, typeFilter, dateFilter]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const classes = useStyles();\n  const rows = data.map((row) => (\n    <TableRow key={row.id}>\n      <TableCell>{row.name}</TableCell>\n      <TableCell align='right'>\n        {moment(row.date).format(\"MMMM D, YYYY\")}\n      </TableCell>\n      <TableCell align='right'>{row.amount}</TableCell>\n      <TableCell align='right'>{row.category_name}</TableCell>\n      <TableCell\n        align='right'\n        className={row.type === \"income\" ? classes.income : classes.expense}\n      >\n        {row.type.charAt(0).toUpperCase() + row.type.slice(1)}\n      </TableCell>\n      <TableCell>\n        <Tooltip title='Edit'>\n          <IconButton\n            onClick={() => {\n              setShowEditActivity(true);\n              setEditRow(row);\n            }}\n          >\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n      </TableCell>\n    </TableRow>\n  ));\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <>\n      <Card raised className={classes.table}>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell colSpan={4} style={{ verticalAlign: \"top\" }}>\n                  <ActivityTotal data={data} />\n                </TableCell>\n                <TableCell colSpan={2} align='right'>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        color='primary'\n                        checked={showFilters}\n                        onChange={() => {\n                          setShowFilters(!showFilters);\n                        }}\n                      />\n                    }\n                    label='Show Filters'\n                  />\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={6}>\n                  <Grid container justify='flex-end'>\n                    <Grid item xs={12} sm={6}>\n                      <Collapse in={showFilters}>\n                        <Filter\n                          categoriesList={categoriesList}\n                          categoryFilter={categoryFilter}\n                          typeFilter={typeFilter}\n                          dateFilter={dateFilter}\n                          setCategoryFilter={setCategoryFilter}\n                          setTypeFilter={setTypeFilter}\n                          setDateFilter={setDateFilter}\n                        />\n                      </Collapse>\n                    </Grid>\n                  </Grid>\n                </TableCell>\n              </TableRow>\n\n              <TableRow>\n                <TableCell className={classes.tableHeader}>Name</TableCell>\n                <TableCell className={classes.tableHeader} align='right'>\n                  Date\n                </TableCell>\n                <TableCell className={classes.tableHeader} align='right'>\n                  Amount\n                </TableCell>\n                <TableCell className={classes.tableHeader} align='right'>\n                  Category\n                </TableCell>\n                <TableCell className={classes.tableHeader} align='right'>\n                  Type\n                </TableCell>\n                <TableCell className={classes.tableHeader} padding='checkbox' />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading ? (\n                <TableRow>\n                  <TableCell colSpan={6} align='center'>\n                    <CircularProgress size={100} color='primary' />\n                  </TableCell>\n                </TableRow>\n              ) : (\n                rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              )}\n              {rows.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={6} align='center'>\n                    <Typography>No activities found</Typography>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                emptyRows > 0 && (\n                  <TableRow\n                    key={\"empty rows\"}\n                    style={{ height: 53 * emptyRows }}\n                  >\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component='div'\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Card>\n      {\n        // test for showEditActivity to remount dialog to reset initial useState()\n        editRow && showEditActivity ? (\n          <EditActivity\n            categoriesList={categoriesList}\n            getActivities={getActivities}\n            data={editRow}\n            open={showEditActivity}\n            onClose={() => {\n              setShowEditActivity(false);\n              setEditRow({});\n            }}\n          />\n        ) : (\n          <></>\n        )\n      }\n    </>\n  );\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport theme from \"../../../theme\";\nimport {\n  DialogTitle,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  Button,\n  IconButton,\n  TextField,\n  MenuItem,\n  Box,\n} from \"@material-ui/core\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nexport default ({\n  open,\n  onClose,\n  categoriesList,\n  getActivities,\n  setShowEditCategory,\n}) => {\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [date, setDate] = useState(\"\");\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  // const [categoriesList, setCategoriesList] = useState([])\n\n  const handleSubmit = useCallback(() => {\n    const token = localStorage.getItem(\"token\");\n    axios\n      .post(\n        process.env.REACT_APP_BACKEND_URL + \"activity/addActivity\",\n        {\n          name: name,\n          amount: amount,\n          date: date,\n          category_id: categoryId,\n          type: type,\n        },\n        {\n          headers: {\n            Authorization: `JWT ${token}`,\n          },\n        }\n      )\n      .then(() => {\n        setName(\"\");\n        setAmount(0);\n        setDate(\"\");\n        setCategoryId(\"\");\n        setType(\"\");\n        getActivities();\n        onClose();\n      });\n  }, [getActivities, onClose, amount, categoryId, date, name, type]);\n\n  useEffect(() => {\n    // Add event listener that will check for enter presses and preform action if so\n    const enterPressListener = (e) => {\n      if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n        handleSubmit();\n      }\n    };\n    document.addEventListener(\"keydown\", enterPressListener);\n\n    return () => {\n      document.removeEventListener(\"keydown\", enterPressListener);\n    };\n  }, [open, handleSubmit]);\n\n  return (\n    <Dialog open={open ? open : false} onClose={onClose}>\n      <DialogTitle\n        style={{\n          backgroundColor: theme.palette.primary.main,\n          color: \"white\",\n        }}\n      >\n        Add Activity\n        <IconButton\n          color='secondary'\n          onClick={onClose}\n          style={{ position: \"absolute\", top: 0, right: 0 }}\n        >\n          <CancelIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          label='Name'\n          type='text'\n          fullWidth\n          value={name}\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n        <TextField\n          label='Amount'\n          type='number'\n          InputProps={{\n            inputProps: {\n              min: 0,\n            },\n          }}\n          fullWidth\n          value={amount}\n          onChange={(event) => {\n            setAmount(event.target.value);\n          }}\n        />\n        <TextField\n          label='Date'\n          type='date'\n          fullWidth\n          value={date}\n          InputLabelProps={{ shrink: true }}\n          onChange={(event) => setDate(event.target.value)}\n        />\n        <Box width='100%' style={{ display: \"inline-flex\" }}>\n          <TextField\n            label='Category'\n            fullWidth\n            value={categoryId}\n            select\n            onChange={(event) => setCategoryId(event.target.value)}\n          >\n            {categoriesList.map((c) => (\n              <MenuItem value={c.id} key={c.id}>\n                {c.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          <DialogActions style={{ position: \"relative\", top: \"10px\" }}>\n            <Button\n              color='primary'\n              onClick={() => {\n                onClose();\n                setShowEditCategory(true);\n              }}\n            >\n              Add New Category\n            </Button>\n          </DialogActions>\n        </Box>\n        <TextField\n          label='Type'\n          fullWidth\n          value={type}\n          select\n          onChange={(event) => setType(event.target.value)}\n        >\n          <MenuItem value={\"expense\"}>Expense</MenuItem>\n          <MenuItem value={\"income\"}>Income</MenuItem>\n        </TextField>\n        <DialogActions>\n          <Button onClick={handleSubmit} color='primary'>\n            Submit\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\n\nexport default ({ open, onClose, categoriesList, getCategories, getActivities }) => {\n    const [name, setName] = useState('')\n    const [categoryId, setCategoryId] = useState('')\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'category/addCategory', {\n            name: name\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                setName('')\n                getCategories()\n                onClose()\n            })\n    }, [name, onClose, token, getCategories])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'category/deleteCategory', {\n            data: {\n                id: categoryId\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getCategories()\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [open, handleSubmit])\n\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                Edit Categories\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Add New Category' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <DialogActions>\n                    <Button onClick={handleSubmit} color='primary'>Add</Button>\n                </DialogActions>\n\n                <TextField label='Delete Existing Category' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                </DialogActions>\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\n\n\nexport default ({ submitHandler, headers, date, name, categoryName, amount, type, setDate, setName, setCategoryName, setAmount, setType }) => {\n\n    return (\n        <>\n            <Grid container spacing={3}>\n                <Grid item xs={3}>\n                    {/* empty for spacing purposes */}\n                </Grid>\n                <Grid item xs={9}>\n                    <Typography variant=\"h5\" align=\"center\" color=\"primary\">Columns found in CSV file</Typography>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Date:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setDate(e.target.value)} value={date}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Name:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setName(e.target.value)} value={name}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Category:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setCategoryName(e.target.value)} value={categoryName}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Amount:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setAmount(e.target.value)} value={amount}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Type:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setType(e.target.value)} value={type}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n\n            <DialogActions>\n                <Button onClick={submitHandler} size='large' color='primary'>Submit</Button>\n            </DialogActions>\n        </>\n    )\n}","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\n\nexport default ({ uploadHandler }) => {\n\n    return (\n        <>\n            <DropzoneArea\n                acceptedFiles={['.csv']}\n                filesLimit={1}\n                clearOnUnmount\n                useChipsForPreview\n                previewGridProps={{ container: { justify: 'center', spacing: 3, direction: 'row' } }}\n                showAlerts={['error', 'info']}\n                alertSnackbarProps={{\n                    anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\n                    autoHideDuration: 3000\n                }}\n                dropzoneText={\n                    <div style={{ padding: '0 25px 0 25px' }}>\n                        <Typography variant=\"h6\" align=\"center\" color=\"primary\">\n                            Drag and drop or click to upload a CSV file.\n                        </Typography>\n                        <br />\n                        <Typography align=\"justify\" >\n                            Please ensure the CSV file has the following columns:\n                        </Typography>\n                        <List dense disablePadding>\n                            <ListItem >\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Date (YYYY-MM-DD)\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Name\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Amount\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Category\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Type (income or expense)\" />\n                            </ListItem>\n                        </List>\n                    </div>\n                }\n                onChange={(file) => { uploadHandler(file) }}\n            />\n\n            <br />\n\n\n        </>\n    )\n}","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\n\nexport default ({ open, onClose, message, severity }) => {\n\n    return (\n        <Snackbar open={open} autoHideDuration={3000} onClose={onClose}>\n            <Alert onClose={onClose} severity={severity}>\n                {message}\n            </Alert>\n        </Snackbar>\n    )\n}","import React, { useState } from 'react'\nimport axios from 'axios'\nimport theme from '../../../../theme'\nimport { DialogTitle, Dialog, DialogContent, IconButton, } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport { readString } from 'react-papaparse'\nimport HeaderMatching from './HeaderMatching';\nimport Upload from './Upload'\nimport ErrorSnackbar from './ErrorSnackbar'\n\n\nexport default ({ open, onClose, getActivities, getCategories }) => {\n    const [parsedFile, setParsedFile] = useState([])\n    const [headers, setHeaders] = useState([])                      // headers from file\n    const [confirmHeaders, setConfirmHeaders] = useState(false)     // display header confirmation form\n\n    // headers\n    const [date, setDate] = useState('')\n    const [name, setName] = useState('')\n    const [categoryName, setCategoryName] = useState('')\n    const [amount, setAmount] = useState('')\n    const [type, setType] = useState('')\n\n    // snackbars\n    const [emptyCells, setEmptyCells] = useState(false)\n    const [duplicateCol, setDuplicateCol] = useState(false)\n    const [failedToReadFile, setFailedToReadFile] = useState(false)\n    const [noFile, setNoFile] = useState(false)\n    const [headerMismatch, setHeaderMismatch] = useState(false)\n    const [DuplicateHeader, setDuplicateHeader] = useState(false)\n    const [UploadError, setUploadError] = useState(false)\n    const [UploadSuccess, setUploadSuccess] = useState(false)\n\n\n    const uploadHandler = (file) => {\n\n\n        if (file.length > 0) {\n            // reading headers\n            const reader = new FileReader()\n            // file -> string\n            reader.readAsText(file[0])\n            // read as a string\n            reader.onload = (event) => {\n                const fileContent = event.target.result\n                const parseResults = readString(fileContent)     // papaparse\n                let safeToContinue = true\n                \n\n                // remove last line if empty\n                if (parseResults.data[parseResults.data.length - 1 ][0] === \"\"){\n                    parseResults.data.pop()\n                }\n\n                // check for empty cells\n                parseResults.data.forEach(row => {\n                    if (row.indexOf('') !== -1) {\n                        setEmptyCells(true)\n                        safeToContinue = false\n                    }\n                })\n\n                // check for duplicates in headers\n                if (new Set(parseResults.data[0]).size !== parseResults.data[0].length) {\n                    setDuplicateCol(true)\n                    safeToContinue = false\n                }\n\n                if (safeToContinue) {\n                    setHeaders(parseResults.data[0])\n                    setDate(parseResults.data[0][0] ? parseResults.data[0][0] : '')\n                    setName(parseResults.data[0][1] ? parseResults.data[0][1] : '')\n                    setCategoryName(parseResults.data[0][2] ? parseResults.data[0][2] : '')\n                    setAmount(parseResults.data[0][3] ? parseResults.data[0][3] : '')\n                    setType(parseResults.data[0][4] ? parseResults.data[0][4] : '')\n                    setParsedFile(parseResults.data)\n                    setConfirmHeaders(true)\n                }\n            }\n\n            reader.onerror = (event) => {\n                setFailedToReadFile(true)\n            }\n        }\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n\n        if (parsedFile.length === 0) {\n            setNoFile(true)\n        }\n        // if headers are not yet mapped\n        else if (!date || !name || !categoryName || !amount || !type) {\n            setHeaderMismatch(true)\n        }\n        // duplicate matches\n        else if (new Set([date, name, categoryName, amount, type]).size !== 5) {\n            setDuplicateHeader(true)\n        }\n        else {\n            // mapping columns to columns found in csv file\n            const map = {\n                date: headers.indexOf(date),\n                name: headers.indexOf(name),\n                categoryName: headers.indexOf(categoryName),\n                amount: headers.indexOf(amount),\n                type: headers.indexOf(type),\n            }\n\n            const data = {\n                data: parsedFile,\n                map: map,\n            }\n            const token = localStorage.getItem('token')\n\n            // sending to server\n            axios.post(process.env.REACT_APP_BACKEND_URL + 'activity/uploadCSV', data, {\n                headers: { Authorization: `JWT ${token}` }\n            })\n                .then(res => {\n                    console.log(res.data.message)\n                    setUploadSuccess(true)\n                    getActivities()\n                    getCategories()\n                    onClose()\n                })\n                .catch(error => {\n                    setUploadError(true)\n                    getActivities()\n                    getCategories()\n                    onClose()\n                })\n        }\n\n    }\n\n    return (\n        <>\n            <Dialog \n                open={open ? open : false}\n                onClose={() => {\n                    // unmount HeaderMatching to remove file\n                    setConfirmHeaders(false)\n                    onClose()\n                }}\n            >\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    {confirmHeaders ? 'Please match the following' : 'Upload CSV'}\n                    <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    {\n                        confirmHeaders ?\n                            <HeaderMatching\n                                headers={headers}\n                                date={date} name={name} categoryName={categoryName} amount={amount} type={type}\n                                setDate={setDate} setName={setName} setCategoryName={setCategoryName} setAmount={setAmount} setType={setType}\n                                submitHandler={submitHandler}\n                            />\n                            :\n                            <Upload uploadHandler={uploadHandler} />\n                    }\n                </DialogContent>\n            </Dialog>\n            <ErrorSnackbar \n                open={emptyCells} onClose={() => { setEmptyCells(false) }} severity={'error' }\n                message={'Empty cells detected.'}\n            />\n            <ErrorSnackbar\n                open={duplicateCol} onClose={() => { setDuplicateCol(false) }} severity={'error'}\n                message={'Duplicate columns detected.'}\n            />\n            <ErrorSnackbar\n                open={failedToReadFile} onClose={() => { setFailedToReadFile(false) }} severity={'error'}\n                message={'Failed to read file.'}\n            />\n\n            <ErrorSnackbar\n                open={noFile} onClose={() => { setNoFile(false) }} severity={'error'}\n                message={'No file found.'}\n            />\n            <ErrorSnackbar\n                open={headerMismatch} onClose={() => { setHeaderMismatch(false) }} severity={'error'}\n                message={'Headers are not all matched.'}\n            />\n            <ErrorSnackbar\n                open={DuplicateHeader} onClose={() => { setDuplicateHeader(false) }} severity={'error'}\n                message={'Duplicate header match detected.'}\n            />\n            <ErrorSnackbar\n                open={UploadError} onClose={() => { setUploadError(false) }} severity={'error'}\n                message={'Upload error.'}\n            />\n            <ErrorSnackbar\n                open={UploadSuccess} onClose={() => { setUploadSuccess(false) }} severity={'success'}\n                message={'CSV file uploaded successfully!'}\n            />\n\n        </>\n    )\n}\n","import React from \"react\";\nimport { Doughnut } from \"@reactchartjs/react-chart.js\";\n\n// const data = {\n//   labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n//   datasets: [\n//     {\n//       //   label: \"# of Votes\",\n//       data: [12, 19, 3, 5, 2, 3],\n//       backgroundColor: [\n//         \"rgba(255, 99, 132, 0.2)\",\n//         \"rgba(54, 162, 235, 0.2)\",\n//         \"rgba(255, 206, 86, 0.2)\",\n//         \"rgba(75, 192, 192, 0.2)\",\n//         \"rgba(153, 102, 255, 0.2)\",\n//         \"rgba(255, 159, 64, 0.2)\",\n//       ],\n//       borderColor: [\n//         \"rgba(255, 99, 132, 1)\",\n//         \"rgba(54, 162, 235, 1)\",\n//         \"rgba(255, 206, 86, 1)\",\n//         \"rgba(75, 192, 192, 1)\",\n//         \"rgba(153, 102, 255, 1)\",\n//         \"rgba(255, 159, 64, 1)\",\n//       ],\n//       borderWidth: 1,\n//     },\n//   ],\n// };\n\nconst DoughnutChart = ({ data }) => <Doughnut data={data} />;\n\nexport default DoughnutChart;\n","import React from \"react\";\nimport { Line } from \"@reactchartjs/react-chart.js\";\n\n// const data = {\n//   labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n//   datasets: [\n//     {\n//       label: \"# of Votes\",\n//       data: [12, 19, 3, 5, 2, 3],\n//       fill: false,\n//       backgroundColor: \"rgb(255, 99, 132)\",\n//       borderColor: \"rgba(255, 99, 132, 0.2)\",\n//     },\n//   ],\n// };\n\n// const options = {\n//   scales: {\n//     yAxes: [\n//       {\n//         ticks: {\n//           beginAtZero: true,\n//         },\n//       },\n//     ],\n//   },\n// };\n\nconst LineChart = ({ data, options }) => <Line data={data} options={options} />;\n\nexport default LineChart;\n","// activityType = 'income' || 'expense\nexport const processActivityCategories = (activitiesList, activityType) => {\n  const arr = activitiesList.filter((a) => a.type === activityType);\n  const map = new Map();\n  const data = [];\n  const color = [];\n\n  arr.forEach((a) => {\n    if (map.has(a.category_name)) {\n      map.set(\n        a.category_name,\n        (Number(map.get(a.category_name)) + Number(a.amount)).toFixed(2)\n      );\n    } else {\n      map.set(a.category_name, a.amount);\n    }\n  });\n\n  map.forEach((value, key) => {\n    data.push({ category_name: key, amount: value });\n  });\n\n  data.forEach((d, i) => {\n    color.push(\n      `rgb(${\n        activityType === \"income\" ? 100 : 255 - i * (150 / data.length)\n      }, ${\n        activityType === \"income\" ? 255 - i * (150 / data.length) : 100\n      }, 100)`\n    );\n  });\n\n  return {\n    data: data,\n    color: color,\n  };\n};\n\nexport const processsLineChartData = (\n  activitiesList = [],\n  accumulate = false\n) => {\n  // make data points for each income/expense combo\n  const extraData = activitiesList.map((a) =>\n    a.type === \"income\"\n      ? { type: \"expense\", amount: null, date: a.date }\n      : { type: \"income\", amount: null, date: a.date }\n  );\n\n  const extendedList = [...activitiesList, ...extraData].sort((a, b) =>\n    a.date > b.date ? 1 : -1\n  );\n\n  //   console.log(\"extendedList\", extendedList);\n\n  const expenseData = [];\n  const incomeData = [];\n\n  // split the data\n  extendedList.forEach((e) =>\n    e.type === \"income\" ? incomeData.push(e) : expenseData.push(e)\n  );\n\n  if (accumulate) {\n    accumulateAmounts(expenseData);\n    accumulateAmounts(incomeData);\n  }\n  // give data points to amount = null elements\n  fillGraphDiff(expenseData);\n  fillGraphDiff(incomeData);\n\n  //   console.log(\"expenseData\", expenseData);\n  //   console.log(\"incomeData\", incomeData);\n\n  return {\n    expenseData,\n    incomeData,\n  };\n};\n\nconst fillGraphDiff = (data) => {\n  let lastAmount = 0;\n  const nullIndicies = [];\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].amount) {\n      if (nullIndicies.length > 0) {\n        // Calc difference between last seen amount and current amount. Draw linear line between.\n\n        let diff = Math.abs(data[i].amount - lastAmount) / nullIndicies.length;\n\n        nullIndicies.forEach((n, j) => {\n          data[n].amount = Math.max(0, lastAmount - (j + 1) * diff);\n        });\n      }\n      lastAmount = data[i].amount;\n      nullIndicies.length = 0;\n    } else {\n      nullIndicies.push(i);\n      if (i === data.length - 1) {\n        data[i].amount = lastAmount;\n      }\n    }\n  }\n};\n\nconst accumulateAmounts = (data) => {};\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Card, Grid, Typography } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport {\n  Donut,\n  LineChart,\n  processActivityCategories,\n  processsLineChartData,\n} from \"./Components/Graphs\";\n\nexport default ({ activitiesList }) => {\n  const [expenseData, setExpenseData] = useState({});\n  const [incomeData, setIncomeData] = useState({});\n  const [lineChartData, setLineChartData] = useState({});\n\n  processsLineChartData(activitiesList);\n  useEffect(() => {\n    const parsedExpenseData = processActivityCategories(\n      activitiesList,\n      \"expense\"\n    );\n    const parsedIncomeData = processActivityCategories(\n      activitiesList,\n      \"income\"\n    );\n\n    setExpenseData({\n      length: parsedExpenseData.data.length,\n      labels: parsedExpenseData.data.map((e) => e.category_name),\n      datasets: [\n        {\n          data: parsedExpenseData.data.map((e) => e.amount),\n          backgroundColor: parsedExpenseData.color,\n          borderWidth: 1,\n        },\n      ],\n    });\n\n    setIncomeData({\n      length: parsedIncomeData.data.length,\n      labels: parsedIncomeData.data.map((e) => e.category_name),\n      datasets: [\n        {\n          data: parsedIncomeData.data.map((e) => e.amount),\n          backgroundColor: parsedIncomeData.color,\n          borderWidth: 1,\n        },\n      ],\n    });\n\n    setLineChartData(processsLineChartData(activitiesList));\n  }, [activitiesList]);\n\n  const halfGridItemProps = {\n    sm: 6,\n    xs: 12,\n    style: {\n      textAlign: \"center\",\n    },\n  };\n\n  const fullGridItemProps = {\n    side: { sm: 2, xs: 0 },\n    center: {\n      sm: 8,\n      xs: 12,\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"50px\",\n      },\n    },\n  };\n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  return (\n    <Card\n      raised\n      style={\n        isMobile\n          ? {\n              width: \"100%\",\n            }\n          : {\n              width: \"75%\",\n              padding: \"25px\",\n              margin: \"50px auto\",\n            }\n      }\n    >\n      <Grid container>\n        <Grid item {...halfGridItemProps}>\n          <Typography variant='h4' gutterBottom>\n            Expenses\n          </Typography>\n          {expenseData.length > 0 ? (\n            <Donut data={expenseData} />\n          ) : (\n            <Typography variant='h5'>No Data</Typography>\n          )}\n        </Grid>\n        <Grid item {...halfGridItemProps}>\n          <Typography variant='h4' gutterBottom>\n            Income\n          </Typography>\n          {incomeData.length > 0 ? (\n            <Donut data={incomeData} />\n          ) : (\n            <Typography variant='h5'>No Data</Typography>\n          )}\n        </Grid>\n        <Grid item {...fullGridItemProps.side} />\n        <Grid item {...fullGridItemProps.center}>\n          {lineChartData.expenseData && lineChartData.incomeData && (\n            <LineChart\n              data={{\n                labels: lineChartData.expenseData.map((e) =>\n                  moment(e.date).format(\"MM/DD/YY\")\n                ),\n                datasets: [\n                  {\n                    label: \"Expense\",\n                    data: lineChartData.expenseData.map((e) => e.amount),\n                    fill: false,\n                    backgroundColor: \"rgb(255, 20, 20)\",\n                    borderColor: \"rgba(255, 20, 20, 0.5)\",\n                  },\n                  {\n                    label: \"Income\",\n                    data: lineChartData.incomeData.map((i) => i.amount),\n\n                    fill: false,\n                    backgroundColor: \"rgb(20, 255, 20)\",\n                    borderColor: \"rgba(20, 255, 75, 0.5)\",\n                  },\n                ],\n              }}\n              options={{\n                scales: {\n                  yAxes: [\n                    {\n                      ticks: {\n                        beginAtZero: true,\n                      },\n                    },\n                  ],\n                },\n              }}\n            />\n          )}\n        </Grid>\n        <Grid item {...fullGridItemProps.side} />\n      </Grid>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Nav from \"./Components/Nav\";\nimport ActivityTable from \"./Components/Data/ActivityTable\";\nimport { UserContext } from \"../UserContext\";\nimport {\n  Button,\n  ButtonGroup,\n  Typography,\n  Box,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport AddActivity from \"./Components/Data/AddActivity\";\nimport EditCategory from \"./Components/Data/EditCategory\";\nimport ImportCSV from \"./Components/Data/ImportCSV/ImportCSV\";\nimport DashboardGraphs from \"./DashboardGraphs\";\n\nexport default () => {\n  const { user } = useContext(UserContext);\n  const [loading, setLoading] = useState(true);\n  const [activitiesList, setActivitiesList] = useState([]);\n  const [categoriesList, setCategoriesList] = useState([]);\n\n  // dialogs\n  const [showFilters, setShowFilters] = useState(false);\n  const [showAddActivity, setShowAddActivity] = useState(false);\n  const [showEditCategory, setShowEditCategory] = useState(false);\n  const [showUploadCSV, setShowUploadCSV] = useState(false);\n\n  //filters\n  const [categoryFilter, setCategoryFilter] = useState(\"all\");\n  const [typeFilter, setTypeFilter] = useState(\"all\");\n  const [dateFilter, setDateFilter] = useState(0);\n\n  const getfilteredList = (list) => {\n    let filteredData = list;\n\n    if (categoryFilter !== \"all\") {\n      filteredData = filteredData.filter(\n        (a) => a.category_name === categoryFilter\n      );\n    }\n    if (typeFilter !== \"all\") {\n      filteredData = filteredData.filter((a) => a.type === typeFilter);\n    }\n    if (dateFilter !== 0) {\n      const today = new Date();\n      // using getDate to calculate date 0, 30, 60, 180, 365 days ago\n      const duration = new Date(\n        new Date().setDate(today.getDate() - dateFilter)\n      );\n      filteredData = filteredData.filter((a) => new Date(a.date) >= duration);\n    }\n\n    return filteredData;\n  };\n  const getActivities = () => {\n    setLoading(true);\n    const token = localStorage.getItem(\"token\");\n    axios\n      .get(process.env.REACT_APP_BACKEND_URL + \"activity/getActivities\", {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n      })\n      .then((response) => {\n        setActivitiesList(response.data);\n        setLoading(false);\n      });\n  };\n\n  const getCategories = () => {\n    setLoading(true);\n    const token = localStorage.getItem(\"token\");\n    axios\n      .get(process.env.REACT_APP_BACKEND_URL + \"category/getCategories\", {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n      })\n      .then((response) => {\n        setCategoriesList(response.data);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getActivities();\n    getCategories();\n  }, [user]);\n\n  if (!user) {\n    return (\n      <>\n        <Nav />\n        {\n          // if token exists show spinner, else display message\n          localStorage.getItem(\"token\") ? (\n            <Box align='center'>\n              <CircularProgress size={100} color='primary' />\n            </Box>\n          ) : (\n            <Typography>You must be logged in to access this page.</Typography>\n          )\n        }\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Nav />\n      <Box align='center'>\n        <ActivityTable\n          activitiesList={activitiesList}\n          categoriesList={categoriesList}\n          getActivities={getActivities}\n          categoryFilter={categoryFilter}\n          setCategoryFilter={setCategoryFilter}\n          typeFilter={typeFilter}\n          setTypeFilter={setTypeFilter}\n          dateFilter={dateFilter}\n          setDateFilter={setDateFilter}\n          showFilters={showFilters}\n          setShowFilters={setShowFilters}\n          getfilteredList={getfilteredList}\n          loading={loading}\n        />\n      </Box>\n      <br />\n      <Box align='center'>\n        <div style={{ maxWidth: 1000 }}>\n          <ButtonGroup\n            variant='contained'\n            size='large'\n            color='primary'\n            fullWidth\n          >\n            <Button\n              onClick={() => {\n                setShowEditCategory(true);\n              }}\n              key={\"editCategory\"}\n            >\n              Edit Categories\n            </Button>\n            <Button\n              onClick={() => {\n                setShowAddActivity(true);\n              }}\n              key={\"addActivity\"}\n            >\n              Add Activity\n            </Button>\n            <Button\n              onClick={() => {\n                setShowUploadCSV(true);\n              }}\n              key={\"uploadCSV\"}\n            >\n              Upload from CSV\n            </Button>\n          </ButtonGroup>\n        </div>\n      </Box>\n      <AddActivity\n        categoriesList={categoriesList}\n        open={showAddActivity}\n        setShowEditCategory={setShowEditCategory}\n        getActivities={getActivities}\n        onClose={() => setShowAddActivity(false)}\n      />\n      <EditCategory\n        categoriesList={categoriesList}\n        open={showEditCategory}\n        getCategories={getCategories}\n        getActivities={getActivities}\n        onClose={() => setShowEditCategory(false)}\n      />\n      <DashboardGraphs activitiesList={getfilteredList(activitiesList)} />\n      <ImportCSV\n        open={showUploadCSV}\n        onClose={() => {\n          setShowUploadCSV(false);\n        }}\n        getActivities={getActivities}\n        getCategories={getCategories}\n      />\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport Nav from \"./Components/Nav\";\nimport { Box, Card, Grid, Typography } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport EcoIcon from \"@material-ui/icons/Eco\";\nimport landing from \"../images/landing.jpg\";\nimport budgetTracker from \"../images/budget-tracker.png\";\n\nconst styles = {\n  box: {\n    width: \"100%\",\n    backgroundImage: `url(${landing})`,\n    backgroundSize: \"cover\",\n  },\n\n  flexBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n\n  card: {\n    padding: \"16px 5px\",\n    marginBottom: \"100px\",\n  },\n};\n\nexport default () => {\n  // const [width, setWidth] = useState(window.innerWidth);\n  // const [height, setHeight] = useState(window.innerHeight);\n\n  // useEffect(() => {\n  //   const handleResize = () => {\n  //     const { innerWidth, innerHeight } = window;\n  //     setWidth(innerWidth);\n  //     setHeight(innerHeight);\n  //   };\n  //   window.addEventListener(\"resize\", handleResize);\n\n  //   return () => {\n  //     window.removeEventListener(\"resize\", handleResize);\n  //   };\n  // }, []);\n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  return (\n    <>\n      <Nav />\n      <Box style={{ ...styles.box, height: isMobile ? \"75vh\" : \"500px\" }}>\n        <div\n          style={{ ...styles.flexBox, height: isMobile ? \"250px\" : \"500px\" }}\n        >\n          <Typography\n            variant={!isMobile ? \"h1\" : \"h5\"}\n            align='center'\n            color='secondary'\n            gutterBottom\n          >\n            Welcome to Budget Tracker\n            <EcoIcon fontSize='inherit' color='secondary' />\n          </Typography>\n          <Typography\n            variant={!isMobile ? \"h3\" : \"subtitle1\"}\n            align='center'\n            color='secondary'\n          >\n            Login or sign up to get started!\n          </Typography>\n        </div>\n      </Box>\n\n      {/* <Box\n        style={{\n          width: \"100%\",\n          margin: \"50px auto\",\n        }}\n      >\n        <Card styles={styles.card}>\n          <Grid container>\n            <Grid container md={4} alignItems='center' justify='center'>\n              <Typography variant={!isMobile ? \"h4\" : \"h5\"} align='center'>\n                Track income and expenses\n              </Typography>\n            </Grid>\n            <Grid\n              container\n              md={8}\n              alignItems='center'\n              justify='center'\n              style={{ height: \"400px\" }}\n            >\n              <img src={budgetTracker} height='100%' />\n            </Grid>\n          </Grid>\n        </Card>\n\n        <Card style={styles.card}>\n          <Grid container>\n            <Grid item xs={12} md={8}>\n              <Graph\n                data={data}\n                key1='income'\n                key2='expense'\n                width={isMobile ? width * 0.9 : width * 0.6}\n                height={height * 0.25}\n                grid\n                style={{\n                  backgroundColor: \"#F5FFFA\",\n                  padding: \"16px\",\n                }}\n              />\n            </Grid>\n            <Grid container xs={12} md={4} alignItems='center' justify='center'>\n              <Typography variant={!isMobile ? \"h4\" : \"h5\"} align='center'>\n                Track income and expenses\n              </Typography>\n            </Grid>\n          </Grid>\n        </Card>\n      </Box> */}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Box, Typography, Grid, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport EcoIcon from \"@material-ui/icons/Eco\";\n\nconst useStyles = makeStyles((theme) => ({\n  splash: {\n    paddingTop: \"40%\",\n    width: \"100wh\",\n    height: \"60%\",\n    lineHeight: \"25vh\",\n    [theme.breakpoints.down(\"sm\")]: {\n      lineHeight: \"250px\",\n    },\n  },\n}));\n\nexport default () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  return (\n    <Box align='center' className={classes.splash}>\n      <Typography variant={isMobile ? \"h4\" : \"h1\"} color='primary'>\n        Budget Tracker\n        <EcoIcon fontSize='inherit' color='primary' />\n      </Typography>\n\n      <CircularProgress size={isMobile ? 100 : 200} color='primary' />\n    </Box>\n  );\n};\n","import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { UserContext } from \"../../../UserContext\";\nimport Splash from \"../Splash\";\n\n// check if token exists and authorizes user\n// render Splash while checking\nexport default () => {\n  const { user, setUser } = useContext(UserContext);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!user && token) {\n      axios\n        .get(process.env.REACT_APP_BACKEND_URL + \"auth/findUser\", {\n          headers: { Authorization: `JWT ${token}` },\n        })\n        .then((response) => {\n          setUser(response.data.auth);\n        });\n    }\n  }, [user, setUser]);\n\n  return <Splash />;\n};\n","import React, { useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Dashboard from \"./views/Dashboard\";\nimport LandingPage from \"./views/LandingPage\";\nimport { UserContext } from \"./UserContext\";\nimport Init from \"./views/Components/Auth/Init\";\n\nexport default () => {\n  const [user, setUser] = useState(null);\n  const token = localStorage.getItem(\"token\");\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {!user && token ? (\n        <Init />\n      ) : (\n        <Switch>\n          <Route exact path='/'>\n            {user ? <Redirect to='/dashboard' /> : <LandingPage />}\n          </Route>\n          <Route path='/home' render={() => <LandingPage />} />\n          <Route path='/dashboard' render={() => <Dashboard />} />\n          {user ? (\n            <Route render={() => <Redirect to='/dashboard' />} />\n          ) : (\n            <Route render={() => <Redirect to='/home' />} />\n          )}\n        </Switch>\n      )}\n    </UserContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <Router>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}