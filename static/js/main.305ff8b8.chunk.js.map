{"version":3,"sources":["theme.js","UserContext.js","views/Components/Auth/Login.js","views/Components/Auth/Register.js","views/Components/Nav.js","views/Components/Data/EditActivity.js","views/Components/Data/ActivityTotal.js","views/Components/Data/ActivityTable.js","views/Components/Data/AddActivity.js","views/Components/Data/EditCategory.js","views/Components/Data/ImportCSV/HeaderMatching.js","views/Components/Data/ImportCSV/Upload.js","views/Components/Data/ImportCSV/ErrorSnackbar.js","views/Components/Data/ImportCSV/ImportCSV.js","views/Dashboard.js","views/LandingPage.js","views/Components/Auth/Init.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","contrastText","secondary","positive","negative","background","default","typography","fontFamily","join","UserContext","createContext","open","onClose","setUser","useContext","useState","email","setEmail","password","setPassword","waiting","setWaiting","showSuccess","setShowSuccess","showError","setShowError","handleLogin","useCallback","axios","post","process","then","response","localStorage","setItem","data","token","auth","catch","error","useEffect","enterPressListener","e","code","document","addEventListener","removeEventListener","Dialog","DialogTitle","style","backgroundColor","color","IconButton","onClick","position","top","right","DialogContent","TextField","autoFocus","label","type","fullWidth","value","onChange","event","target","DialogActions","Button","CircularProgress","size","Snackbar","autoHideDuration","Alert","severity","confirmPassword","setConfirmPassword","showEmailError","setShowEmailError","showPasswordError","setShowPasswordError","handleRegister","status","useStyles","makeStyles","root","flexGrow","marginBottom","spacing","user","showLogin","setShowLogin","showRegister","setShowRegister","classes","renderButtons","component","NavLink","to","key","removeItem","window","location","href","ENV","AppBar","className","Toolbar","Grid","container","justify","alignItems","item","xs","display","Tooltip","title","fontSize","textTransform","Typography","variant","textAlign","Login","Register","deleteButton","categoriesList","getActivities","name","setName","amount","setAmount","moment","date","format","setDate","category_id","categoryId","setCategoryId","setType","getItem","handleSubmit","put","id","updateData","headers","Authorization","InputLabelProps","shrink","select","map","c","MenuItem","delete","total","forEach","d","parseFloat","toFixed","table","maxWidth","tableHeader","common","white","income","expense","activitiesList","loading","setData","page","setPage","rowsPerPage","setRowsPerPage","showFilters","setShowFilters","categoryFilter","setCategoryFilter","typeFilter","setTypeFilter","dateFilter","setDateFilter","showEditActivity","setShowEditActivity","editRow","setEditRow","filteredData","filter","a","category_name","today","Date","duration","getDate","rows","row","TableRow","TableCell","align","charAt","toUpperCase","slice","emptyRows","Math","min","length","Paper","TableContainer","Table","TableHead","colSpan","verticalAlign","ActivityTotal","FormControlLabel","control","Switch","checked","Collapse","in","padding","TableBody","height","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","EditActivity","setShowEditCategory","Box","width","getCategories","submitHandler","categoryName","setCategoryName","FormControl","Select","element","i","uploadHandler","acceptedFiles","filesLimit","clearOnUnmount","useChipsForPreview","previewGridProps","direction","showAlerts","alertSnackbarProps","anchorOrigin","vertical","horizontal","dropzoneText","List","dense","disablePadding","ListItem","ListItemIcon","ListItemText","file","message","parsedFile","setParsedFile","setHeaders","confirmHeaders","setConfirmHeaders","emptyCells","setEmptyCells","duplicateCol","setDuplicateCol","failedToReadFile","setFailedToReadFile","noFile","setNoFile","headerMismatch","setHeaderMismatch","DuplicateHeader","setDuplicateHeader","UploadError","setUploadError","UploadSuccess","setUploadSuccess","HeaderMatching","preventDefault","Set","indexOf","res","console","log","Upload","reader","FileReader","readAsText","onload","fileContent","result","parseResults","readString","safeToContinue","pop","onerror","ErrorSnackbar","setLoading","setActivitiesList","setCategoriesList","showAddActivity","setShowAddActivity","showEditCategory","showUploadCSV","setShowUploadCSV","get","Nav","ActivityTable","ButtonGroup","AddActivity","EditCategory","ImportCSV","Provider","Init","exact","path","LandingPage","render","Dashboard","ReactDOM","ThemeProvider","App","getElementById"],"mappings":"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","file":"static/js/main.305ff8b8.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport \"typeface-roboto\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#35B234\", // Light green\n      contrastText: \"#FFFFFF\",\n    },\n    secondary: {\n      main: \"#FFFFFF\", // White\n    },\n    positive: {\n      main: \"#4caf50\", // default palette success\n    },\n    negative: {\n      main: \"#f44336\", // default palette error\n    },\n    background: {\n      default: \"#FFFFFF\",\n    },\n  },\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n  },\n});\n\nexport default theme;\n","import {createContext} from 'react'\n\nexport const UserContext = createContext(null)","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { UserContext } from '../../../UserContext'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, CircularProgress } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default ({ open, onClose }) => {\n\n    const { setUser } = useContext(UserContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    // wait for server response to login POST\n    const [waiting, setWaiting] = useState(false)\n\n    // snackbars\n    const [showSuccess, setShowSuccess] = useState(false)\n    const [showError, setShowError] = useState(false)\n\n    const handleLogin = useCallback(() => {\n        setWaiting(true)\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/login', {\n            email: email,\n            password: password\n        })\n            .then((response) => {\n                localStorage.setItem('token', response.data.token)\n                setUser(response.data.auth)\n                setShowSuccess(true)\n                setWaiting(false)\n                onClose()\n            })\n            .catch((error) => {\n                setShowError(true)\n                setWaiting(false)\n            })\n    }, [email, password, onClose, setUser])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleLogin();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n    }, [open, handleLogin])\n\n    return (\n        <>\n            <Dialog open={open ? open : false} onClose={onClose}>\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    Login\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                    <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                    <DialogActions>\n\n                        <Button onClick={handleLogin} color='primary'>{waiting ? <CircularProgress size={25} color=\"primary\" /> : 'Login' }</Button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n\n\n            <Snackbar open={showSuccess} autoHideDuration={3000} onClose={() => { setShowSuccess(false) }}>\n                <Alert onClose={() => { setShowSuccess(false) }} severity=\"success\">\n                    Login Success!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showError} autoHideDuration={3000} onClose={() => { setShowError(false) }}>\n                <Alert onClose={() => { setShowError(false) }} severity=\"error\">\n                    Invalid Credentials\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, CircularProgress } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default ({ open, onClose }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    // wait for server response to register POST\n    const [waiting, setWaiting] = useState(false)\n\n    // snackbars\n    const [showSuccess, setShowSuccess] = useState(false)\n    const [showError, setShowError] = useState(false)\n    const [showEmailError, setShowEmailError] = useState(false)\n    const [showPasswordError, setShowPasswordError] = useState(false)\n\n\n    const handleRegister = useCallback(() => {\n        setWaiting(true)\n        if (password === confirmPassword) {\n            axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/register', {\n                email: email,\n                password: password\n            })\n                .then((response) => {\n                    setEmail('')\n                    setPassword('')\n                    setConfirmPassword('')\n                    setShowSuccess(true)\n                    onClose()\n                    setWaiting(false)\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        error.response.status === 409 ? setShowEmailError(true) : setShowError(true)\n                    }\n                    setWaiting(false)\n                })\n        }\n        else {\n            setShowPasswordError(true)\n        }\n    }, [email, password, confirmPassword, onClose])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleRegister();\n            }\n        }\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        }\n    }, [open, handleRegister])\n\n    return (\n        <>\n            <Dialog open={open ? open : false} onClose={onClose}>\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    Register\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                    <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                    <TextField label='Confirm Password' type='password' fullWidth value={confirmPassword} onChange={(event) => { setConfirmPassword(event.target.value) }} />\n                    <DialogActions>\n                        <Button onClick={handleRegister} color='primary'>{waiting ? <CircularProgress size={25} color=\"primary\" /> : 'Register'}</Button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n\n            <Snackbar open={showSuccess} autoHideDuration={3000} onClose={() => { setShowSuccess(false) }}>\n                <Alert onClose={() => { setShowSuccess(false) }} severity=\"success\">\n                    Account created!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showError} autoHideDuration={3000} onClose={() => { setShowError(false) }}>\n                <Alert onClose={() => { setShowError(false) }} severity=\"error\">\n                    Registration error\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showEmailError} autoHideDuration={3000} onClose={() => { setShowEmailError(false) }}>\n                <Alert onClose={() => { setShowEmailError(false) }} severity=\"info\">\n                    Email already registered\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showPasswordError} autoHideDuration={3000} onClose={() => { setShowPasswordError(false) }}>\n                <Alert onClose={() => { setShowPasswordError(false) }} severity=\"info\">\n                    Password does not match\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}","import React, { useState, useContext } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { AppBar, Toolbar, Button, IconButton, Grid, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Login from './Auth/Login'\nimport Register from './Auth/Register'\nimport { UserContext } from '../../UserContext'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginBottom: theme.spacing(5)\n    }\n}))\n\nexport default () => {\n\n    const { user, setUser } = useContext(UserContext)\n    const [showLogin, setShowLogin] = useState(false)\n    const [showRegister, setShowRegister] = useState(false)\n\n    const classes = useStyles()\n\n    const handleLogout = () => {\n        setUser(null);\n        localStorage.removeItem('token');\n        window.location.href = process.env.ENV === 'DEV' ? \"/home\" : \"/budget-tracker/\"\n    }\n\n    const renderButtons = !user ?\n        [\n            <Button color=\"inherit\" onClick={() => { setShowLogin(true) }} key={'login'}>Login</Button>,\n            <Button color=\"inherit\" onClick={() => { setShowRegister(true) }} key={'register'}>Register</Button>\n        ]\n        :\n        [\n            <Button color=\"inherit\" component={NavLink} to='/dashboard' key={'dashboard'}>Dashboard</Button>,\n            <Button color=\"inherit\" onClick={handleLogout} key={'logout'}>Logout</Button>\n        ]\n\n    return (\n        <>\n            <AppBar position='static' className={classes.root}>\n                <Toolbar>\n                    <Grid container spacing={1} justify='space-between' alignItems='center'>\n                        <Grid item xs={8}>\n                            <div style={{ display: 'inline-flex', alignItems: 'center' }}>\n                                <Tooltip title=\"Github Repo\">\n                                    <IconButton onClick={() => window.open('https://github.com/bmai53/budget-tracker', \"_blank\")}>\n                                        <GitHubIcon fontSize='large' color='secondary' />\n                                    </IconButton>\n                                </Tooltip>\n                                <Button style={{ textTransform: 'none' }} color='inherit' component={NavLink} to='/home' >\n                                    <Typography variant='h4'>Budget Tracker</Typography>\n                                </Button>\n                            </div>\n                        </Grid>\n                        <Grid item xs={4} style={{ textAlign: 'right' }}>\n                            {renderButtons}\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Login open={showLogin} onClose={() => setShowLogin(false)} />\n            <Register open={showRegister} onClose={() => setShowRegister(false)} />\n        </>\n    )\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { makeStyles } from '@material-ui/core/styles'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\nexport default ({ open, onClose, data, categoriesList, getActivities }) => {\n    const [name, setName] = useState(data.name)\n    const [amount, setAmount] = useState(data.amount)\n    const [date, setDate] = useState(moment(data.date).format('YYYY-MM-DD'))\n    const [categoryId, setCategoryId] = useState(data.category_id)\n    const [type, setType] = useState(data.type)\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.put(process.env.REACT_APP_BACKEND_URL + 'activity/updateActivity', {\n            id: data.id,\n            updateData: {\n                name: name,\n                amount: amount,\n                date: date,\n                category_id: categoryId,\n                type: type\n            }\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            },\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }, [getActivities, name, amount, date, categoryId, type, token, data.id, onClose])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'activity/deleteActivity', {\n            data: {\n                id: data.id\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [handleSubmit, open])\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                Edit Activity\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Name' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <TextField label='Amount' type='number' fullWidth value={amount} onChange={(event) => { setAmount(event.target.value) }} />\n                <TextField label='Date' type='date' fullWidth value={date} InputLabelProps={{ shrink: true }} onChange={event => setDate(event.target.value)} />\n                <TextField label='Category' type='number' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <TextField label='Type' fullWidth value={type} select onChange={event => setType(event.target.value)}>\n                    <MenuItem value={'expense'}>Expense</MenuItem>\n                    <MenuItem value={'income'}>Income</MenuItem>\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                    <Button onClick={handleSubmit} color='primary'>Update</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    positive: {\n        color: theme.palette.positive.main\n    },\n    negative: {\n        color: theme.palette.negative.main\n    }\n}))\n\nexport default ({ data }) => {\n    let total = 0\n    data.forEach(d => {\n        d.type === 'income' ? total += parseFloat(d.amount) : total -= parseFloat(d.amount)\n    })\n\n    const classes = useStyles()\n    return (\n        <>\n            <Typography variant='h3' display='inline'>\n                Activities Total:&nbsp;\n            </Typography>\n            <Typography variant='h3' display='inline' className={total >= 0 ? classes.positive : classes.negative}>\n                ${total.toFixed(2)}\n            </Typography>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination,\n    Paper, IconButton, Tooltip, CircularProgress, TextField, MenuItem, Button, FormControlLabel, Switch, Collapse\n} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit';\nimport moment from 'moment'\nimport EditActivity from './EditActivity';\nimport ActivityTotal from './ActivityTotal'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        maxWidth: 1000,\n    },\n    tableHeader: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    income: {\n        color: theme.palette.positive.main\n    },\n    expense: {\n        color: theme.palette.negative.main\n    }\n}))\n\nexport default ({ activitiesList, categoriesList, getActivities, loading }) => {\n    const [data, setData] = useState([])\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5)\n    const [showFilters, setShowFilters] = useState(false)\n    const [categoryFilter, setCategoryFilter] = useState('all')\n    const [typeFilter, setTypeFilter] = useState('all')\n    const [dateFilter, setDateFilter] = useState(0)\n    const [showEditActivity, setShowEditActivity] = useState(false)\n    const [editRow, setEditRow] = useState() // store data of row to edit\n\n    useEffect(() => {\n\n        let filteredData = activitiesList\n\n        if (categoryFilter !== 'all') {\n            filteredData = filteredData.filter(a => a.category_name === categoryFilter)\n        }\n        if (typeFilter !== 'all') {\n            filteredData = filteredData.filter(a => a.type === typeFilter)\n        }\n        if (dateFilter !== 0) {\n            const today = new Date()\n            // using getDate to calculate date 0, 30, 60, 180, 365 days ago\n            const duration = new Date(new Date().setDate(today.getDate() - dateFilter))\n            filteredData = filteredData.filter(a => new Date(a.date) >= duration)\n        }\n\n        setData(filteredData)\n\n    }, [activitiesList, categoriesList, categoryFilter, typeFilter, dateFilter])\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    }\n\n\n    const classes = useStyles()\n    const rows = data.map(row => (\n        <TableRow key={row.id}>\n            <TableCell>{row.name}</TableCell>\n            <TableCell align=\"right\">{moment(row.date).format('MMMM D, YYYY')}</TableCell>\n            <TableCell align=\"right\">{row.amount}</TableCell>\n            <TableCell align=\"right\">{row.category_name}</TableCell>\n            <TableCell align=\"right\" className={row.type === 'income' ? classes.income : classes.expense} >\n                {row.type.charAt(0).toUpperCase() + row.type.slice(1)}\n            </TableCell>\n            <TableCell>\n                <Tooltip title='Edit'>\n                    <IconButton onClick={() => {\n                        setShowEditActivity(true)\n                        setEditRow(row)\n                    }}>\n                        <EditIcon />\n                    </IconButton>\n                </Tooltip>\n            </TableCell>\n        </TableRow>\n    ))\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <>\n            <Paper className={classes.table}>\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell colSpan={4} style={{ verticalAlign: 'top' }} >\n                                    <ActivityTotal data={data} />\n                                </TableCell>\n                                <TableCell colSpan={2} align='right'>\n                                    <FormControlLabel\n                                        control={<Switch color=\"primary\" checked={showFilters} onChange={() => { setShowFilters(!showFilters) }} />}\n                                        label=\"Show Filters\"\n                                    />\n                                    <Collapse in={showFilters}>\n                                        <TextField label='Category Filter' type='text' fullWidth select value={categoryFilter} onChange={e => setCategoryFilter(e.target.value)}>\n                                            <MenuItem value='all' key='all'>All</MenuItem>\n                                            {categoriesList.map(c => <MenuItem value={c.name} key={c.name}>{c.name}</MenuItem>)}\n                                        </TextField>\n                                        <TextField label='Type Filter' type='text' fullWidth select value={typeFilter} onChange={e => setTypeFilter(e.target.value)}>\n                                            <MenuItem value='all'>All</MenuItem>\n                                            <MenuItem value='income'>Income</MenuItem>\n                                            <MenuItem value='expense'>Expense</MenuItem>\n                                        </TextField>\n                                        <TextField label='Date Filter' type='text' fullWidth select value={dateFilter} onChange={e => setDateFilter(e.target.value)}>\n                                            <MenuItem value={0}>All</MenuItem>\n                                            <MenuItem value={30}>30 Days</MenuItem>\n                                            <MenuItem value={60}>60 Days</MenuItem>\n                                            <MenuItem value={180}>180 Days</MenuItem>\n                                            <MenuItem value={362}>1 Year</MenuItem>\n                                        </TextField>\n\n                                        <Button color='primary' onClick={() => {\n                                            setCategoryFilter('all')\n                                            setTypeFilter('all')\n                                            setDateFilter(0)\n                                        }}>\n                                            Clear Filters\n                                        </Button>\n                                    </Collapse>\n                                </TableCell>\n                            </TableRow>\n\n                            <TableRow>\n                                <TableCell className={classes.tableHeader}>Name</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Date</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Amount</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Category</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Type</TableCell>\n                                <TableCell className={classes.tableHeader} padding='checkbox' />\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                loading ?\n                                    <TableRow>\n                                        <TableCell colSpan={6} align='center'>\n                                            <CircularProgress size={100} color=\"primary\" />\n                                        </TableCell>\n                                    </TableRow>\n                                    :\n                                    rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            }\n                            {\n                                rows.length === 0 ?\n                                    <TableRow>\n                                        <TableCell colSpan={6} align='center'>\n                                            <Typography>No activities found</Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                    :\n                                    emptyRows > 0 && (\n                                        <TableRow key={'empty rows'} style={{ height: (53) * emptyRows }}>\n                                            <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            {\n                // test for showEditActivity to remount dialog to reset initial useState()\n                editRow && showEditActivity ?\n                    <EditActivity\n                        categoriesList={categoriesList}\n                        getActivities={getActivities}\n                        data={editRow}\n                        open={showEditActivity}\n                        onClose={() => {\n                            setShowEditActivity(false)\n                            setEditRow({})\n                        }}\n                    />\n                    :\n                    <></>\n            }\n        </>\n    )\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem, Box } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport default ({ open, onClose, categoriesList, getActivities, setShowEditCategory }) => {\n\n    const [name, setName] = useState('')\n    const [amount, setAmount] = useState(0)\n    const [date, setDate] = useState('')\n    const [categoryId, setCategoryId] = useState('')\n    const [type, setType] = useState('')\n    // const [categoriesList, setCategoriesList] = useState([])\n\n    const handleSubmit = useCallback(() => {\n        const token = localStorage.getItem('token')\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'activity/addActivity', {\n            name: name,\n            amount: amount,\n            date: date,\n            category_id: categoryId,\n            type: type,\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                setName('')\n                setAmount(0)\n                setDate('')\n                setCategoryId('')\n                setType('')\n                getActivities()\n                onClose()\n            })\n    }, [getActivities, onClose, amount, categoryId, date, name, type])\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit()\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener)\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener)\n        };\n    }, [open, handleSubmit])\n\n    return (\n        <Dialog open={open ? open : false} onClose={onClose}>\n            <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                Add Activity\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Name' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <TextField label='Amount' type='number' fullWidth value={amount} onChange={(event) => { setAmount(event.target.value) }} />\n                <TextField label='Date' type='date' fullWidth value={date} InputLabelProps={{ shrink: true }} onChange={event => setDate(event.target.value)} />\n                <Box width='100%' style={{ display: 'inline-flex'}}>\n                    <TextField label='Category' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                        {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                    </TextField>\n                    <DialogActions style={{ position: 'relative', top: '10px'}}>\n                        <Button\n                            color='primary'\n                            onClick={() => {\n                                onClose()\n                                setShowEditCategory(true)\n                            }}\n                        >\n                            Add New Category\n                        </Button>\n                    </DialogActions>\n                </Box>\n                <TextField label='Type' fullWidth value={type} select onChange={event => setType(event.target.value)}>\n                    <MenuItem value={'expense'}>Expense</MenuItem>\n                    <MenuItem value={'income'}>Income</MenuItem>\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleSubmit} color='primary'>Submit</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\n\nexport default ({ open, onClose, categoriesList, getCategories, getActivities }) => {\n    const [name, setName] = useState('')\n    const [categoryId, setCategoryId] = useState('')\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'category/addCategory', {\n            name: name\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                setName('')\n                getCategories()\n                onClose()\n            })\n    }, [name, onClose, token, getCategories])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'category/deleteCategory', {\n            data: {\n                id: categoryId\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getCategories()\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [open, handleSubmit])\n\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                Edit Categories\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Add New Category' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <DialogActions>\n                    <Button onClick={handleSubmit} color='primary'>Add</Button>\n                </DialogActions>\n\n                <TextField label='Delete Existing Category' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                </DialogActions>\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\n\n\nexport default ({ submitHandler, headers, date, name, categoryName, amount, type, setDate, setName, setCategoryName, setAmount, setType }) => {\n\n    return (\n        <>\n            <Grid container spacing={3}>\n                <Grid item xs={3}>\n                    {/* empty for spacing purposes */}\n                </Grid>\n                <Grid item xs={9}>\n                    <Typography variant=\"h5\" align=\"center\" color=\"primary\">Columns found in CSV file</Typography>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Date:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setDate(e.target.value)} value={date}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Name:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setName(e.target.value)} value={name}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Category:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setCategoryName(e.target.value)} value={categoryName}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Amount:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setAmount(e.target.value)} value={amount}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Type:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setType(e.target.value)} value={type}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n\n            <DialogActions>\n                <Button onClick={submitHandler} size='large' color='primary'>Submit</Button>\n            </DialogActions>\n        </>\n    )\n}","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\n\nexport default ({ uploadHandler }) => {\n\n    return (\n        <>\n            <DropzoneArea\n                acceptedFiles={['.csv']}\n                filesLimit={1}\n                clearOnUnmount\n                useChipsForPreview\n                previewGridProps={{ container: { justify: 'center', spacing: 3, direction: 'row' } }}\n                showAlerts={['error', 'info']}\n                alertSnackbarProps={{\n                    anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\n                    autoHideDuration: 3000\n                }}\n                dropzoneText={\n                    <div style={{ padding: '0 25px 0 25px' }}>\n                        <Typography variant=\"h6\" align=\"center\" color=\"primary\">\n                            Drag and drop or click to upload a CSV file.\n                        </Typography>\n                        <br />\n                        <Typography align=\"justify\" >\n                            Please ensure the CSV file has the following columns:\n                        </Typography>\n                        <List dense disablePadding>\n                            <ListItem >\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Date (YYYY-MM-DD)\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Name\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Amount\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Category\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Type (income or expense)\" />\n                            </ListItem>\n                        </List>\n                    </div>\n                }\n                onChange={(file) => { uploadHandler(file) }}\n            />\n\n            <br />\n\n\n        </>\n    )\n}","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\n\nexport default ({ open, onClose, message, severity }) => {\n\n    return (\n        <Snackbar open={open} autoHideDuration={3000} onClose={onClose}>\n            <Alert onClose={onClose} severity={severity}>\n                {message}\n            </Alert>\n        </Snackbar>\n    )\n}","import React, { useState } from 'react'\nimport axios from 'axios'\nimport theme from '../../../../theme'\nimport { DialogTitle, Dialog, DialogContent, IconButton, } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport { readString } from 'react-papaparse'\nimport HeaderMatching from './HeaderMatching';\nimport Upload from './Upload'\nimport ErrorSnackbar from './ErrorSnackbar'\n\n\nexport default ({ open, onClose, getActivities, getCategories }) => {\n    const [parsedFile, setParsedFile] = useState([])\n    const [headers, setHeaders] = useState([])                      // headers from file\n    const [confirmHeaders, setConfirmHeaders] = useState(false)     // display header confirmation form\n\n    // headers\n    const [date, setDate] = useState('')\n    const [name, setName] = useState('')\n    const [categoryName, setCategoryName] = useState('')\n    const [amount, setAmount] = useState('')\n    const [type, setType] = useState('')\n\n    // snackbars\n    const [emptyCells, setEmptyCells] = useState(false)\n    const [duplicateCol, setDuplicateCol] = useState(false)\n    const [failedToReadFile, setFailedToReadFile] = useState(false)\n    const [noFile, setNoFile] = useState(false)\n    const [headerMismatch, setHeaderMismatch] = useState(false)\n    const [DuplicateHeader, setDuplicateHeader] = useState(false)\n    const [UploadError, setUploadError] = useState(false)\n    const [UploadSuccess, setUploadSuccess] = useState(false)\n\n\n    const uploadHandler = (file) => {\n\n\n        if (file.length > 0) {\n            // reading headers\n            const reader = new FileReader()\n            // file -> string\n            reader.readAsText(file[0])\n            // read as a string\n            reader.onload = (event) => {\n                const fileContent = event.target.result\n                const parseResults = readString(fileContent)     // papaparse\n                let safeToContinue = true\n                \n\n                // remove last line if empty\n                if (parseResults.data[parseResults.data.length - 1 ][0] === \"\"){\n                    parseResults.data.pop()\n                }\n\n                // check for empty cells\n                parseResults.data.forEach(row => {\n                    if (row.indexOf('') !== -1) {\n                        setEmptyCells(true)\n                        safeToContinue = false\n                    }\n                })\n\n                // check for duplicates in headers\n                if (new Set(parseResults.data[0]).size !== parseResults.data[0].length) {\n                    setDuplicateCol(true)\n                    safeToContinue = false\n                }\n\n                if (safeToContinue) {\n                    setHeaders(parseResults.data[0])\n                    setDate(parseResults.data[0][0] ? parseResults.data[0][0] : '')\n                    setName(parseResults.data[0][1] ? parseResults.data[0][1] : '')\n                    setCategoryName(parseResults.data[0][2] ? parseResults.data[0][2] : '')\n                    setAmount(parseResults.data[0][3] ? parseResults.data[0][3] : '')\n                    setType(parseResults.data[0][4] ? parseResults.data[0][4] : '')\n                    setParsedFile(parseResults.data)\n                    setConfirmHeaders(true)\n                }\n            }\n\n            reader.onerror = (event) => {\n                setFailedToReadFile(true)\n            }\n        }\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n\n        if (parsedFile.length === 0) {\n            setNoFile(true)\n        }\n        // if headers are not yet mapped\n        else if (!date || !name || !categoryName || !amount || !type) {\n            setHeaderMismatch(true)\n        }\n        // duplicate matches\n        else if (new Set([date, name, categoryName, amount, type]).size !== 5) {\n            setDuplicateHeader(true)\n        }\n        else {\n            // mapping columns to columns found in csv file\n            const map = {\n                date: headers.indexOf(date),\n                name: headers.indexOf(name),\n                categoryName: headers.indexOf(categoryName),\n                amount: headers.indexOf(amount),\n                type: headers.indexOf(type),\n            }\n\n            const data = {\n                data: parsedFile,\n                map: map,\n            }\n            const token = localStorage.getItem('token')\n\n            // sending to server\n            axios.post(process.env.REACT_APP_BACKEND_URL + 'activity/uploadCSV', data, {\n                headers: { Authorization: `JWT ${token}` }\n            })\n                .then(res => {\n                    console.log(res.data.message)\n                    setUploadSuccess(true)\n                    getActivities()\n                    getCategories()\n                    onClose()\n                })\n                .catch(error => {\n                    setUploadError(true)\n                    getActivities()\n                    getCategories()\n                    onClose()\n                })\n        }\n\n    }\n\n    return (\n        <>\n            <Dialog \n                open={open ? open : false}\n                onClose={() => {\n                    // unmount HeaderMatching to remove file\n                    setConfirmHeaders(false)\n                    onClose()\n                }}\n            >\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    {confirmHeaders ? 'Please match the following' : 'Upload CSV'}\n                    <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    {\n                        confirmHeaders ?\n                            <HeaderMatching\n                                headers={headers}\n                                date={date} name={name} categoryName={categoryName} amount={amount} type={type}\n                                setDate={setDate} setName={setName} setCategoryName={setCategoryName} setAmount={setAmount} setType={setType}\n                                submitHandler={submitHandler}\n                            />\n                            :\n                            <Upload uploadHandler={uploadHandler} />\n                    }\n                </DialogContent>\n            </Dialog>\n            <ErrorSnackbar \n                open={emptyCells} onClose={() => { setEmptyCells(false) }} severity={'error' }\n                message={'Empty cells detected.'}\n            />\n            <ErrorSnackbar\n                open={duplicateCol} onClose={() => { setDuplicateCol(false) }} severity={'error'}\n                message={'Duplicate columns detected.'}\n            />\n            <ErrorSnackbar\n                open={failedToReadFile} onClose={() => { setFailedToReadFile(false) }} severity={'error'}\n                message={'Failed to read file.'}\n            />\n\n            <ErrorSnackbar\n                open={noFile} onClose={() => { setNoFile(false) }} severity={'error'}\n                message={'No file found.'}\n            />\n            <ErrorSnackbar\n                open={headerMismatch} onClose={() => { setHeaderMismatch(false) }} severity={'error'}\n                message={'Headers are not all matched.'}\n            />\n            <ErrorSnackbar\n                open={DuplicateHeader} onClose={() => { setDuplicateHeader(false) }} severity={'error'}\n                message={'Duplicate header match detected.'}\n            />\n            <ErrorSnackbar\n                open={UploadError} onClose={() => { setUploadError(false) }} severity={'error'}\n                message={'Upload error.'}\n            />\n            <ErrorSnackbar\n                open={UploadSuccess} onClose={() => { setUploadSuccess(false) }} severity={'success'}\n                message={'CSV file uploaded successfully!'}\n            />\n\n        </>\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Nav from './Components/Nav'\nimport ActivityTable from './Components/Data/ActivityTable'\nimport { UserContext } from '../UserContext'\nimport { Button, ButtonGroup, Typography, Box, CircularProgress } from '@material-ui/core'\nimport AddActivity from './Components/Data/AddActivity'\nimport EditCategory from './Components/Data/EditCategory'\nimport ImportCSV from './Components/Data/ImportCSV/ImportCSV'\n\nexport default () => {\n    const { user } = useContext(UserContext)\n    const [loading, setLoading] = useState(true)\n    const [activitiesList, setActivitiesList] = useState([])\n    const [categoriesList, setCategoriesList] = useState([])\n\n    // dialogs\n    const [showAddActivity, setShowAddActivity] = useState(false)\n    const [showEditCategory, setShowEditCategory] = useState(false)\n    const [showUploadCSV, setShowUploadCSV] = useState(false)\n\n    const getActivities = () => {\n        setLoading(true)\n        const token = localStorage.getItem('token')\n        axios.get(process.env.REACT_APP_BACKEND_URL + 'activity/getActivities', {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        }).then((response) => {\n            setActivitiesList(response.data)\n            setLoading(false)\n        })\n    }\n\n    const getCategories = () => {\n        setLoading(true)\n        const token = localStorage.getItem('token')\n        axios.get(process.env.REACT_APP_BACKEND_URL + 'category/getCategories', {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        }).then((response) => {\n            setCategoriesList(response.data)\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        getActivities()\n        getCategories()\n    }, [user])\n\n    if (!user) {\n        return (\n            <>\n                <Nav />\n                {\n                    // if token exists show spinner, else display message\n                    localStorage.getItem('token') ?\n                        <Box align=\"center\">\n                            <CircularProgress size={100} color=\"primary\" />\n                        </Box>\n                        :\n                        <Typography>You must be logged in to access this page.</Typography>\n\n                }\n            </>\n        )\n    }\n\n    return (\n        <>\n            <Nav />\n            <Box align=\"center\">\n                <ActivityTable activitiesList={activitiesList} categoriesList={categoriesList} getActivities={getActivities} loading={loading} />\n            </Box>\n            <br />\n            <Box align=\"center\">\n                <div style={{ maxWidth: 1000 }}>\n                    <ButtonGroup variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>\n                        <Button onClick={() => { setShowEditCategory(true) }} key={'editCategory'}>Edit Categories</Button>\n                        <Button onClick={() => { setShowAddActivity(true) }} key={'addActivity'}>Add Activity</Button>\n                        <Button onClick={() => { setShowUploadCSV(true) }} key={'uploadCSV'}>Upload from CSV</Button>\n                    </ButtonGroup>\n                </div>\n            </Box>\n            <AddActivity categoriesList={categoriesList} open={showAddActivity} setShowEditCategory={setShowEditCategory} getActivities={getActivities} onClose={() => setShowAddActivity(false)} />\n            <EditCategory categoriesList={categoriesList} open={showEditCategory} getCategories={getCategories} getActivities={getActivities} onClose={() => setShowEditCategory(false)} />\n            <ImportCSV open={showUploadCSV} onClose={() => { setShowUploadCSV(false) }} getActivities={getActivities} getCategories={getCategories} />\n        </>\n    )\n}","import React from 'react'\nimport Nav from './Components/Nav'\nimport { Typography } from '@material-ui/core'\n\nexport default () => {\n    return (\n        <>\n            <Nav />\n            <Typography variant='h1' align='center'>Welcome to Budget Tracker</Typography>\n            <Typography variant='h3' align='center'>Log in or register to get started!</Typography>\n            \n        </>\n    )\n}\n","import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { UserContext } from \"../../../UserContext\";\nimport { Box, Typography, Grid, CircularProgress } from \"@material-ui/core\";\n\n// check if token exists\nexport default () => {\n  const { user, setUser } = useContext(UserContext);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!user && token) {\n      axios\n        .get(process.env.REACT_APP_BACKEND_URL + \"auth/findUser\", {\n          headers: { Authorization: `JWT ${token}` },\n        })\n        .then((response) => {\n          setUser(response.data.auth);\n        });\n    }\n  }, [user, setUser]);\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      alignItems='center'\n      justify='center'\n      direction='column'\n    >\n      <Grid item>\n        <Box align='center'>\n          <Typography variant='h1' align='center'>\n            Budget Tracker\n          </Typography>\n          <CircularProgress size={100} color='primary' />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Dashboard from \"./views/Dashboard\";\nimport LandingPage from \"./views/LandingPage\";\nimport { UserContext } from \"./UserContext\";\nimport Init from \"./views/Components/Auth/Init\";\n\nexport default () => {\n  const [user, setUser] = useState(null);\n  const token = localStorage.getItem(\"token\");\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {!user && token ? (\n        <Init />\n      ) : (\n        <Switch>\n          <Route exact path='/'>\n            {user ? <Redirect to='/dashboard' /> : <LandingPage />}\n          </Route>\n          <Route path='/home' render={() => <LandingPage />} />\n          <Route path='/dashboard' render={() => <Dashboard />} />\n          {user ? (\n            <Route render={() => <Redirect to='/dashboard' />} />\n          ) : (\n            <Route render={() => <Redirect to='/home' />} />\n          )}\n        </Switch>\n      )}\n    </UserContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <Router>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}