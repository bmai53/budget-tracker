{"version":3,"sources":["images/landing.jpg","theme.js","UserContext.js","views/Components/Auth/Login.js","views/Components/Auth/Register.js","views/Components/Nav.js","views/Components/Data/EditActivity.js","views/Components/Data/ActivityTotal.js","views/Components/Data/Filter.js","views/Components/Data/ActivityTable.js","views/Components/Data/AddActivity.js","views/Components/Data/EditCategory.js","views/Components/Data/ImportCSV/HeaderMatching.js","views/Components/Data/ImportCSV/Upload.js","views/Components/Data/ImportCSV/ErrorSnackbar.js","views/Components/Data/ImportCSV/ImportCSV.js","views/Dashboard.js","views/LandingPage.js","views/Components/Splash.js","views/Components/Auth/Init.js","App.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","main","contrastText","secondary","positive","negative","background","default","typography","fontFamily","join","UserContext","createContext","open","onClose","setUser","useContext","useState","email","setEmail","password","setPassword","waiting","setWaiting","showSuccess","setShowSuccess","showError","setShowError","handleLogin","useCallback","axios","post","process","then","response","localStorage","setItem","data","token","auth","catch","error","useEffect","enterPressListener","e","code","document","addEventListener","removeEventListener","Dialog","DialogTitle","style","backgroundColor","color","IconButton","onClick","position","top","right","DialogContent","TextField","autoFocus","label","type","fullWidth","value","onChange","event","target","DialogActions","Button","CircularProgress","size","Snackbar","autoHideDuration","Alert","severity","confirmPassword","setConfirmPassword","showEmailError","setShowEmailError","showPasswordError","setShowPasswordError","handleRegister","status","useStyles","makeStyles","root","flexGrow","marginBottom","spacing","user","showLogin","setShowLogin","showRegister","setShowRegister","classes","renderButtons","component","NavLink","to","key","removeItem","window","location","href","ENV","AppBar","className","Toolbar","Grid","container","justify","alignItems","item","xs","display","Tooltip","title","fontSize","textTransform","Typography","variant","textAlign","Login","Register","deleteButton","categoriesList","getActivities","name","setName","amount","setAmount","moment","date","format","setDate","category_id","categoryId","setCategoryId","setType","getItem","handleSubmit","put","id","updateData","headers","Authorization","InputLabelProps","shrink","select","map","c","MenuItem","delete","total","forEach","d","parseFloat","toFixed","inputField","filterFooter","categoryFilter","typeFilter","dateFilter","setCategoryFilter","setTypeFilter","setDateFilter","table","maxWidth","tableHeader","common","white","income","expense","activitiesList","loading","setData","page","setPage","rowsPerPage","setRowsPerPage","showFilters","setShowFilters","showEditActivity","setShowEditActivity","editRow","setEditRow","filteredData","filter","a","category_name","today","Date","duration","getDate","rows","row","TableRow","TableCell","align","charAt","toUpperCase","slice","emptyRows","Math","min","length","Paper","TableContainer","Table","TableHead","colSpan","verticalAlign","ActivityTotal","FormControlLabel","control","Switch","checked","sm","Collapse","in","Filter","padding","TableBody","height","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","EditActivity","setShowEditCategory","Box","width","getCategories","submitHandler","categoryName","setCategoryName","FormControl","Select","element","i","uploadHandler","acceptedFiles","filesLimit","clearOnUnmount","useChipsForPreview","previewGridProps","direction","showAlerts","alertSnackbarProps","anchorOrigin","vertical","horizontal","dropzoneText","List","dense","disablePadding","ListItem","ListItemIcon","ListItemText","file","message","parsedFile","setParsedFile","setHeaders","confirmHeaders","setConfirmHeaders","emptyCells","setEmptyCells","duplicateCol","setDuplicateCol","failedToReadFile","setFailedToReadFile","noFile","setNoFile","headerMismatch","setHeaderMismatch","DuplicateHeader","setDuplicateHeader","UploadError","setUploadError","UploadSuccess","setUploadSuccess","HeaderMatching","preventDefault","Set","indexOf","res","console","log","Upload","reader","FileReader","readAsText","onload","fileContent","result","parseResults","readString","safeToContinue","pop","onerror","ErrorSnackbar","setLoading","setActivitiesList","setCategoriesList","showAddActivity","setShowAddActivity","showEditCategory","showUploadCSV","setShowUploadCSV","get","Nav","ActivityTable","ButtonGroup","AddActivity","EditCategory","ImportCSV","styles","box","backgroundImage","landing","backgroundSize","text","paddingTop","splash","Splash","Provider","Init","exact","path","LandingPage","render","Dashboard","ReactDOM","ThemeProvider","App","getElementById"],"mappings":"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","file":"static/js/main.986bfdea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing.ac7640ec.jpg\";","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport \"typeface-roboto\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#35B234\", // Light green\n      contrastText: \"#FFFFFF\",\n    },\n    secondary: {\n      main: \"#FFFFFF\", // White\n    },\n    positive: {\n      main: \"#4caf50\", // default palette success\n    },\n    negative: {\n      main: \"#f44336\", // default palette error\n    },\n    background: {\n      default: \"#FFFFFF\",\n    },\n  },\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n  },\n});\n\nexport default theme;\n","import {createContext} from 'react'\n\nexport const UserContext = createContext(null)","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { UserContext } from '../../../UserContext'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, CircularProgress } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default ({ open, onClose }) => {\n\n    const { setUser } = useContext(UserContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    // wait for server response to login POST\n    const [waiting, setWaiting] = useState(false)\n\n    // snackbars\n    const [showSuccess, setShowSuccess] = useState(false)\n    const [showError, setShowError] = useState(false)\n\n    const handleLogin = useCallback(() => {\n        setWaiting(true)\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/login', {\n            email: email,\n            password: password\n        })\n            .then((response) => {\n                localStorage.setItem('token', response.data.token)\n                setUser(response.data.auth)\n                setShowSuccess(true)\n                setWaiting(false)\n                onClose()\n            })\n            .catch((error) => {\n                setShowError(true)\n                setWaiting(false)\n            })\n    }, [email, password, onClose, setUser])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleLogin();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n    }, [open, handleLogin])\n\n    return (\n        <>\n            <Dialog open={open ? open : false} onClose={onClose}>\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    Login\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                    <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                    <DialogActions>\n\n                        <Button onClick={handleLogin} color='primary'>{waiting ? <CircularProgress size={25} color=\"primary\" /> : 'Login' }</Button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n\n\n            <Snackbar open={showSuccess} autoHideDuration={3000} onClose={() => { setShowSuccess(false) }}>\n                <Alert onClose={() => { setShowSuccess(false) }} severity=\"success\">\n                    Login Success!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showError} autoHideDuration={3000} onClose={() => { setShowError(false) }}>\n                <Alert onClose={() => { setShowError(false) }} severity=\"error\">\n                    Invalid Credentials\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, CircularProgress } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default ({ open, onClose }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    // wait for server response to register POST\n    const [waiting, setWaiting] = useState(false)\n\n    // snackbars\n    const [showSuccess, setShowSuccess] = useState(false)\n    const [showError, setShowError] = useState(false)\n    const [showEmailError, setShowEmailError] = useState(false)\n    const [showPasswordError, setShowPasswordError] = useState(false)\n\n\n    const handleRegister = useCallback(() => {\n        setWaiting(true)\n        if (password === confirmPassword) {\n            axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/register', {\n                email: email,\n                password: password\n            })\n                .then((response) => {\n                    setEmail('')\n                    setPassword('')\n                    setConfirmPassword('')\n                    setShowSuccess(true)\n                    onClose()\n                    setWaiting(false)\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        error.response.status === 409 ? setShowEmailError(true) : setShowError(true)\n                    }\n                    setWaiting(false)\n                })\n        }\n        else {\n            setShowPasswordError(true)\n        }\n    }, [email, password, confirmPassword, onClose])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleRegister();\n            }\n        }\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        }\n    }, [open, handleRegister])\n\n    return (\n        <>\n            <Dialog open={open ? open : false} onClose={onClose}>\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    Register\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                    <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                    <TextField label='Confirm Password' type='password' fullWidth value={confirmPassword} onChange={(event) => { setConfirmPassword(event.target.value) }} />\n                    <DialogActions>\n                        <Button onClick={handleRegister} color='primary'>{waiting ? <CircularProgress size={25} color=\"primary\" /> : 'Register'}</Button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n\n            <Snackbar open={showSuccess} autoHideDuration={3000} onClose={() => { setShowSuccess(false) }}>\n                <Alert onClose={() => { setShowSuccess(false) }} severity=\"success\">\n                    Account created!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showError} autoHideDuration={3000} onClose={() => { setShowError(false) }}>\n                <Alert onClose={() => { setShowError(false) }} severity=\"error\">\n                    Registration error\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showEmailError} autoHideDuration={3000} onClose={() => { setShowEmailError(false) }}>\n                <Alert onClose={() => { setShowEmailError(false) }} severity=\"info\">\n                    Email already registered\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showPasswordError} autoHideDuration={3000} onClose={() => { setShowPasswordError(false) }}>\n                <Alert onClose={() => { setShowPasswordError(false) }} severity=\"info\">\n                    Password does not match\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}","import React, { useState, useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  IconButton,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Login from \"./Auth/Login\";\nimport Register from \"./Auth/Register\";\nimport { UserContext } from \"../../UserContext\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(5),\n  },\n}));\n\nexport default () => {\n  const { user, setUser } = useContext(UserContext);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n\n  const classes = useStyles();\n\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem(\"token\");\n    window.location.href =\n      process.env.ENV === \"DEV\" ? \"/home\" : \"/budget-tracker/\";\n  };\n\n  const renderButtons = !user\n    ? [\n        <Button\n          color='inherit'\n          onClick={() => {\n            setShowLogin(true);\n          }}\n          key={\"login\"}\n        >\n          Login\n        </Button>,\n        <Button\n          color='inherit'\n          onClick={() => {\n            setShowRegister(true);\n          }}\n          key={\"register\"}\n        >\n          Register\n        </Button>,\n      ]\n    : [\n        <Button\n          color='inherit'\n          component={NavLink}\n          to='/dashboard'\n          key={\"dashboard\"}\n        >\n          Dashboard\n        </Button>,\n        <Button color='inherit' onClick={handleLogout} key={\"logout\"}>\n          Logout\n        </Button>,\n      ];\n\n  return (\n    <>\n      <AppBar position='static' className={classes.root}>\n        <Toolbar>\n          <Grid\n            container\n            spacing={1}\n            justify='space-between'\n            alignItems='center'\n          >\n            <Grid item xs={8}>\n              <div style={{ display: \"inline-flex\", alignItems: \"center\" }}>\n                <Tooltip title='Github Repo'>\n                  <IconButton\n                    onClick={() =>\n                      window.open(\n                        \"https://github.com/bmai53/budget-tracker\",\n                        \"_blank\"\n                      )\n                    }\n                  >\n                    <GitHubIcon fontSize='large' color='secondary' />\n                  </IconButton>\n                </Tooltip>\n                <Button\n                  style={{ textTransform: \"none\" }}\n                  color='inherit'\n                  component={NavLink}\n                  to='/home'\n                >\n                  <Typography variant='h4'>Budget Tracker</Typography>\n                </Button>\n              </div>\n            </Grid>\n            <Grid item xs={4} style={{ textAlign: \"right\" }}>\n              {renderButtons}\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Login open={showLogin} onClose={() => setShowLogin(false)} />\n      <Register open={showRegister} onClose={() => setShowRegister(false)} />\n    </>\n  );\n};\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { makeStyles } from '@material-ui/core/styles'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\nexport default ({ open, onClose, data, categoriesList, getActivities }) => {\n    const [name, setName] = useState(data.name)\n    const [amount, setAmount] = useState(data.amount)\n    const [date, setDate] = useState(moment(data.date).format('YYYY-MM-DD'))\n    const [categoryId, setCategoryId] = useState(data.category_id)\n    const [type, setType] = useState(data.type)\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.put(process.env.REACT_APP_BACKEND_URL + 'activity/updateActivity', {\n            id: data.id,\n            updateData: {\n                name: name,\n                amount: amount,\n                date: date,\n                category_id: categoryId,\n                type: type\n            }\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            },\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }, [getActivities, name, amount, date, categoryId, type, token, data.id, onClose])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'activity/deleteActivity', {\n            data: {\n                id: data.id\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [handleSubmit, open])\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                Edit Activity\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Name' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <TextField label='Amount' type='number' fullWidth value={amount} onChange={(event) => { setAmount(event.target.value) }} />\n                <TextField label='Date' type='date' fullWidth value={date} InputLabelProps={{ shrink: true }} onChange={event => setDate(event.target.value)} />\n                <TextField label='Category' type='number' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <TextField label='Type' fullWidth value={type} select onChange={event => setType(event.target.value)}>\n                    <MenuItem value={'expense'}>Expense</MenuItem>\n                    <MenuItem value={'income'}>Income</MenuItem>\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                    <Button onClick={handleSubmit} color='primary'>Update</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    positive: {\n        color: theme.palette.positive.main\n    },\n    negative: {\n        color: theme.palette.negative.main\n    }\n}))\n\nexport default ({ data }) => {\n    let total = 0\n    data.forEach(d => {\n        d.type === 'income' ? total += parseFloat(d.amount) : total -= parseFloat(d.amount)\n    })\n\n    const classes = useStyles()\n    return (\n        <>\n            <Typography variant='h3' display='inline'>\n                Activities Total:&nbsp;\n            </Typography>\n            <Typography variant='h3' display='inline' className={total >= 0 ? classes.positive : classes.negative}>\n                ${total.toFixed(2)}\n            </Typography>\n        </>\n    )\n}","import React from \"react\";\n\nimport { TextField, MenuItem, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputField: {\n    marginBottom: \"24px\",\n  },\n\n  filterFooter: {\n    textAlign: \"center\",\n  },\n}));\n\nexport default ({\n  categoriesList,\n  categoryFilter,\n  typeFilter,\n  dateFilter,\n  setCategoryFilter,\n  setTypeFilter,\n  setDateFilter,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <TextField\n        className={classes.inputField}\n        label='Category Filter'\n        type='text'\n        fullWidth\n        select\n        value={categoryFilter}\n        onChange={(e) => setCategoryFilter(e.target.value)}\n      >\n        <MenuItem value='all' key='all'>\n          All\n        </MenuItem>\n        {categoriesList.map((c) => (\n          <MenuItem value={c.name} key={c.name}>\n            {c.name}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        className={classes.inputField}\n        label='Type Filter'\n        type='text'\n        fullWidth\n        select\n        value={typeFilter}\n        onChange={(e) => setTypeFilter(e.target.value)}\n      >\n        <MenuItem value='all'>All</MenuItem>\n        <MenuItem value='income'>Income</MenuItem>\n        <MenuItem value='expense'>Expense</MenuItem>\n      </TextField>\n      <TextField\n        className={classes.inputField}\n        label='Date Filter'\n        type='text'\n        fullWidth\n        select\n        value={dateFilter}\n        onChange={(e) => setDateFilter(e.target.value)}\n      >\n        <MenuItem value={0}>All</MenuItem>\n        <MenuItem value={30}>30 Days</MenuItem>\n        <MenuItem value={60}>60 Days</MenuItem>\n        <MenuItem value={180}>180 Days</MenuItem>\n        <MenuItem value={362}>1 Year</MenuItem>\n      </TextField>\n\n      <div className={classes.filterFooter}>\n        <Button\n          color='primary'\n          onClick={() => {\n            setCategoryFilter(\"all\");\n            setTypeFilter(\"all\");\n            setDateFilter(0);\n          }}\n        >\n          Clear Filters\n        </Button>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Paper,\n  IconButton,\n  Tooltip,\n  CircularProgress,\n  FormControlLabel,\n  Switch,\n  Collapse,\n  Grid,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport moment from \"moment\";\nimport EditActivity from \"./EditActivity\";\nimport ActivityTotal from \"./ActivityTotal\";\nimport Filter from \"./Filter\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    maxWidth: 1000,\n  },\n  tableHeader: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n  },\n  income: {\n    color: theme.palette.positive.main,\n  },\n  expense: {\n    color: theme.palette.negative.main,\n  },\n}));\n\nexport default ({ activitiesList, categoriesList, getActivities, loading }) => {\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [showFilters, setShowFilters] = useState(false);\n  const [categoryFilter, setCategoryFilter] = useState(\"all\");\n  const [typeFilter, setTypeFilter] = useState(\"all\");\n  const [dateFilter, setDateFilter] = useState(0);\n  const [showEditActivity, setShowEditActivity] = useState(false);\n  const [editRow, setEditRow] = useState(); // store data of row to edit\n\n  useEffect(() => {\n    let filteredData = activitiesList;\n\n    if (categoryFilter !== \"all\") {\n      filteredData = filteredData.filter(\n        (a) => a.category_name === categoryFilter\n      );\n    }\n    if (typeFilter !== \"all\") {\n      filteredData = filteredData.filter((a) => a.type === typeFilter);\n    }\n    if (dateFilter !== 0) {\n      const today = new Date();\n      // using getDate to calculate date 0, 30, 60, 180, 365 days ago\n      const duration = new Date(\n        new Date().setDate(today.getDate() - dateFilter)\n      );\n      filteredData = filteredData.filter((a) => new Date(a.date) >= duration);\n    }\n\n    setData(filteredData);\n  }, [activitiesList, categoriesList, categoryFilter, typeFilter, dateFilter]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const classes = useStyles();\n  const rows = data.map((row) => (\n    <TableRow key={row.id}>\n      <TableCell>{row.name}</TableCell>\n      <TableCell align='right'>\n        {moment(row.date).format(\"MMMM D, YYYY\")}\n      </TableCell>\n      <TableCell align='right'>{row.amount}</TableCell>\n      <TableCell align='right'>{row.category_name}</TableCell>\n      <TableCell\n        align='right'\n        className={row.type === \"income\" ? classes.income : classes.expense}\n      >\n        {row.type.charAt(0).toUpperCase() + row.type.slice(1)}\n      </TableCell>\n      <TableCell>\n        <Tooltip title='Edit'>\n          <IconButton\n            onClick={() => {\n              setShowEditActivity(true);\n              setEditRow(row);\n            }}\n          >\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n      </TableCell>\n    </TableRow>\n  ));\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <>\n      <Paper className={classes.table}>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell colSpan={4} style={{ verticalAlign: \"top\" }}>\n                  <ActivityTotal data={data} />\n                </TableCell>\n                <TableCell colSpan={2} align='right'>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        color='primary'\n                        checked={showFilters}\n                        onChange={() => {\n                          setShowFilters(!showFilters);\n                        }}\n                      />\n                    }\n                    label='Show Filters'\n                  />\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={6}>\n                  <Grid container justify='flex-end'>\n                    <Grid item xs={12} sm={6}>\n                      <Collapse in={showFilters}>\n                        <Filter\n                          categoriesList={categoriesList}\n                          categoryFilter={categoryFilter}\n                          typeFilter={typeFilter}\n                          dateFilter={dateFilter}\n                          setCategoryFilter={setCategoryFilter}\n                          setTypeFilter={setTypeFilter}\n                          setDateFilter={setDateFilter}\n                        />\n                      </Collapse>\n                    </Grid>\n                  </Grid>\n                </TableCell>\n              </TableRow>\n\n              <TableRow>\n                <TableCell className={classes.tableHeader}>Name</TableCell>\n                <TableCell className={classes.tableHeader} align='right'>\n                  Date\n                </TableCell>\n                <TableCell className={classes.tableHeader} align='right'>\n                  Amount\n                </TableCell>\n                <TableCell className={classes.tableHeader} align='right'>\n                  Category\n                </TableCell>\n                <TableCell className={classes.tableHeader} align='right'>\n                  Type\n                </TableCell>\n                <TableCell className={classes.tableHeader} padding='checkbox' />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading ? (\n                <TableRow>\n                  <TableCell colSpan={6} align='center'>\n                    <CircularProgress size={100} color='primary' />\n                  </TableCell>\n                </TableRow>\n              ) : (\n                rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              )}\n              {rows.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={6} align='center'>\n                    <Typography>No activities found</Typography>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                emptyRows > 0 && (\n                  <TableRow\n                    key={\"empty rows\"}\n                    style={{ height: 53 * emptyRows }}\n                  >\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component='div'\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      {\n        // test for showEditActivity to remount dialog to reset initial useState()\n        editRow && showEditActivity ? (\n          <EditActivity\n            categoriesList={categoriesList}\n            getActivities={getActivities}\n            data={editRow}\n            open={showEditActivity}\n            onClose={() => {\n              setShowEditActivity(false);\n              setEditRow({});\n            }}\n          />\n        ) : (\n          <></>\n        )\n      }\n    </>\n  );\n};\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem, Box } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport default ({ open, onClose, categoriesList, getActivities, setShowEditCategory }) => {\n\n    const [name, setName] = useState('')\n    const [amount, setAmount] = useState(0)\n    const [date, setDate] = useState('')\n    const [categoryId, setCategoryId] = useState('')\n    const [type, setType] = useState('')\n    // const [categoriesList, setCategoriesList] = useState([])\n\n    const handleSubmit = useCallback(() => {\n        const token = localStorage.getItem('token')\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'activity/addActivity', {\n            name: name,\n            amount: amount,\n            date: date,\n            category_id: categoryId,\n            type: type,\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                setName('')\n                setAmount(0)\n                setDate('')\n                setCategoryId('')\n                setType('')\n                getActivities()\n                onClose()\n            })\n    }, [getActivities, onClose, amount, categoryId, date, name, type])\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit()\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener)\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener)\n        };\n    }, [open, handleSubmit])\n\n    return (\n        <Dialog open={open ? open : false} onClose={onClose}>\n            <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                Add Activity\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Name' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <TextField label='Amount' type='number' fullWidth value={amount} onChange={(event) => { setAmount(event.target.value) }} />\n                <TextField label='Date' type='date' fullWidth value={date} InputLabelProps={{ shrink: true }} onChange={event => setDate(event.target.value)} />\n                <Box width='100%' style={{ display: 'inline-flex'}}>\n                    <TextField label='Category' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                        {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                    </TextField>\n                    <DialogActions style={{ position: 'relative', top: '10px'}}>\n                        <Button\n                            color='primary'\n                            onClick={() => {\n                                onClose()\n                                setShowEditCategory(true)\n                            }}\n                        >\n                            Add New Category\n                        </Button>\n                    </DialogActions>\n                </Box>\n                <TextField label='Type' fullWidth value={type} select onChange={event => setType(event.target.value)}>\n                    <MenuItem value={'expense'}>Expense</MenuItem>\n                    <MenuItem value={'income'}>Income</MenuItem>\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleSubmit} color='primary'>Submit</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\n\nexport default ({ open, onClose, categoriesList, getCategories, getActivities }) => {\n    const [name, setName] = useState('')\n    const [categoryId, setCategoryId] = useState('')\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'category/addCategory', {\n            name: name\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                setName('')\n                getCategories()\n                onClose()\n            })\n    }, [name, onClose, token, getCategories])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'category/deleteCategory', {\n            data: {\n                id: categoryId\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getCategories()\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [open, handleSubmit])\n\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                Edit Categories\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Add New Category' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <DialogActions>\n                    <Button onClick={handleSubmit} color='primary'>Add</Button>\n                </DialogActions>\n\n                <TextField label='Delete Existing Category' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                </DialogActions>\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\n\n\nexport default ({ submitHandler, headers, date, name, categoryName, amount, type, setDate, setName, setCategoryName, setAmount, setType }) => {\n\n    return (\n        <>\n            <Grid container spacing={3}>\n                <Grid item xs={3}>\n                    {/* empty for spacing purposes */}\n                </Grid>\n                <Grid item xs={9}>\n                    <Typography variant=\"h5\" align=\"center\" color=\"primary\">Columns found in CSV file</Typography>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Date:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setDate(e.target.value)} value={date}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Name:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setName(e.target.value)} value={name}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Category:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setCategoryName(e.target.value)} value={categoryName}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Amount:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setAmount(e.target.value)} value={amount}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Type:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setType(e.target.value)} value={type}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n\n            <DialogActions>\n                <Button onClick={submitHandler} size='large' color='primary'>Submit</Button>\n            </DialogActions>\n        </>\n    )\n}","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\n\nexport default ({ uploadHandler }) => {\n\n    return (\n        <>\n            <DropzoneArea\n                acceptedFiles={['.csv']}\n                filesLimit={1}\n                clearOnUnmount\n                useChipsForPreview\n                previewGridProps={{ container: { justify: 'center', spacing: 3, direction: 'row' } }}\n                showAlerts={['error', 'info']}\n                alertSnackbarProps={{\n                    anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\n                    autoHideDuration: 3000\n                }}\n                dropzoneText={\n                    <div style={{ padding: '0 25px 0 25px' }}>\n                        <Typography variant=\"h6\" align=\"center\" color=\"primary\">\n                            Drag and drop or click to upload a CSV file.\n                        </Typography>\n                        <br />\n                        <Typography align=\"justify\" >\n                            Please ensure the CSV file has the following columns:\n                        </Typography>\n                        <List dense disablePadding>\n                            <ListItem >\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Date (YYYY-MM-DD)\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Name\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Amount\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Category\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Type (income or expense)\" />\n                            </ListItem>\n                        </List>\n                    </div>\n                }\n                onChange={(file) => { uploadHandler(file) }}\n            />\n\n            <br />\n\n\n        </>\n    )\n}","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\n\nexport default ({ open, onClose, message, severity }) => {\n\n    return (\n        <Snackbar open={open} autoHideDuration={3000} onClose={onClose}>\n            <Alert onClose={onClose} severity={severity}>\n                {message}\n            </Alert>\n        </Snackbar>\n    )\n}","import React, { useState } from 'react'\nimport axios from 'axios'\nimport theme from '../../../../theme'\nimport { DialogTitle, Dialog, DialogContent, IconButton, } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport { readString } from 'react-papaparse'\nimport HeaderMatching from './HeaderMatching';\nimport Upload from './Upload'\nimport ErrorSnackbar from './ErrorSnackbar'\n\n\nexport default ({ open, onClose, getActivities, getCategories }) => {\n    const [parsedFile, setParsedFile] = useState([])\n    const [headers, setHeaders] = useState([])                      // headers from file\n    const [confirmHeaders, setConfirmHeaders] = useState(false)     // display header confirmation form\n\n    // headers\n    const [date, setDate] = useState('')\n    const [name, setName] = useState('')\n    const [categoryName, setCategoryName] = useState('')\n    const [amount, setAmount] = useState('')\n    const [type, setType] = useState('')\n\n    // snackbars\n    const [emptyCells, setEmptyCells] = useState(false)\n    const [duplicateCol, setDuplicateCol] = useState(false)\n    const [failedToReadFile, setFailedToReadFile] = useState(false)\n    const [noFile, setNoFile] = useState(false)\n    const [headerMismatch, setHeaderMismatch] = useState(false)\n    const [DuplicateHeader, setDuplicateHeader] = useState(false)\n    const [UploadError, setUploadError] = useState(false)\n    const [UploadSuccess, setUploadSuccess] = useState(false)\n\n\n    const uploadHandler = (file) => {\n\n\n        if (file.length > 0) {\n            // reading headers\n            const reader = new FileReader()\n            // file -> string\n            reader.readAsText(file[0])\n            // read as a string\n            reader.onload = (event) => {\n                const fileContent = event.target.result\n                const parseResults = readString(fileContent)     // papaparse\n                let safeToContinue = true\n                \n\n                // remove last line if empty\n                if (parseResults.data[parseResults.data.length - 1 ][0] === \"\"){\n                    parseResults.data.pop()\n                }\n\n                // check for empty cells\n                parseResults.data.forEach(row => {\n                    if (row.indexOf('') !== -1) {\n                        setEmptyCells(true)\n                        safeToContinue = false\n                    }\n                })\n\n                // check for duplicates in headers\n                if (new Set(parseResults.data[0]).size !== parseResults.data[0].length) {\n                    setDuplicateCol(true)\n                    safeToContinue = false\n                }\n\n                if (safeToContinue) {\n                    setHeaders(parseResults.data[0])\n                    setDate(parseResults.data[0][0] ? parseResults.data[0][0] : '')\n                    setName(parseResults.data[0][1] ? parseResults.data[0][1] : '')\n                    setCategoryName(parseResults.data[0][2] ? parseResults.data[0][2] : '')\n                    setAmount(parseResults.data[0][3] ? parseResults.data[0][3] : '')\n                    setType(parseResults.data[0][4] ? parseResults.data[0][4] : '')\n                    setParsedFile(parseResults.data)\n                    setConfirmHeaders(true)\n                }\n            }\n\n            reader.onerror = (event) => {\n                setFailedToReadFile(true)\n            }\n        }\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n\n        if (parsedFile.length === 0) {\n            setNoFile(true)\n        }\n        // if headers are not yet mapped\n        else if (!date || !name || !categoryName || !amount || !type) {\n            setHeaderMismatch(true)\n        }\n        // duplicate matches\n        else if (new Set([date, name, categoryName, amount, type]).size !== 5) {\n            setDuplicateHeader(true)\n        }\n        else {\n            // mapping columns to columns found in csv file\n            const map = {\n                date: headers.indexOf(date),\n                name: headers.indexOf(name),\n                categoryName: headers.indexOf(categoryName),\n                amount: headers.indexOf(amount),\n                type: headers.indexOf(type),\n            }\n\n            const data = {\n                data: parsedFile,\n                map: map,\n            }\n            const token = localStorage.getItem('token')\n\n            // sending to server\n            axios.post(process.env.REACT_APP_BACKEND_URL + 'activity/uploadCSV', data, {\n                headers: { Authorization: `JWT ${token}` }\n            })\n                .then(res => {\n                    console.log(res.data.message)\n                    setUploadSuccess(true)\n                    getActivities()\n                    getCategories()\n                    onClose()\n                })\n                .catch(error => {\n                    setUploadError(true)\n                    getActivities()\n                    getCategories()\n                    onClose()\n                })\n        }\n\n    }\n\n    return (\n        <>\n            <Dialog \n                open={open ? open : false}\n                onClose={() => {\n                    // unmount HeaderMatching to remove file\n                    setConfirmHeaders(false)\n                    onClose()\n                }}\n            >\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    {confirmHeaders ? 'Please match the following' : 'Upload CSV'}\n                    <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    {\n                        confirmHeaders ?\n                            <HeaderMatching\n                                headers={headers}\n                                date={date} name={name} categoryName={categoryName} amount={amount} type={type}\n                                setDate={setDate} setName={setName} setCategoryName={setCategoryName} setAmount={setAmount} setType={setType}\n                                submitHandler={submitHandler}\n                            />\n                            :\n                            <Upload uploadHandler={uploadHandler} />\n                    }\n                </DialogContent>\n            </Dialog>\n            <ErrorSnackbar \n                open={emptyCells} onClose={() => { setEmptyCells(false) }} severity={'error' }\n                message={'Empty cells detected.'}\n            />\n            <ErrorSnackbar\n                open={duplicateCol} onClose={() => { setDuplicateCol(false) }} severity={'error'}\n                message={'Duplicate columns detected.'}\n            />\n            <ErrorSnackbar\n                open={failedToReadFile} onClose={() => { setFailedToReadFile(false) }} severity={'error'}\n                message={'Failed to read file.'}\n            />\n\n            <ErrorSnackbar\n                open={noFile} onClose={() => { setNoFile(false) }} severity={'error'}\n                message={'No file found.'}\n            />\n            <ErrorSnackbar\n                open={headerMismatch} onClose={() => { setHeaderMismatch(false) }} severity={'error'}\n                message={'Headers are not all matched.'}\n            />\n            <ErrorSnackbar\n                open={DuplicateHeader} onClose={() => { setDuplicateHeader(false) }} severity={'error'}\n                message={'Duplicate header match detected.'}\n            />\n            <ErrorSnackbar\n                open={UploadError} onClose={() => { setUploadError(false) }} severity={'error'}\n                message={'Upload error.'}\n            />\n            <ErrorSnackbar\n                open={UploadSuccess} onClose={() => { setUploadSuccess(false) }} severity={'success'}\n                message={'CSV file uploaded successfully!'}\n            />\n\n        </>\n    )\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Nav from \"./Components/Nav\";\nimport ActivityTable from \"./Components/Data/ActivityTable\";\nimport { UserContext } from \"../UserContext\";\nimport {\n  Button,\n  ButtonGroup,\n  Typography,\n  Box,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport AddActivity from \"./Components/Data/AddActivity\";\nimport EditCategory from \"./Components/Data/EditCategory\";\nimport ImportCSV from \"./Components/Data/ImportCSV/ImportCSV\";\n\nexport default () => {\n  const { user } = useContext(UserContext);\n  const [loading, setLoading] = useState(true);\n  const [activitiesList, setActivitiesList] = useState([]);\n  const [categoriesList, setCategoriesList] = useState([]);\n\n  // dialogs\n  const [showAddActivity, setShowAddActivity] = useState(false);\n  const [showEditCategory, setShowEditCategory] = useState(false);\n  const [showUploadCSV, setShowUploadCSV] = useState(false);\n\n  const getActivities = () => {\n    setLoading(true);\n    const token = localStorage.getItem(\"token\");\n    axios\n      .get(process.env.REACT_APP_BACKEND_URL + \"activity/getActivities\", {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n      })\n      .then((response) => {\n        setActivitiesList(response.data);\n        setLoading(false);\n      });\n  };\n\n  const getCategories = () => {\n    setLoading(true);\n    const token = localStorage.getItem(\"token\");\n    axios\n      .get(process.env.REACT_APP_BACKEND_URL + \"category/getCategories\", {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n      })\n      .then((response) => {\n        setCategoriesList(response.data);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getActivities();\n    getCategories();\n  }, [user]);\n\n  if (!user) {\n    return (\n      <>\n        <Nav />\n        {\n          // if token exists show spinner, else display message\n          localStorage.getItem(\"token\") ? (\n            <Box align='center'>\n              <CircularProgress size={100} color='primary' />\n            </Box>\n          ) : (\n            <Typography>You must be logged in to access this page.</Typography>\n          )\n        }\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Nav />\n      <Box align='center'>\n        <ActivityTable\n          activitiesList={activitiesList}\n          categoriesList={categoriesList}\n          getActivities={getActivities}\n          loading={loading}\n        />\n      </Box>\n      <br />\n      <Box align='center'>\n        <div style={{ maxWidth: 1000 }}>\n          <ButtonGroup\n            variant='contained'\n            size='large'\n            color='primary'\n            fullWidth\n          >\n            <Button\n              onClick={() => {\n                setShowEditCategory(true);\n              }}\n              key={\"editCategory\"}\n            >\n              Edit Categories\n            </Button>\n            <Button\n              onClick={() => {\n                setShowAddActivity(true);\n              }}\n              key={\"addActivity\"}\n            >\n              Add Activity\n            </Button>\n            <Button\n              onClick={() => {\n                setShowUploadCSV(true);\n              }}\n              key={\"uploadCSV\"}\n            >\n              Upload from CSV\n            </Button>\n          </ButtonGroup>\n        </div>\n      </Box>\n      <AddActivity\n        categoriesList={categoriesList}\n        open={showAddActivity}\n        setShowEditCategory={setShowEditCategory}\n        getActivities={getActivities}\n        onClose={() => setShowAddActivity(false)}\n      />\n      <EditCategory\n        categoriesList={categoriesList}\n        open={showEditCategory}\n        getCategories={getCategories}\n        getActivities={getActivities}\n        onClose={() => setShowEditCategory(false)}\n      />\n      <ImportCSV\n        open={showUploadCSV}\n        onClose={() => {\n          setShowUploadCSV(false);\n        }}\n        getActivities={getActivities}\n        getCategories={getCategories}\n      />\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport Nav from \"./Components/Nav\";\nimport { Typography } from \"@material-ui/core\";\nimport landing from \"../images/landing.jpg\";\n\nconst styles = {\n  box: {\n    width: \"100%\",\n    height: \"600px\",\n    backgroundImage: `url(${landing})`,\n    backgroundSize: \"cover\",\n  },\n\n  text: {\n    color: \"#FFF\",\n  },\n};\n\nexport default () => {\n  // const [width, setWidth] = useState(window.innerWidth);\n\n  // useEffect(() => {\n  //   const handleResize = () => {\n  //     const { innerWidth, innerHeight } = window;\n  //     setWidth(innerWidth);\n  //   };\n  //   window.addEventListener(\"resize\", handleResize);\n\n  //   return () => {\n  //     window.removeEventListener(\"resize\", handleResize);\n  //   };\n  // }, []);\n\n  // const data = [\n  //   { month: \"J\", income: 1500, expense: 1200 },\n  //   { month: \"F\", income: 2200, expense: 500 },\n  //   { month: \"M\", income: 1000, expense: 700 },\n  //   { month: \"A\", income: 800, expense: 1600 },\n  //   { month: \"M\", income: 2000, expense: 1500 },\n  //   { month: \"J\", income: 3200, expense: 1200 },\n  //   { month: \"J\", income: 2000, expense: 1000 },\n  //   { month: \"A\", income: 2200, expense: 800 },\n  //   { month: \"S\", income: 2000, expense: 900 },\n  //   { month: \"O\", income: 2500, expense: 800 },\n  //   { month: \"N\", income: 2600, expense: 700 },\n  //   { month: \"D\", income: 2700, expense: 700 },\n  // ];\n\n  return (\n    <>\n      <Nav />\n      <div style={styles.box}>\n        <div>\n          <Typography\n            variant='h1'\n            align='center'\n            style={{ ...styles.text, paddingTop: \"200px\" }}\n          >\n            Welcome to Budget Tracker\n          </Typography>\n          <Typography variant='h3' align='center' style={styles.text}>\n            Login or sign up to start!\n          </Typography>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Box, Typography, Grid, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  splash: {\n    paddingTop: \"25%\",\n    height: \"100vh\",\n  },\n}));\n\nexport default () => {\n  const classes = useStyles();\n  return (\n    <Box align='center' className={classes.splash}>\n      <Typography variant='h1' align='center'>\n        Budget Tracker\n      </Typography>\n      <CircularProgress size={100} color='primary' />\n    </Box>\n  );\n};\n","import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { UserContext } from \"../../../UserContext\";\nimport Splash from \"../Splash\";\n\n// check if token exists and authorizes user\n// render Splash while checking\nexport default () => {\n  const { user, setUser } = useContext(UserContext);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!user && token) {\n      axios\n        .get(process.env.REACT_APP_BACKEND_URL + \"auth/findUser\", {\n          headers: { Authorization: `JWT ${token}` },\n        })\n        .then((response) => {\n          setUser(response.data.auth);\n        });\n    }\n  }, [user, setUser]);\n\n  return <Splash />;\n};\n","import React, { useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Dashboard from \"./views/Dashboard\";\nimport LandingPage from \"./views/LandingPage\";\nimport { UserContext } from \"./UserContext\";\nimport Init from \"./views/Components/Auth/Init\";\n\nexport default () => {\n  const [user, setUser] = useState(null);\n  const token = localStorage.getItem(\"token\");\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {!user && token ? (\n        <Init />\n      ) : (\n        <Switch>\n          <Route exact path='/'>\n            {user ? <Redirect to='/dashboard' /> : <LandingPage />}\n          </Route>\n          <Route path='/home' render={() => <LandingPage />} />\n          <Route path='/dashboard' render={() => <Dashboard />} />\n          {user ? (\n            <Route render={() => <Redirect to='/dashboard' />} />\n          ) : (\n            <Route render={() => <Redirect to='/home' />} />\n          )}\n        </Switch>\n      )}\n    </UserContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <Router>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}