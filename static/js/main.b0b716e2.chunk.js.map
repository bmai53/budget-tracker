{"version":3,"sources":["theme.js","UserContext.js","views/Components/Auth/Login.js","views/Components/Auth/Register.js","views/Components/Nav.js","views/Components/Data/EditActivity.js","views/Components/Data/ActivityTotal.js","views/Components/Data/ActivityTable.js","views/Components/Data/AddActivity.js","views/Components/Data/EditCategory.js","views/Components/Data/ImportCSV/HeaderMatching.js","views/Components/Data/ImportCSV/Upload.js","views/Components/Data/ImportCSV/ErrorSnackbar.js","views/Components/Data/ImportCSV/ImportCSV.js","views/Dashboard.js","views/LandingPage.js","views/Components/Auth/Init.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","contrastText","secondary","positive","negative","background","default","typography","fontFamily","join","UserContext","createContext","open","onClose","setUser","useContext","useState","email","setEmail","password","setPassword","waiting","setWaiting","showSuccess","setShowSuccess","showError","setShowError","handleLogin","useCallback","axios","post","process","then","response","localStorage","setItem","data","token","auth","catch","error","useEffect","enterPressListener","e","code","document","addEventListener","removeEventListener","Dialog","DialogTitle","style","backgroundColor","color","IconButton","onClick","position","top","right","DialogContent","TextField","autoFocus","label","type","fullWidth","value","onChange","event","target","DialogActions","Button","CircularProgress","size","Snackbar","autoHideDuration","Alert","severity","confirmPassword","setConfirmPassword","showEmailError","setShowEmailError","showPasswordError","setShowPasswordError","handleRegister","status","useStyles","makeStyles","root","flexGrow","marginBottom","spacing","user","showLogin","setShowLogin","showRegister","setShowRegister","classes","renderButtons","component","NavLink","to","key","removeItem","window","location","reload","AppBar","className","Toolbar","Grid","container","justify","alignItems","item","xs","display","Tooltip","title","fontSize","Typography","variant","textAlign","Login","Register","deleteButton","categoriesList","getActivities","name","setName","amount","setAmount","moment","date","format","setDate","category_id","categoryId","setCategoryId","setType","getItem","handleSubmit","put","id","updateData","headers","Authorization","InputLabelProps","shrink","select","map","c","MenuItem","delete","total","forEach","d","parseFloat","toFixed","table","maxWidth","tableHeader","common","white","income","expense","activitiesList","loading","setData","page","setPage","rowsPerPage","setRowsPerPage","categoryFilter","setCategoryFilter","showEditActivity","setShowEditActivity","editRow","setEditRow","filteredData","filter","a","category_name","rows","row","TableRow","TableCell","align","charAt","toUpperCase","slice","emptyRows","Math","min","length","Paper","TableContainer","Table","TableHead","colSpan","ActivityTotal","padding","TableBody","height","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","EditActivity","setShowEditCategory","Box","width","getCategories","submitHandler","categoryName","setCategoryName","FormControl","Select","element","i","uploadHandler","acceptedFiles","filesLimit","clearOnUnmount","useChipsForPreview","previewGridProps","direction","showAlerts","alertSnackbarProps","anchorOrigin","vertical","horizontal","dropzoneText","List","dense","disablePadding","ListItem","ListItemIcon","ListItemText","file","message","parsedFile","setParsedFile","setHeaders","confirmHeaders","setConfirmHeaders","emptyCells","setEmptyCells","duplicateCol","setDuplicateCol","failedToReadFile","setFailedToReadFile","noFile","setNoFile","headerMismatch","setHeaderMismatch","DuplicateHeader","setDuplicateHeader","UploadError","setUploadError","UploadSuccess","setUploadSuccess","HeaderMatching","preventDefault","Set","indexOf","res","console","log","Upload","reader","FileReader","readAsText","onload","fileContent","result","parseResults","readString","safeToContinue","pop","onerror","ErrorSnackbar","setLoading","setActivitiesList","setCategoriesList","showAddActivity","setShowAddActivity","showEditCategory","showUploadCSV","setShowUploadCSV","get","Nav","ActivityTable","ButtonGroup","AddActivity","EditCategory","ImportCSV","Provider","Init","exact","path","LandingPage","render","Dashboard","ReactDOM","ThemeProvider","App","getElementById"],"mappings":"iWAsCeA,G,OAnCDC,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,KAAM,UACNC,aAAc,WAElBC,UAAW,CACPF,KAAM,WAEVG,SAAU,CACNH,KAAM,WAEVI,SAAU,CACNJ,KAAM,WAEVK,WAAY,CACRC,QAAS,YAGjBC,WAAY,CACRC,WAAY,CACR,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACFC,KAAK,SChCFC,EAAcC,wBAAc,M,yFCO1B,cAAwB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAEZC,EAAYC,qBAAWL,GAAvBI,QAF0B,EAGRE,mBAAS,IAHD,mBAG3BC,EAH2B,KAGpBC,EAHoB,OAIFF,mBAAS,IAJP,mBAI3BG,EAJ2B,KAIjBC,EAJiB,OAOJJ,oBAAS,GAPL,mBAO3BK,EAP2B,KAOlBC,EAPkB,OAUIN,oBAAS,GAVb,mBAU3BO,EAV2B,KAUdC,EAVc,OAWAR,oBAAS,GAXT,mBAW3BS,EAX2B,KAWhBC,EAXgB,KAa5BC,EAAcC,uBAAY,WAC5BN,GAAW,GACXO,IAAMC,KAAKC,gEAAkD,CACzDd,MAAOA,EACPE,SAAUA,IAETa,MAAK,SAACC,GACHC,aAAaC,QAAQ,QAASF,EAASG,KAAKC,OAC5CvB,EAAQmB,EAASG,KAAKE,MACtBd,GAAe,GACfF,GAAW,GACXT,OAEH0B,OAAM,SAACC,GACJd,GAAa,GACbJ,GAAW,QAEpB,CAACL,EAAOE,EAAUN,EAASC,IAe9B,OAZA2B,qBAAU,WACN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2BhC,GACpDe,KAIR,OADAkB,SAASC,iBAAiB,UAAWJ,GAC9B,WACHG,SAASE,oBAAoB,UAAWL,MAE7C,CAAC9B,EAAMe,IAGN,oCACI,kBAACqB,EAAA,EAAD,CAAQpC,KAAMA,IAAc,EAAOC,QAASA,GACxC,kBAACoC,EAAA,EAAD,CAAaC,MAAO,CAAEC,gBAAiBvD,EAAME,QAAQC,QAAQC,KAAMoD,MAAO,UAA1E,QAEA,kBAACC,EAAA,EAAD,CAAYD,MAAM,YAAYE,QAASzC,EAASqC,MAAO,CAAEK,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACtF,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,QAAQC,KAAK,QAAQC,WAAS,EAACC,MAAO/C,EAAOgD,SAAU,SAACC,GAAYhD,EAASgD,EAAMC,OAAOH,UACrH,kBAACL,EAAA,EAAD,CAAWE,MAAM,WAAWC,KAAK,WAAWC,WAAS,EAACC,MAAO7C,EAAU8C,SAAU,SAACC,GAAY9C,EAAY8C,EAAMC,OAAOH,UACvH,kBAACI,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAQf,QAAS3B,EAAayB,MAAM,WAAW/B,EAAU,kBAACiD,EAAA,EAAD,CAAkBC,KAAM,GAAInB,MAAM,YAAe,YAMtH,kBAACoB,EAAA,EAAD,CAAU5D,KAAMW,EAAakD,iBAAkB,IAAM5D,QAAS,WAAQW,GAAe,KACjF,kBAACkD,EAAA,EAAD,CAAO7D,QAAS,WAAQW,GAAe,IAAUmD,SAAS,WAA1D,mBAIJ,kBAACH,EAAA,EAAD,CAAU5D,KAAMa,EAAWgD,iBAAkB,IAAM5D,QAAS,WAAQa,GAAa,KAC7E,kBAACgD,EAAA,EAAD,CAAO7D,QAAS,WAAQa,GAAa,IAAUiD,SAAS,SAAxD,0BCxED,cAAwB,IAArB/D,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EAERG,mBAAS,IAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGFF,mBAAS,IAHP,mBAG3BG,EAH2B,KAGjBC,EAHiB,OAIYJ,mBAAS,IAJrB,mBAI3B4D,EAJ2B,KAIVC,EAJU,OAOJ7D,oBAAS,GAPL,mBAO3BK,EAP2B,KAOlBC,EAPkB,OAUIN,oBAAS,GAVb,mBAU3BO,EAV2B,KAUdC,EAVc,OAWAR,oBAAS,GAXT,mBAW3BS,EAX2B,KAWhBC,EAXgB,OAYUV,oBAAS,GAZnB,mBAY3B8D,EAZ2B,KAYXC,EAZW,OAagB/D,oBAAS,GAbzB,mBAa3BgE,EAb2B,KAaRC,EAbQ,KAgB5BC,EAAiBtD,uBAAY,WAC/BN,GAAW,GACPH,IAAayD,EACb/C,IAAMC,KAAKC,mEAAqD,CAC5Dd,MAAOA,EACPE,SAAUA,IAETa,MAAK,SAACC,GACHf,EAAS,IACTE,EAAY,IACZyD,EAAmB,IACnBrD,GAAe,GACfX,IACAS,GAAW,MAEdiB,OAAM,SAACC,GACAA,EAAMP,WACoB,MAA1BO,EAAMP,SAASkD,OAAiBJ,GAAkB,GAAQrD,GAAa,IAE3EJ,GAAW,MAInB2D,GAAqB,KAE1B,CAAChE,EAAOE,EAAUyD,EAAiB/D,IAetC,OAZA4B,qBAAU,WACN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2BhC,GACpDsE,KAIR,OADArC,SAASC,iBAAiB,UAAWJ,GAC9B,WACHG,SAASE,oBAAoB,UAAWL,MAE7C,CAAC9B,EAAMsE,IAGN,oCACI,kBAAClC,EAAA,EAAD,CAAQpC,KAAMA,IAAc,EAAOC,QAASA,GACxC,kBAACoC,EAAA,EAAD,CAAaC,MAAO,CAAEC,gBAAiBvD,EAAME,QAAQC,QAAQC,KAAMoD,MAAO,UAA1E,WAEA,kBAACC,EAAA,EAAD,CAAYD,MAAM,YAAYE,QAASzC,EAASqC,MAAO,CAAEK,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACtF,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,QAAQC,KAAK,QAAQC,WAAS,EAACC,MAAO/C,EAAOgD,SAAU,SAACC,GAAYhD,EAASgD,EAAMC,OAAOH,UACrH,kBAACL,EAAA,EAAD,CAAWE,MAAM,WAAWC,KAAK,WAAWC,WAAS,EAACC,MAAO7C,EAAU8C,SAAU,SAACC,GAAY9C,EAAY8C,EAAMC,OAAOH,UACvH,kBAACL,EAAA,EAAD,CAAWE,MAAM,mBAAmBC,KAAK,WAAWC,WAAS,EAACC,MAAOY,EAAiBX,SAAU,SAACC,GAAYW,EAAmBX,EAAMC,OAAOH,UAC7I,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQf,QAAS4B,EAAgB9B,MAAM,WAAW/B,EAAU,kBAACiD,EAAA,EAAD,CAAkBC,KAAM,GAAInB,MAAM,YAAe,eAKzH,kBAACoB,EAAA,EAAD,CAAU5D,KAAMW,EAAakD,iBAAkB,IAAM5D,QAAS,WAAQW,GAAe,KACjF,kBAACkD,EAAA,EAAD,CAAO7D,QAAS,WAAQW,GAAe,IAAUmD,SAAS,WAA1D,qBAIJ,kBAACH,EAAA,EAAD,CAAU5D,KAAMa,EAAWgD,iBAAkB,IAAM5D,QAAS,WAAQa,GAAa,KAC7E,kBAACgD,EAAA,EAAD,CAAO7D,QAAS,WAAQa,GAAa,IAAUiD,SAAS,SAAxD,uBAIJ,kBAACH,EAAA,EAAD,CAAU5D,KAAMkE,EAAgBL,iBAAkB,IAAM5D,QAAS,WAAQkE,GAAkB,KACvF,kBAACL,EAAA,EAAD,CAAO7D,QAAS,WAAQkE,GAAkB,IAAUJ,SAAS,QAA7D,6BAIJ,kBAACH,EAAA,EAAD,CAAU5D,KAAMoE,EAAmBP,iBAAkB,IAAM5D,QAAS,WAAQoE,GAAqB,KAC7F,kBAACP,EAAA,EAAD,CAAO7D,QAAS,WAAQoE,GAAqB,IAAUN,SAAS,QAAhE,8B,2BCzFVS,EAAYC,aAAW,SAACzF,GAAD,MAAY,CACrC0F,KAAM,CACFC,SAAU,EACVC,aAAc5F,EAAM6F,QAAQ,QAIrB,aAAO,IAAD,EAES1E,qBAAWL,GAA7BgF,EAFS,EAETA,KAAM5E,EAFG,EAEHA,QAFG,EAGiBE,oBAAS,GAH1B,mBAGV2E,EAHU,KAGCC,EAHD,OAIuB5E,oBAAS,GAJhC,mBAIV6E,EAJU,KAIIC,EAJJ,KAMXC,EAAUX,IAQVY,EAAiBN,EAMnB,CACI,kBAACrB,EAAA,EAAD,CAAQjB,MAAM,UAAU6C,UAAWC,IAASC,GAAG,aAAaC,IAAK,aAAjE,aACA,kBAAC/B,EAAA,EAAD,CAAQjB,MAAM,UAAUE,QAdX,WACjBxC,EAAQ,MACRoB,aAAamE,WAAW,SACxBC,OAAOC,SAASC,UAWmCJ,IAAK,UAApD,WAPJ,CACI,kBAAC/B,EAAA,EAAD,CAAQjB,MAAM,UAAUE,QAAS,WAAQsC,GAAa,IAASQ,IAAK,SAApE,SACA,kBAAC/B,EAAA,EAAD,CAAQjB,MAAM,UAAUE,QAAS,WAAQwC,GAAgB,IAASM,IAAK,YAAvE,aAQR,OACI,oCACI,kBAACK,EAAA,EAAD,CAAQlD,SAAS,SAASmD,UAAWX,EAAQT,MACzC,kBAACqB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACpB,QAAS,EAAGqB,QAAQ,gBAAgBC,WAAW,UAC3D,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,yBAAK/D,MAAO,CAAEgE,QAAS,cAAeH,WAAY,WAC9C,kBAACI,EAAA,EAAD,CAASC,MAAM,eACX,kBAAC/D,EAAA,EAAD,CAAYC,QAAS,kBAAMgD,OAAO1F,KAAK,2CAA4C,YAC/E,kBAAC,IAAD,CAAYyG,SAAS,QAAQjE,MAAM,gBAG3C,kBAACkE,EAAA,EAAD,CAAYC,QAAQ,MAApB,oBAGR,kBAACX,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAG/D,MAAO,CAAEsE,UAAW,UACjCxB,MAKjB,kBAACyB,EAAD,CAAO7G,KAAM+E,EAAW9E,QAAS,kBAAM+E,GAAa,MACpD,kBAAC8B,EAAD,CAAU9G,KAAMiF,EAAchF,QAAS,kBAAMiF,GAAgB,Q,oHCxDnEV,EAAYC,aAAW,SAAAzF,GAAK,MAAK,CACnC+H,aAAc,CACVvE,MAAO,WAIA,cAA6D,IAA1DxC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASuB,EAA0C,EAA1CA,KAAMwF,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cAAoB,EAC/C7G,mBAASoB,EAAK0F,MADiC,mBAChEA,EADgE,KAC1DC,EAD0D,OAE3C/G,mBAASoB,EAAK4F,QAF6B,mBAEhEA,EAFgE,KAExDC,EAFwD,OAG/CjH,mBAASkH,IAAO9F,EAAK+F,MAAMC,OAAO,eAHa,mBAGhED,EAHgE,KAG1DE,EAH0D,OAInCrH,mBAASoB,EAAKkG,aAJqB,mBAIhEC,EAJgE,KAIpDC,EAJoD,OAK/CxH,mBAASoB,EAAK0B,MALiC,mBAKhEA,EALgE,KAK1D2E,EAL0D,KAOjEpG,EAAQH,aAAawG,QAAQ,SAC7BC,EAAe/G,uBAAY,WAC7BC,IAAM+G,IAAI7G,6EAA+D,CACrE8G,GAAIzG,EAAKyG,GACTC,WAAY,CACRhB,KAAMA,EACNE,OAAQA,EACRG,KAAMA,EACNG,YAAaC,EACbzE,KAAMA,IAEX,CACCiF,QAAS,CACLC,cAAc,OAAD,OAAS3G,MAGzBL,MAAK,WACF6F,IACAhH,SAET,CAACgH,EAAeC,EAAME,EAAQG,EAAMI,EAAYzE,EAAMzB,EAAOD,EAAKyG,GAAIhI,IAiBzE4B,qBAAU,WAEN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2BhC,GACpD+H,KAKR,OAFA9F,SAASC,iBAAiB,UAAWJ,GAE9B,WACHG,SAASE,oBAAoB,UAAWL,MAG7C,CAACiG,EAAc/H,IAElB,IAAMmF,EAAUX,IAChB,OACI,kBAACpC,EAAA,EAAD,CAAQpC,KAAMA,IAAc,EAAOC,QAASA,EAASkD,WAAS,GAC1D,kBAACd,EAAA,EAAD,CAAaC,MAAO,CAAEC,gBAAiBvD,EAAME,QAAQC,QAAQC,KAAMoD,MAAO,UAA1E,gBAEI,kBAACC,EAAA,EAAD,CAAYD,MAAM,YAAYE,QAASzC,EAASqC,MAAO,CAAEK,SAAU,WAAYC,IAAK,EAAGC,MAAO,IAC1F,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAO8D,EAAM7D,SAAU,SAACC,GAAY6D,EAAQ7D,EAAMC,OAAOH,UACjH,kBAACL,EAAA,EAAD,CAAWE,MAAM,SAASC,KAAK,SAASC,WAAS,EAACC,MAAOgE,EAAQ/D,SAAU,SAACC,GAAY+D,EAAU/D,EAAMC,OAAOH,UAC/G,kBAACL,EAAA,EAAD,CAAWE,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAOmE,EAAMc,gBAAiB,CAAEC,QAAQ,GAAQjF,SAAU,SAAAC,GAAK,OAAImE,EAAQnE,EAAMC,OAAOH,UACtI,kBAACL,EAAA,EAAD,CAAWE,MAAM,WAAWC,KAAK,SAASC,WAAS,EAACC,MAAOuE,EAAYY,QAAM,EAAClF,SAAU,SAAAC,GAAK,OAAIsE,EAActE,EAAMC,OAAOH,SACvH4D,EAAewB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAUtF,MAAOqF,EAAER,GAAIzC,IAAKiD,EAAER,IAAKQ,EAAEvB,UAElE,kBAACnE,EAAA,EAAD,CAAWE,MAAM,OAAOE,WAAS,EAACC,MAAOF,EAAMqF,QAAM,EAAClF,SAAU,SAAAC,GAAK,OAAIuE,EAAQvE,EAAMC,OAAOH,SAC1F,kBAACsF,EAAA,EAAD,CAAUtF,MAAO,WAAjB,WACA,kBAACsF,EAAA,EAAD,CAAUtF,MAAO,UAAjB,WAEJ,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQf,QAnDH,WACjBzB,IAAM0H,OAAOxH,6EAA+D,CACxEK,KAAM,CACFyG,GAAIzG,EAAKyG,IAEbE,QAAS,CACLC,cAAc,OAAD,OAAS3G,MAGzBL,MAAK,WACF6F,IACAhH,QAwCmC6F,UAAWX,EAAQ4B,cAAlD,UACA,kBAACtD,EAAA,EAAD,CAAQf,QAASqF,EAAcvF,MAAM,WAArC,cC3FdgC,GAAYC,aAAW,SAAAzF,GAAK,MAAK,CACnCO,SAAU,CACNiD,MAAOxD,EAAME,QAAQK,SAASH,MAElCI,SAAU,CACNgD,MAAOxD,EAAME,QAAQM,SAASJ,UAIvB,eAAe,IAAZoC,EAAW,EAAXA,KACVoH,EAAQ,EACZpH,EAAKqH,SAAQ,SAAAC,GACE,WAAXA,EAAE5F,KAAoB0F,GAASG,WAAWD,EAAE1B,QAAUwB,GAASG,WAAWD,EAAE1B,WAGhF,IAAMjC,EAAUX,KAChB,OACI,oCACI,kBAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,QAAQ,UAAjC,yBAGA,kBAACI,EAAA,EAAD,CAAYC,QAAQ,KAAKL,QAAQ,SAASR,UAAW8C,GAAS,EAAIzD,EAAQ5F,SAAW4F,EAAQ3F,UAA7F,IACMoJ,EAAMI,QAAQ,MCf1BxE,GAAYC,aAAW,SAAAzF,GAAK,MAAK,CACnCiK,MAAO,CACHC,SAAU,KAEdC,YAAa,CACT5G,gBAAiBvD,EAAME,QAAQC,QAAQC,KACvCoD,MAAOxD,EAAME,QAAQkK,OAAOC,OAEhCC,OAAQ,CACJ9G,MAAOxD,EAAME,QAAQK,SAASH,MAElCmK,QAAS,CACL/G,MAAOxD,EAAME,QAAQM,SAASJ,UAIvB,eAAiE,IAA9DoK,EAA6D,EAA7DA,eAAgBxC,EAA6C,EAA7CA,eAAgBC,EAA6B,EAA7BA,cAAewC,EAAc,EAAdA,QAAc,EACnDrJ,mBAAS,IAD0C,mBACpEoB,EADoE,KAC9DkI,EAD8D,OAEnDtJ,mBAAS,GAF0C,mBAEpEuJ,EAFoE,KAE9DC,EAF8D,OAGrCxJ,mBAAS,GAH4B,mBAGpEyJ,EAHoE,KAGvDC,EAHuD,OAI/B1J,mBAAS,QAJsB,mBAIpE2J,EAJoE,KAIpDC,EAJoD,OAK3B5J,oBAAS,GALkB,mBAKpE6J,EALoE,KAKlDC,EALkD,OAM7C9J,qBAN6C,mBAMpE+J,EANoE,KAM3DC,EAN2D,KAQ3EvI,qBAAU,WACN,IAAMwI,EAAeb,EAAec,QAAO,SAAAC,GAAC,OAAIA,EAAEC,gBAAkBT,KAEhEL,EADmB,SAAnBK,EACQP,EAGAa,KAEb,CAACb,EAAgBxC,EAAgB+C,IAEpC,IAUM5E,EAAUX,KACViG,EAAOjJ,EAAKgH,KAAI,SAAAkC,GAAG,OACrB,kBAACC,EAAA,EAAD,CAAUnF,IAAKkF,EAAIzC,IACf,kBAAC2C,EAAA,EAAD,KAAYF,EAAIxD,MAChB,kBAAC0D,EAAA,EAAD,CAAWC,MAAM,SAASvD,IAAOoD,EAAInD,MAAMC,OAAO,iBAClD,kBAACoD,EAAA,EAAD,CAAWC,MAAM,SAASH,EAAItD,QAC9B,kBAACwD,EAAA,EAAD,CAAWC,MAAM,SAASH,EAAIF,eAC9B,kBAACI,EAAA,EAAD,CAAWC,MAAM,QAAQ/E,UAAwB,WAAb4E,EAAIxH,KAAoBiC,EAAQmE,OAASnE,EAAQoE,SAChFmB,EAAIxH,KAAK4H,OAAO,GAAGC,cAAgBL,EAAIxH,KAAK8H,MAAM,IAEvD,kBAACJ,EAAA,EAAD,KACI,kBAACrE,EAAA,EAAD,CAASC,MAAM,QACX,kBAAC/D,EAAA,EAAD,CAAYC,QAAS,WACjBwH,GAAoB,GACpBE,EAAWM,KAEX,kBAAC,IAAD,aAOdO,EAAYpB,EAAcqB,KAAKC,IAAItB,EAAaY,EAAKW,OAASzB,EAAOE,GAE3E,OACI,oCACI,kBAACwB,EAAA,EAAD,CAAOvF,UAAWX,EAAQ8D,OACtB,kBAACqC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACb,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWa,QAAS,GAChB,kBAACC,GAAD,CAAelK,KAAMA,KAEzB,kBAACoJ,EAAA,EAAD,CAAWa,QAAS,EAAGZ,MAAM,SACzB,kBAAC9H,EAAA,EAAD,CAAWE,MAAM,kBAAkBC,KAAK,OAAOC,WAAS,EAACC,MAAO2G,EAAgBxB,QAAM,EAAClF,SAAU,SAAAtB,GAAC,OAAIiI,EAAkBjI,EAAEwB,OAAOH,SAC7H,kBAACsF,EAAA,EAAD,CAAUtF,MAAM,OAAOoC,IAAI,QAA3B,QACCwB,EAAewB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAUtF,MAAOqF,EAAEvB,KAAM1B,IAAKiD,EAAEvB,MAAOuB,EAAEvB,YAK9E,kBAACyD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW9E,UAAWX,EAAQgE,aAA9B,QACA,kBAACyB,EAAA,EAAD,CAAW9E,UAAWX,EAAQgE,YAAa0B,MAAM,SAAjD,QACA,kBAACD,EAAA,EAAD,CAAW9E,UAAWX,EAAQgE,YAAa0B,MAAM,SAAjD,UACA,kBAACD,EAAA,EAAD,CAAW9E,UAAWX,EAAQgE,YAAa0B,MAAM,SAAjD,YACA,kBAACD,EAAA,EAAD,CAAW9E,UAAWX,EAAQgE,YAAa0B,MAAM,SAAjD,QACA,kBAACD,EAAA,EAAD,CAAW9E,UAAWX,EAAQgE,YAAawC,QAAQ,eAG3D,kBAACC,EAAA,EAAD,KAEQnC,EACI,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWa,QAAS,EAAGZ,MAAM,UACzB,kBAACnH,EAAA,EAAD,CAAkBC,KAAM,IAAKnB,MAAM,cAI3CiI,EAAKO,MAAMrB,EAAOE,EAAaF,EAAOE,EAAcA,GAGxC,IAAhBY,EAAKW,OACD,kBAACT,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWa,QAAS,EAAGZ,MAAM,UACzB,kBAACnE,EAAA,EAAD,8BAIRuE,EAAY,GACR,kBAACN,EAAA,EAAD,CAAUnF,IAAK,aAAclD,MAAO,CAAEuJ,OAAS,GAAMZ,IACjD,kBAACL,EAAA,EAAD,CAAWa,QAAS,QAOhD,kBAACK,EAAA,EAAD,CACIC,mBAAoB,CAAC,EAAG,GAAI,IAC5B1G,UAAU,MACV2G,MAAOxK,EAAK4J,OACZvB,YAAaA,EACbF,KAAMA,EACNsC,aAhGS,SAAC3I,EAAO4I,GAC7BtC,EAAQsC,IAgGIC,oBA7FgB,SAAC7I,GAC7BwG,EAAesC,SAAS9I,EAAMC,OAAOH,MAAO,KAC5CwG,EAAQ,OAgGAO,GAAWF,EACP,kBAACoC,EAAD,CACIrF,eAAgBA,EAChBC,cAAeA,EACfzF,KAAM2I,EACNnK,KAAMiK,EACNhK,QAAS,WACLiK,GAAoB,GACpBE,EAAW,OAInB,uC,oBCzJL,eAA4E,IAAzEpK,EAAwE,EAAxEA,KAAMC,EAAkE,EAAlEA,QAAS+G,EAAyD,EAAzDA,eAAgBC,EAAyC,EAAzCA,cAAeqF,EAA0B,EAA1BA,oBAA0B,EAE9DlM,mBAAS,IAFqD,mBAE/E8G,EAF+E,KAEzEC,EAFyE,OAG1D/G,mBAAS,GAHiD,mBAG/EgH,EAH+E,KAGvEC,EAHuE,OAI9DjH,mBAAS,IAJqD,mBAI/EmH,EAJ+E,KAIzEE,EAJyE,OAKlDrH,mBAAS,IALyC,mBAK/EuH,EAL+E,KAKnEC,EALmE,OAM9DxH,mBAAS,IANqD,mBAM/E8C,EAN+E,KAMzE2E,EANyE,KAShFE,EAAe/G,uBAAY,WAC7B,IAAMS,EAAQH,aAAawG,QAAQ,SACnC7G,IAAMC,KAAKC,0EAA4D,CACnE+F,KAAMA,EACNE,OAAQA,EACRG,KAAMA,EACNG,YAAaC,EACbzE,KAAMA,GACP,CACCiF,QAAS,CACLC,cAAc,OAAD,OAAS3G,MAGzBL,MAAK,SAACC,GACH4F,IACAhH,SAET,CAACgH,EAAehH,EAASmH,EAAQO,EAAYJ,EAAML,EAAMhE,IAgB5D,OAdArB,qBAAU,WAEN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2BhC,GACpD+H,KAKR,OAFA9F,SAASC,iBAAiB,UAAWJ,GAE9B,WACHG,SAASE,oBAAoB,UAAWL,MAE7C,CAAC9B,EAAM+H,IAGN,kBAAC3F,EAAA,EAAD,CAAQpC,KAAMA,IAAc,EAAOC,QAASA,GACxC,kBAACoC,EAAA,EAAD,CAAaC,MAAO,CAAEC,gBAAiBvD,EAAME,QAAQC,QAAQC,KAAMoD,MAAO,UAA1E,eAEI,kBAACC,EAAA,EAAD,CAAYD,MAAM,YAAYE,QAASzC,EAASqC,MAAO,CAAEK,SAAU,WAAYC,IAAK,EAAGC,MAAO,IAC1F,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAO8D,EAAM7D,SAAU,SAACC,GAAY6D,EAAQ7D,EAAMC,OAAOH,UACjH,kBAACL,EAAA,EAAD,CAAWE,MAAM,SAASC,KAAK,SAASC,WAAS,EAACC,MAAOgE,EAAQ/D,SAAU,SAACC,GAAY+D,EAAU/D,EAAMC,OAAOH,UAC/G,kBAACL,EAAA,EAAD,CAAWE,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACC,MAAOmE,EAAMc,gBAAiB,CAAEC,QAAQ,GAAQjF,SAAU,SAAAC,GAAK,OAAImE,EAAQnE,EAAMC,OAAOH,UACtI,kBAACmJ,GAAA,EAAD,CAAKC,MAAM,OAAOlK,MAAO,CAAEgE,QAAS,gBAChC,kBAACvD,EAAA,EAAD,CAAWE,MAAM,WAAWE,WAAS,EAACC,MAAOuE,EAAYY,QAAM,EAAClF,SAAU,SAAAC,GAAK,OAAIsE,EAActE,EAAMC,OAAOH,SACzG4D,EAAewB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAUtF,MAAOqF,EAAER,GAAIzC,IAAKiD,EAAER,IAAKQ,EAAEvB,UAElE,kBAAC1D,EAAA,EAAD,CAAelB,MAAO,CAAEK,SAAU,WAAYC,IAAK,SAC/C,kBAACa,EAAA,EAAD,CACIjB,MAAM,UACNE,QAAS,WACLzC,IACAqM,GAAoB,KAJ5B,sBAWR,kBAACvJ,EAAA,EAAD,CAAWE,MAAM,OAAOE,WAAS,EAACC,MAAOF,EAAMqF,QAAM,EAAClF,SAAU,SAAAC,GAAK,OAAIuE,EAAQvE,EAAMC,OAAOH,SAC1F,kBAACsF,EAAA,EAAD,CAAUtF,MAAO,WAAjB,WACA,kBAACsF,EAAA,EAAD,CAAUtF,MAAO,UAAjB,WAEJ,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQf,QAASqF,EAAcvF,MAAM,WAArC,cC1EdgC,GAAYC,aAAW,SAAAzF,GAAK,MAAK,CACnC+H,aAAc,CACVvE,MAAO,WAKA,eAAsE,IAAnExC,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,QAAS+G,EAAmD,EAAnDA,eAAgByF,EAAmC,EAAnCA,cAAexF,EAAoB,EAApBA,cAAoB,EACxD7G,mBAAS,IAD+C,mBACzE8G,EADyE,KACnEC,EADmE,OAE5C/G,mBAAS,IAFmC,mBAEzEuH,EAFyE,KAE7DC,EAF6D,KAI1EnG,EAAQH,aAAawG,QAAQ,SAC7BC,EAAe/G,uBAAY,WAC7BC,IAAMC,KAAKC,0EAA4D,CACnE+F,KAAMA,GACP,CACCiB,QAAS,CACLC,cAAc,OAAD,OAAS3G,MAGzBL,MAAK,WACF+F,EAAQ,IACRsF,IACAxM,SAET,CAACiH,EAAMjH,EAASwB,EAAOgL,IAkB1B5K,qBAAU,WAEN,IAAMC,EAAqB,SAACC,GACR,UAAXA,EAAEC,MAA+B,gBAAXD,EAAEC,OAA2BhC,GACpD+H,KAKR,OAFA9F,SAASC,iBAAiB,UAAWJ,GAE9B,WACHG,SAASE,oBAAoB,UAAWL,MAG7C,CAAC9B,EAAM+H,IAGV,IAAM5C,EAAUX,KAChB,OACI,kBAACpC,EAAA,EAAD,CAAQpC,KAAMA,IAAc,EAAOC,QAASA,EAASkD,WAAS,GAC1D,kBAACd,EAAA,EAAD,CAAaC,MAAO,CAAEC,gBAAiBvD,EAAME,QAAQC,QAAQC,KAAMoD,MAAO,UAA1E,kBAEI,kBAACC,EAAA,EAAD,CAAYD,MAAM,YAAYE,QAASzC,EAASqC,MAAO,CAAEK,SAAU,WAAYC,IAAK,EAAGC,MAAO,IAC1F,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,MAAM,mBAAmBC,KAAK,OAAOC,WAAS,EAACC,MAAO8D,EAAM7D,SAAU,SAACC,GAAY6D,EAAQ7D,EAAMC,OAAOH,UAC7H,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQf,QAASqF,EAAcvF,MAAM,WAArC,QAGJ,kBAACO,EAAA,EAAD,CAAWE,MAAM,2BAA2BE,WAAS,EAACC,MAAOuE,EAAYY,QAAM,EAAClF,SAAU,SAAAC,GAAK,OAAIsE,EAActE,EAAMC,OAAOH,SACzH4D,EAAewB,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAUtF,MAAOqF,EAAER,GAAIzC,IAAKiD,EAAER,IAAKQ,EAAEvB,UAElE,kBAAC1D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQf,QAnDH,WACjBzB,IAAM0H,OAAOxH,6EAA+D,CACxEK,KAAM,CACFyG,GAAIN,GAERQ,QAAS,CACLC,cAAc,OAAD,OAAS3G,MAGzBL,MAAK,WACFqL,IACAxF,IACAhH,QAuCmC6F,UAAWX,EAAQ4B,cAAlD,c,8BC3EL,eAAgI,IAA7H2F,EAA4H,EAA5HA,cAAevE,EAA6G,EAA7GA,QAASZ,EAAoG,EAApGA,KAAML,EAA8F,EAA9FA,KAAMyF,EAAwF,EAAxFA,aAAcvF,EAA0E,EAA1EA,OAAQlE,EAAkE,EAAlEA,KAAMuE,EAA4D,EAA5DA,QAASN,EAAmD,EAAnDA,QAASyF,EAA0C,EAA1CA,gBAAiBvF,EAAyB,EAAzBA,UAAWQ,EAAc,EAAdA,QAE5H,OACI,oCACI,kBAAC7B,EAAA,EAAD,CAAMC,WAAS,EAACpB,QAAS,GACrB,kBAACmB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IAGf,kBAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,MAAM,SAASrI,MAAM,WAA9C,8BAGJ,kBAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,MAAM,OAAOrI,MAAM,WAA5C,UAEJ,kBAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACwG,GAAA,EAAD,CAAalG,QAAQ,WAAWxD,WAAS,GACrC,kBAAC2J,GAAA,EAAD,CAAQzJ,SAAU,SAAAtB,GAAC,OAAI0F,EAAQ1F,EAAEwB,OAAOH,QAAQA,MAAOmE,GAClDY,EAAQK,KAAI,SAACuE,EAASC,GAAV,OAAgB,kBAACtE,EAAA,EAAD,CAAUlD,IAAKwH,EAAG5J,MAAO2J,GAAUA,SAK5E,kBAAC/G,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,MAAM,OAAOrI,MAAM,WAA5C,UAEJ,kBAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACwG,GAAA,EAAD,CAAalG,QAAQ,WAAWxD,WAAS,GACrC,kBAAC2J,GAAA,EAAD,CAAQzJ,SAAU,SAAAtB,GAAC,OAAIoF,EAAQpF,EAAEwB,OAAOH,QAAQA,MAAO8D,GAClDiB,EAAQK,KAAI,SAACuE,EAASC,GAAV,OAAgB,kBAACtE,EAAA,EAAD,CAAUlD,IAAKwH,EAAG5J,MAAO2J,GAAUA,SAK5E,kBAAC/G,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,MAAM,OAAOrI,MAAM,WAA5C,cAEJ,kBAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACwG,GAAA,EAAD,CAAalG,QAAQ,WAAWxD,WAAS,GACrC,kBAAC2J,GAAA,EAAD,CAAQzJ,SAAU,SAAAtB,GAAC,OAAI6K,EAAgB7K,EAAEwB,OAAOH,QAAQA,MAAOuJ,GAC1DxE,EAAQK,KAAI,SAACuE,EAASC,GAAV,OAAgB,kBAACtE,EAAA,EAAD,CAAUlD,IAAKwH,EAAG5J,MAAO2J,GAAUA,SAK5E,kBAAC/G,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,MAAM,OAAOrI,MAAM,WAA5C,YAEJ,kBAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACwG,GAAA,EAAD,CAAalG,QAAQ,WAAWxD,WAAS,GACrC,kBAAC2J,GAAA,EAAD,CAAQzJ,SAAU,SAAAtB,GAAC,OAAIsF,EAAUtF,EAAEwB,OAAOH,QAAQA,MAAOgE,GACpDe,EAAQK,KAAI,SAACuE,EAASC,GAAV,OAAgB,kBAACtE,EAAA,EAAD,CAAUlD,IAAKwH,EAAG5J,MAAO2J,GAAUA,SAK5E,kBAAC/G,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,MAAM,OAAOrI,MAAM,WAA5C,UAEJ,kBAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACX,kBAACwG,GAAA,EAAD,CAAalG,QAAQ,WAAWxD,WAAS,GACrC,kBAAC2J,GAAA,EAAD,CAAQzJ,SAAU,SAAAtB,GAAC,OAAI8F,EAAQ9F,EAAEwB,OAAOH,QAAQA,MAAOF,GAClDiF,EAAQK,KAAI,SAACuE,EAASC,GAAV,OAAgB,kBAACtE,EAAA,EAAD,CAAUlD,IAAKwH,EAAG5J,MAAO2J,GAAUA,UAMhF,kBAACvJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQf,QAASgK,EAAe/I,KAAK,QAAQnB,MAAM,WAAnD,a,sECtED,eAAwB,IAArByK,EAAoB,EAApBA,cAEd,OACI,oCACI,kBAAC,KAAD,CACIC,cAAe,CAAC,QAChBC,WAAY,EACZC,gBAAc,EACdC,oBAAkB,EAClBC,iBAAkB,CAAErH,UAAW,CAAEC,QAAS,SAAUrB,QAAS,EAAG0I,UAAW,QAC3EC,WAAY,CAAC,QAAS,QACtBC,mBAAoB,CAChBC,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChD/J,iBAAkB,KAEtBgK,aACI,yBAAKvL,MAAO,CAAEqJ,QAAS,kBACnB,kBAACjF,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,MAAM,SAASrI,MAAM,WAA9C,gDAGA,6BACA,kBAACkE,EAAA,EAAD,CAAYmE,MAAM,WAAlB,yDAGA,kBAACiD,GAAA,EAAD,CAAMC,OAAK,EAACC,gBAAc,GACtB,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAchP,QAAQ,uBAE1B,kBAAC8O,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAchP,QAAQ,UAE1B,kBAAC8O,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAchP,QAAQ,YAE1B,kBAAC8O,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAchP,QAAQ,cAE1B,kBAAC8O,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAchP,QAAQ,gCAKtCkE,SAAU,SAAC+K,GAAWnB,EAAcmB,MAGxC,+BCxDG,eAA2C,IAAxCpO,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAASoO,EAAwB,EAAxBA,QAAStK,EAAe,EAAfA,SAEtC,OACI,kBAACH,EAAA,EAAD,CAAU5D,KAAMA,EAAM6D,iBAAkB,IAAM5D,QAASA,GACnD,kBAAC6D,EAAA,EAAD,CAAO7D,QAASA,EAAS8D,SAAUA,GAC9BsK,KCEF,eAAsD,IAAnDrO,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASgH,EAAmC,EAAnCA,cAAewF,EAAoB,EAApBA,cAAoB,EAC5BrM,mBAAS,IADmB,mBACzDkO,EADyD,KAC7CC,EAD6C,OAElCnO,mBAAS,IAFyB,mBAEzD+H,EAFyD,KAEhDqG,EAFgD,OAGpBpO,oBAAS,GAHW,mBAGzDqO,EAHyD,KAGzCC,EAHyC,OAMxCtO,mBAAS,IAN+B,mBAMzDmH,EANyD,KAMnDE,EANmD,OAOxCrH,mBAAS,IAP+B,mBAOzD8G,EAPyD,KAOnDC,EAPmD,OAQxB/G,mBAAS,IARe,mBAQzDuM,EARyD,KAQ3CC,EAR2C,OASpCxM,mBAAS,IAT2B,mBASzDgH,EATyD,KASjDC,EATiD,OAUxCjH,mBAAS,IAV+B,mBAUzD8C,EAVyD,KAUnD2E,EAVmD,OAa5BzH,oBAAS,GAbmB,mBAazDuO,EAbyD,KAa7CC,EAb6C,OAcxBxO,oBAAS,GAde,mBAczDyO,EAdyD,KAc3CC,GAd2C,QAehB1O,oBAAS,GAfO,qBAezD2O,GAfyD,MAevCC,GAfuC,SAgBpC5O,oBAAS,GAhB2B,qBAgBzD6O,GAhByD,MAgBjDC,GAhBiD,SAiBpB9O,oBAAS,GAjBW,qBAiBzD+O,GAjByD,MAiBzCC,GAjByC,SAkBlBhP,oBAAS,GAlBS,qBAkBzDiP,GAlByD,MAkBxCC,GAlBwC,SAmB1BlP,oBAAS,GAnBiB,qBAmBzDmP,GAnByD,MAmB5CC,GAnB4C,SAoBtBpP,oBAAS,GApBa,qBAoBzDqP,GApByD,MAoB1CC,GApB0C,MA8HhE,OACI,oCACI,kBAACtN,EAAA,EAAD,CACIpC,KAAMA,IAAc,EACpBC,QAAS,WAELyO,GAAkB,GAClBzO,MAGJ,kBAACoC,EAAA,EAAD,CAAaC,MAAO,CAAEC,gBAAiBvD,EAAME,QAAQC,QAAQC,KAAMoD,MAAO,UACrEiM,EAAiB,6BAA+B,aACjD,kBAAChM,EAAA,EAAD,CAAYC,QAASzC,EAASqC,MAAO,CAAEK,SAAU,WAAYC,IAAK,EAAGC,MAAO,IACxE,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,KAEQ2L,EACI,kBAACkB,GAAD,CACIxH,QAASA,EACTZ,KAAMA,EAAML,KAAMA,EAAMyF,aAAcA,EAAcvF,OAAQA,EAAQlE,KAAMA,EAC1EuE,QAASA,EAASN,QAASA,EAASyF,gBAAiBA,EAAiBvF,UAAWA,EAAWQ,QAASA,EACrG6E,cA1EN,SAACpJ,GAGnB,GAFAA,EAAMsM,iBAEoB,IAAtBtB,EAAWlD,OACX8D,IAAU,QAGT,GAAK3H,GAASL,GAASyF,GAAiBvF,GAAWlE,EAInD,GAA+D,IAA3D,IAAI2M,IAAI,CAACtI,EAAML,EAAMyF,EAAcvF,EAAQlE,IAAOS,KACvD2L,IAAmB,OAElB,CAED,IAAM9G,EAAM,CACRjB,KAAMY,EAAQ2H,QAAQvI,GACtBL,KAAMiB,EAAQ2H,QAAQ5I,GACtByF,aAAcxE,EAAQ2H,QAAQnD,GAC9BvF,OAAQe,EAAQ2H,QAAQ1I,GACxBlE,KAAMiF,EAAQ2H,QAAQ5M,IAGpB1B,EAAO,CACTA,KAAM8M,EACN9F,IAAKA,GAEH/G,EAAQH,aAAawG,QAAQ,SAGnC7G,IAAMC,KAAKC,wEAA0DK,EAAM,CACvE2G,QAAS,CAAEC,cAAc,OAAD,OAAS3G,MAEhCL,MAAK,SAAA2O,GACFC,QAAQC,IAAIF,EAAIvO,KAAK6M,SACrBqB,IAAiB,GACjBzI,IACAwF,IACAxM,OAEH0B,OAAM,SAAAC,GACH4N,IAAe,GACfvI,IACAwF,IACAxM,YArCRmP,IAAkB,MAqEF,kBAACc,GAAD,CAAQjD,cAjIV,SAACmB,GAGnB,GAAIA,EAAKhD,OAAS,EAAG,CAEjB,IAAM+E,EAAS,IAAIC,WAEnBD,EAAOE,WAAWjC,EAAK,IAEvB+B,EAAOG,OAAS,SAAChN,GACb,IAAMiN,EAAcjN,EAAMC,OAAOiN,OAC3BC,EAAeC,aAAWH,GAC5BI,GAAiB,EAIuC,KAAxDF,EAAajP,KAAKiP,EAAajP,KAAK4J,OAAS,GAAI,IACjDqF,EAAajP,KAAKoP,MAItBH,EAAajP,KAAKqH,SAAQ,SAAA6B,IACG,IAArBA,EAAIoF,QAAQ,MACZlB,GAAc,GACd+B,GAAiB,MAKrB,IAAId,IAAIY,EAAajP,KAAK,IAAImC,OAAS8M,EAAajP,KAAK,GAAG4J,SAC5D0D,IAAgB,GAChB6B,GAAiB,GAGjBA,IACAnC,EAAWiC,EAAajP,KAAK,IAC7BiG,EAAQgJ,EAAajP,KAAK,GAAG,GAAKiP,EAAajP,KAAK,GAAG,GAAK,IAC5D2F,EAAQsJ,EAAajP,KAAK,GAAG,GAAKiP,EAAajP,KAAK,GAAG,GAAK,IAC5DoL,EAAgB6D,EAAajP,KAAK,GAAG,GAAKiP,EAAajP,KAAK,GAAG,GAAK,IACpE6F,EAAUoJ,EAAajP,KAAK,GAAG,GAAKiP,EAAajP,KAAK,GAAG,GAAK,IAC9DqG,EAAQ4I,EAAajP,KAAK,GAAG,GAAKiP,EAAajP,KAAK,GAAG,GAAK,IAC5D+M,EAAckC,EAAajP,MAC3BkN,GAAkB,KAI1ByB,EAAOU,QAAU,SAACvN,GACd0L,IAAoB,UAsFxB,kBAAC8B,GAAD,CACI9Q,KAAM2O,EAAY1O,QAAS,WAAQ2O,GAAc,IAAU7K,SAAU,QACrEsK,QAAS,0BAEb,kBAACyC,GAAD,CACI9Q,KAAM6O,EAAc5O,QAAS,WAAQ6O,IAAgB,IAAU/K,SAAU,QACzEsK,QAAS,gCAEb,kBAACyC,GAAD,CACI9Q,KAAM+O,GAAkB9O,QAAS,WAAQ+O,IAAoB,IAAUjL,SAAU,QACjFsK,QAAS,yBAGb,kBAACyC,GAAD,CACI9Q,KAAMiP,GAAQhP,QAAS,WAAQiP,IAAU,IAAUnL,SAAU,QAC7DsK,QAAS,mBAEb,kBAACyC,GAAD,CACI9Q,KAAMmP,GAAgBlP,QAAS,WAAQmP,IAAkB,IAAUrL,SAAU,QAC7EsK,QAAS,iCAEb,kBAACyC,GAAD,CACI9Q,KAAMqP,GAAiBpP,QAAS,WAAQqP,IAAmB,IAAUvL,SAAU,QAC/EsK,QAAS,qCAEb,kBAACyC,GAAD,CACI9Q,KAAMuP,GAAatP,QAAS,WAAQuP,IAAe,IAAUzL,SAAU,QACvEsK,QAAS,kBAEb,kBAACyC,GAAD,CACI9Q,KAAMyP,GAAexP,QAAS,WAAQyP,IAAiB,IAAU3L,SAAU,UAC3EsK,QAAS,sCC5LV,cAAO,IACVvJ,EAAS3E,qBAAWL,GAApBgF,KADS,EAEa1E,oBAAS,GAFtB,mBAEVqJ,EAFU,KAEDsH,EAFC,OAG2B3Q,mBAAS,IAHpC,mBAGVoJ,EAHU,KAGMwH,EAHN,OAI2B5Q,mBAAS,IAJpC,mBAIV4G,EAJU,KAIMiK,EAJN,OAO6B7Q,oBAAS,GAPtC,mBAOV8Q,EAPU,KAOOC,EAPP,OAQ+B/Q,oBAAS,GARxC,mBAQVgR,EARU,KAQQ9E,EARR,OASyBlM,oBAAS,GATlC,mBASViR,EATU,KASKC,EATL,KAWXrK,EAAgB,WAClB8J,GAAW,GACX,IAAMtP,EAAQH,aAAawG,QAAQ,SACnC7G,IAAMsQ,IAAIpQ,4EAA8D,CACpEgH,QAAS,CACLC,cAAc,OAAD,OAAS3G,MAE3BL,MAAK,SAACC,GACL2P,EAAkB3P,EAASG,MAC3BuP,GAAW,OAIbtE,EAAgB,WAClBsE,GAAW,GACX,IAAMtP,EAAQH,aAAawG,QAAQ,SACnC7G,IAAMsQ,IAAIpQ,4EAA8D,CACpEgH,QAAS,CACLC,cAAc,OAAD,OAAS3G,MAE3BL,MAAK,SAACC,GACL4P,EAAkB5P,EAASG,MAC3BuP,GAAW,OASnB,OALAlP,qBAAU,WACNoF,IACAwF,MACD,CAAC3H,IAECA,EAmBD,oCACI,kBAAC0M,EAAD,MACA,kBAACjF,GAAA,EAAD,CAAK1B,MAAM,UACP,kBAAC4G,GAAD,CAAejI,eAAgBA,EAAgBxC,eAAgBA,EAAgBC,cAAeA,EAAewC,QAASA,KAE1H,6BACA,kBAAC8C,GAAA,EAAD,CAAK1B,MAAM,UACP,yBAAKvI,MAAO,CAAE4G,SAAU,MACpB,kBAACwI,GAAA,EAAD,CAAa/K,QAAQ,YAAYhD,KAAK,QAAQnB,MAAM,UAAUW,WAAS,GACnE,kBAACM,EAAA,EAAD,CAAQf,QAAS,WAAQ4J,GAAoB,IAAS9G,IAAK,gBAA3D,mBACA,kBAAC/B,EAAA,EAAD,CAAQf,QAAS,WAAQyO,GAAmB,IAAS3L,IAAK,eAA1D,gBACA,kBAAC/B,EAAA,EAAD,CAAQf,QAAS,WAAQ4O,GAAiB,IAAS9L,IAAK,aAAxD,sBAIZ,kBAACmM,GAAD,CAAa3K,eAAgBA,EAAgBhH,KAAMkR,EAAiB5E,oBAAqBA,EAAqBrF,cAAeA,EAAehH,QAAS,kBAAMkR,GAAmB,MAC9K,kBAACS,GAAD,CAAc5K,eAAgBA,EAAgBhH,KAAMoR,EAAkB3E,cAAeA,EAAexF,cAAeA,EAAehH,QAAS,kBAAMqM,GAAoB,MACrK,kBAACuF,GAAD,CAAW7R,KAAMqR,EAAepR,QAAS,WAAQqR,GAAiB,IAAUrK,cAAeA,EAAewF,cAAeA,KAlCzH,oCACI,kBAAC+E,EAAD,MAGIlQ,aAAawG,QAAQ,SACjB,kBAACyE,GAAA,EAAD,CAAK1B,MAAM,UACP,kBAACnH,EAAA,EAAD,CAAkBC,KAAM,IAAKnB,MAAM,aAGvC,kBAACkE,EAAA,EAAD,qDC3DT,cACX,OACI,oCACI,kBAAC8K,EAAD,MACA,kBAAC9K,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,MAAM,UAA/B,6BACA,kBAACnE,EAAA,EAAD,CAAYC,QAAQ,KAAKkE,MAAM,UAA/B,wCCJG,cAAO,IAAD,EACO1K,qBAAWL,GAA5BgF,EADU,EACVA,KAAM5E,EADI,EACJA,QAab,OAXA2B,qBAAW,WACP,IAAMJ,EAAQH,aAAawG,QAAQ,UAC/BhD,GAAQrD,GACRR,IAAMsQ,IAAIpQ,mEAAqD,CAC3DgH,QAAS,CAAEC,cAAc,OAAD,OAAS3G,MAClCL,MAAK,SAAAC,GACJnB,EAAQmB,EAASG,KAAKE,WAG/B,CAACoD,EAAM5E,IAGN,sCCbO,cAAO,IAAD,EAEKE,mBAAS,MAFd,mBAEZ0E,EAFY,KAEN5E,EAFM,KAGnB,OACE,kBAACJ,EAAYgS,SAAb,CAAsB1O,MAAO,CAAE0B,OAAM5E,YACnC,kBAAC6R,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACfnN,EAAO,kBAAC,IAAD,CAAUS,GAAG,eAAiB,kBAAC2M,GAAD,OAExC,kBAAC,IAAD,CAAOD,KAAK,QAAQE,OAAQ,kBAAM,kBAACD,GAAD,SAClC,kBAAC,IAAD,CAAOD,KAAK,aAAaE,OAAQ,kBAAM,kBAACC,GAAD,SAErCtN,EACE,kBAAC,IAAD,CAAOqN,OAAQ,kBAAM,kBAAC,IAAD,CAAU5M,GAAG,kBAClC,kBAAC,IAAD,CAAO4M,OAAQ,kBAAM,kBAAC,IAAD,CAAU5M,GAAG,Y,UCf9C8M,IAASF,OACP,kBAAC,IAAD,KACI,kBAACG,GAAA,EAAD,CAAetT,MAAOA,GACpB,kBAACuT,GAAD,QAGNtQ,SAASuQ,eAAe,W","file":"static/js/main.b0b716e2.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport 'typeface-roboto'\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#35B234',        // Light green\n            contrastText: \"#FFFFFF\" \n        },\n        secondary: {\n            main: '#FFFFFF'     // White\n        },\n        positive: {\n            main: '#4caf50'      // default palette success\n        },\n        negative: {\n            main: '#f44336'     // default palette error\n        },\n        background: {\n            default: '#FFFFFF',\n        },\n    },\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    },\n})\n\nexport default theme","import {createContext} from 'react'\n\nexport const UserContext = createContext(null)","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { UserContext } from '../../../UserContext'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, CircularProgress } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default ({ open, onClose }) => {\n\n    const { setUser } = useContext(UserContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    // wait for server response to login POST\n    const [waiting, setWaiting] = useState(false)\n\n    // snackbars\n    const [showSuccess, setShowSuccess] = useState(false)\n    const [showError, setShowError] = useState(false)\n\n    const handleLogin = useCallback(() => {\n        setWaiting(true)\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/login', {\n            email: email,\n            password: password\n        })\n            .then((response) => {\n                localStorage.setItem('token', response.data.token)\n                setUser(response.data.auth)\n                setShowSuccess(true)\n                setWaiting(false)\n                onClose()\n            })\n            .catch((error) => {\n                setShowError(true)\n                setWaiting(false)\n            })\n    }, [email, password, onClose, setUser])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleLogin();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n    }, [open, handleLogin])\n\n    return (\n        <>\n            <Dialog open={open ? open : false} onClose={onClose}>\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    Login\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                    <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                    <DialogActions>\n\n                        <Button onClick={handleLogin} color='primary'>{waiting ? <CircularProgress size={25} color=\"primary\" /> : 'Login' }</Button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n\n\n            <Snackbar open={showSuccess} autoHideDuration={3000} onClose={() => { setShowSuccess(false) }}>\n                <Alert onClose={() => { setShowSuccess(false) }} severity=\"success\">\n                    Login Success!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showError} autoHideDuration={3000} onClose={() => { setShowError(false) }}>\n                <Alert onClose={() => { setShowError(false) }} severity=\"error\">\n                    Invalid Credentials\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, CircularProgress } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default ({ open, onClose }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    // wait for server response to register POST\n    const [waiting, setWaiting] = useState(false)\n\n    // snackbars\n    const [showSuccess, setShowSuccess] = useState(false)\n    const [showError, setShowError] = useState(false)\n    const [showEmailError, setShowEmailError] = useState(false)\n    const [showPasswordError, setShowPasswordError] = useState(false)\n\n\n    const handleRegister = useCallback(() => {\n        setWaiting(true)\n        if (password === confirmPassword) {\n            axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/register', {\n                email: email,\n                password: password\n            })\n                .then((response) => {\n                    setEmail('')\n                    setPassword('')\n                    setConfirmPassword('')\n                    setShowSuccess(true)\n                    onClose()\n                    setWaiting(false)\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        error.response.status === 409 ? setShowEmailError(true) : setShowError(true)\n                    }\n                    setWaiting(false)\n                })\n        }\n        else {\n            setShowPasswordError(true)\n        }\n    }, [email, password, confirmPassword, onClose])\n\n    // Add event listener that will check for enter presses and preform action if so\n    useEffect(() => {\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleRegister();\n            }\n        }\n        document.addEventListener(\"keydown\", enterPressListener);\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        }\n    }, [open, handleRegister])\n\n    return (\n        <>\n            <Dialog open={open ? open : false} onClose={onClose}>\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    Register\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <TextField autoFocus label='Email' type='email' fullWidth value={email} onChange={(event) => { setEmail(event.target.value) }} />\n                    <TextField label='Password' type='password' fullWidth value={password} onChange={(event) => { setPassword(event.target.value) }} />\n                    <TextField label='Confirm Password' type='password' fullWidth value={confirmPassword} onChange={(event) => { setConfirmPassword(event.target.value) }} />\n                    <DialogActions>\n                        <Button onClick={handleRegister} color='primary'>{waiting ? <CircularProgress size={25} color=\"primary\" /> : 'Register'}</Button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n\n            <Snackbar open={showSuccess} autoHideDuration={3000} onClose={() => { setShowSuccess(false) }}>\n                <Alert onClose={() => { setShowSuccess(false) }} severity=\"success\">\n                    Account created!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showError} autoHideDuration={3000} onClose={() => { setShowError(false) }}>\n                <Alert onClose={() => { setShowError(false) }} severity=\"error\">\n                    Registration error\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showEmailError} autoHideDuration={3000} onClose={() => { setShowEmailError(false) }}>\n                <Alert onClose={() => { setShowEmailError(false) }} severity=\"info\">\n                    Email already registered\n                </Alert>\n            </Snackbar>\n            <Snackbar open={showPasswordError} autoHideDuration={3000} onClose={() => { setShowPasswordError(false) }}>\n                <Alert onClose={() => { setShowPasswordError(false) }} severity=\"info\">\n                    Password does not match\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}","import React, { useState, useContext } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { AppBar, Toolbar, Button, IconButton, Grid, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Login from './Auth/Login'\nimport Register from './Auth/Register'\nimport { UserContext } from '../../UserContext'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginBottom: theme.spacing(5)\n    }\n}))\n\nexport default () => {\n\n    const { user, setUser } = useContext(UserContext)\n    const [showLogin, setShowLogin] = useState(false)\n    const [showRegister, setShowRegister] = useState(false)\n\n    const classes = useStyles()\n\n    const handleLogout = () => {\n        setUser(null);\n        localStorage.removeItem('token');\n        window.location.reload()\n    }\n\n    const renderButtons = !user ?\n        [\n            <Button color=\"inherit\" onClick={() => { setShowLogin(true) }} key={'login'}>Login</Button>,\n            <Button color=\"inherit\" onClick={() => { setShowRegister(true) }} key={'register'}>Register</Button>\n        ]\n        :\n        [\n            <Button color=\"inherit\" component={NavLink} to='/dashboard' key={'dashboard'}>Dashboard</Button>,\n            <Button color=\"inherit\" onClick={handleLogout} key={'logout'}>Logout</Button>\n        ]\n\n    return (\n        <>\n            <AppBar position='static' className={classes.root}>\n                <Toolbar>\n                    <Grid container spacing={1} justify='space-between' alignItems='center'>\n                        <Grid item xs={8}>\n                            <div style={{ display: 'inline-flex', alignItems: 'center' }}>\n                                <Tooltip title=\"Github Repo\">\n                                    <IconButton onClick={() => window.open('https://github.com/bmai53/budget-tracker', \"_blank\")}>\n                                        <GitHubIcon fontSize='large' color='secondary' />\n                                    </IconButton>\n                                </Tooltip>\n                                <Typography variant='h4'>Budget Tracker</Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={4} style={{ textAlign: 'right' }}>\n                            {renderButtons}\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Login open={showLogin} onClose={() => setShowLogin(false)} />\n            <Register open={showRegister} onClose={() => setShowRegister(false)} />\n        </>\n    )\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { makeStyles } from '@material-ui/core/styles'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\nexport default ({ open, onClose, data, categoriesList, getActivities }) => {\n    const [name, setName] = useState(data.name)\n    const [amount, setAmount] = useState(data.amount)\n    const [date, setDate] = useState(moment(data.date).format('YYYY-MM-DD'))\n    const [categoryId, setCategoryId] = useState(data.category_id)\n    const [type, setType] = useState(data.type)\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.put(process.env.REACT_APP_BACKEND_URL + 'activity/updateActivity', {\n            id: data.id,\n            updateData: {\n                name: name,\n                amount: amount,\n                date: date,\n                category_id: categoryId,\n                type: type\n            }\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            },\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }, [getActivities, name, amount, date, categoryId, type, token, data.id, onClose])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'activity/deleteActivity', {\n            data: {\n                id: data.id\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [handleSubmit, open])\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                Edit Activity\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Name' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <TextField label='Amount' type='number' fullWidth value={amount} onChange={(event) => { setAmount(event.target.value) }} />\n                <TextField label='Date' type='date' fullWidth value={date} InputLabelProps={{ shrink: true }} onChange={event => setDate(event.target.value)} />\n                <TextField label='Category' type='number' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <TextField label='Type' fullWidth value={type} select onChange={event => setType(event.target.value)}>\n                    <MenuItem value={'expense'}>Expense</MenuItem>\n                    <MenuItem value={'income'}>Income</MenuItem>\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                    <Button onClick={handleSubmit} color='primary'>Update</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    positive: {\n        color: theme.palette.positive.main\n    },\n    negative: {\n        color: theme.palette.negative.main\n    }\n}))\n\nexport default ({ data }) => {\n    let total = 0\n    data.forEach(d => {\n        d.type === 'income' ? total += parseFloat(d.amount) : total -= parseFloat(d.amount)\n    })\n\n    const classes = useStyles()\n    return (\n        <>\n            <Typography variant='h3' display='inline'>\n                Activities Total:&nbsp;\n            </Typography>\n            <Typography variant='h3' display='inline' className={total >= 0 ? classes.positive : classes.negative}>\n                ${total.toFixed(2)}\n            </Typography>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\n    TablePagination, Paper, IconButton, Tooltip, CircularProgress, TextField, MenuItem\n} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit';\nimport moment from 'moment'\nimport EditActivity from './EditActivity';\nimport ActivityTotal from './ActivityTotal'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        maxWidth: 1000,\n    },\n    tableHeader: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    income: {\n        color: theme.palette.positive.main\n    },\n    expense: {\n        color: theme.palette.negative.main\n    }\n}))\n\nexport default ({ activitiesList, categoriesList, getActivities, loading }) => {\n    const [data, setData] = useState([])\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5)\n    const [categoryFilter, setCategoryFilter] = useState('None')\n    const [showEditActivity, setShowEditActivity] = useState(false)\n    const [editRow, setEditRow] = useState() // store data of row to edit\n\n    useEffect(() => {\n        const filteredData = activitiesList.filter(a => a.category_name === categoryFilter)\n        if (categoryFilter === 'None') {\n            setData(activitiesList)\n        }\n        else {\n            setData(filteredData)\n        }\n    }, [activitiesList, categoriesList, categoryFilter])\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    }\n\n\n    const classes = useStyles()\n    const rows = data.map(row => (\n        <TableRow key={row.id}>\n            <TableCell>{row.name}</TableCell>\n            <TableCell align=\"right\">{moment(row.date).format('MMMM D, YYYY')}</TableCell>\n            <TableCell align=\"right\">{row.amount}</TableCell>\n            <TableCell align=\"right\">{row.category_name}</TableCell>\n            <TableCell align=\"right\" className={row.type === 'income' ? classes.income : classes.expense} >\n                {row.type.charAt(0).toUpperCase() + row.type.slice(1)}\n            </TableCell>\n            <TableCell>\n                <Tooltip title='Edit'>\n                    <IconButton onClick={() => {\n                        setShowEditActivity(true)\n                        setEditRow(row)\n                    }}>\n                        <EditIcon />\n                    </IconButton>\n                </Tooltip>\n            </TableCell>\n        </TableRow>\n    ))\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <>\n            <Paper className={classes.table}>\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell colSpan={4}>\n                                    <ActivityTotal data={data} />\n                                </TableCell>\n                                <TableCell colSpan={2} align='right'>\n                                    <TextField label='Category Filter' type='text' fullWidth value={categoryFilter} select onChange={e => setCategoryFilter(e.target.value)}>\n                                        <MenuItem value='None' key='None'>None</MenuItem>\n                                        {categoriesList.map(c => <MenuItem value={c.name} key={c.name}>{c.name}</MenuItem>)}\n                                    </TextField>\n                                </TableCell>\n                            </TableRow>\n       \n                            <TableRow>\n                                <TableCell className={classes.tableHeader}>Name</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Date</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Amount</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Category</TableCell>\n                                <TableCell className={classes.tableHeader} align=\"right\">Type</TableCell>\n                                <TableCell className={classes.tableHeader} padding='checkbox' />\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                loading ?\n                                    <TableRow>\n                                        <TableCell colSpan={6} align='center'>\n                                            <CircularProgress size={100} color=\"primary\" />\n                                        </TableCell>\n                                    </TableRow>\n                                    :\n                                    rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            }\n                            {\n                                rows.length === 0 ?\n                                    <TableRow>\n                                        <TableCell colSpan={6} align='center'>\n                                            <Typography>No activities found</Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                    :\n                                    emptyRows > 0 && (\n                                        <TableRow key={'empty rows'} style={{ height: (53) * emptyRows }}>\n                                            <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={data.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            {\n                // test for showEditActivity to remount dialog to reset initial useState()\n                editRow && showEditActivity ?\n                    <EditActivity\n                        categoriesList={categoriesList}\n                        getActivities={getActivities}\n                        data={editRow}\n                        open={showEditActivity}\n                        onClose={() => {\n                            setShowEditActivity(false)\n                            setEditRow({})\n                        }}\n                    />\n                    :\n                    <></>\n            }\n        </>\n    )\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem, Box } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nexport default ({ open, onClose, categoriesList, getActivities, setShowEditCategory }) => {\n\n    const [name, setName] = useState('')\n    const [amount, setAmount] = useState(0)\n    const [date, setDate] = useState('')\n    const [categoryId, setCategoryId] = useState('')\n    const [type, setType] = useState('')\n    // const [categoriesList, setCategoriesList] = useState([])\n\n    const handleSubmit = useCallback(() => {\n        const token = localStorage.getItem('token')\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'activity/addActivity', {\n            name: name,\n            amount: amount,\n            date: date,\n            category_id: categoryId,\n            type: type,\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then((response) => {\n                getActivities()\n                onClose()\n            })\n    }, [getActivities, onClose, amount, categoryId, date, name, type])\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit()\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener)\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener)\n        };\n    }, [open, handleSubmit])\n\n    return (\n        <Dialog open={open ? open : false} onClose={onClose}>\n            <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                Add Activity\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Name' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <TextField label='Amount' type='number' fullWidth value={amount} onChange={(event) => { setAmount(event.target.value) }} />\n                <TextField label='Date' type='date' fullWidth value={date} InputLabelProps={{ shrink: true }} onChange={event => setDate(event.target.value)} />\n                <Box width='100%' style={{ display: 'inline-flex'}}>\n                    <TextField label='Category' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                        {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                    </TextField>\n                    <DialogActions style={{ position: 'relative', top: '10px'}}>\n                        <Button\n                            color='primary'\n                            onClick={() => {\n                                onClose()\n                                setShowEditCategory(true)\n                            }}\n                        >\n                            Add New Category\n                        </Button>\n                    </DialogActions>\n                </Box>\n                <TextField label='Type' fullWidth value={type} select onChange={event => setType(event.target.value)}>\n                    <MenuItem value={'expense'}>Expense</MenuItem>\n                    <MenuItem value={'income'}>Income</MenuItem>\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleSubmit} color='primary'>Submit</Button>\n                </DialogActions>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport theme from '../../../theme'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button, IconButton, TextField, MenuItem } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nconst useStyles = makeStyles(theme => ({\n    deleteButton: {\n        color: 'red'\n    }\n}))\n\n\nexport default ({ open, onClose, categoriesList, getCategories, getActivities }) => {\n    const [name, setName] = useState('')\n    const [categoryId, setCategoryId] = useState('')\n\n    const token = localStorage.getItem('token')\n    const handleSubmit = useCallback(() => {\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'category/addCategory', {\n            name: name\n        }, {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                setName('')\n                getCategories()\n                onClose()\n            })\n    }, [name, onClose, token, getCategories])\n\n    const handleDelete = () => {\n        axios.delete(process.env.REACT_APP_BACKEND_URL + 'category/deleteCategory', {\n            data: {\n                id: categoryId\n            },\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n            .then(() => {\n                getCategories()\n                getActivities()\n                onClose()\n            })\n    }\n\n    useEffect(() => {\n        // Add event listener that will check for enter presses and preform action if so\n        const enterPressListener = (e) => {\n            if ((e.code === \"Enter\" || e.code === \"NumpadEnter\") && open) {\n                handleSubmit();\n            }\n        };\n        document.addEventListener(\"keydown\", enterPressListener);\n\n        return () => {\n            document.removeEventListener(\"keydown\", enterPressListener);\n        };\n\n    }, [open, handleSubmit])\n\n\n    const classes = useStyles()\n    return (\n        <Dialog open={open ? open : false} onClose={onClose} fullWidth>\n            <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                Edit Categories\n                <IconButton color=\"secondary\" onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                    <CancelIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <TextField autoFocus label='Add New Category' type='text' fullWidth value={name} onChange={(event) => { setName(event.target.value) }} />\n                <DialogActions>\n                    <Button onClick={handleSubmit} color='primary'>Add</Button>\n                </DialogActions>\n\n                <TextField label='Delete Existing Category' fullWidth value={categoryId} select onChange={event => setCategoryId(event.target.value)}>\n                    {categoriesList.map(c => <MenuItem value={c.id} key={c.id}>{c.name}</MenuItem>)}\n                </TextField>\n                <DialogActions>\n                    <Button onClick={handleDelete} className={classes.deleteButton}>Delete</Button>\n                </DialogActions>\n\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\n\n\nexport default ({ submitHandler, headers, date, name, categoryName, amount, type, setDate, setName, setCategoryName, setAmount, setType }) => {\n\n    return (\n        <>\n            <Grid container spacing={3}>\n                <Grid item xs={3}>\n                    {/* empty for spacing purposes */}\n                </Grid>\n                <Grid item xs={9}>\n                    <Typography variant=\"h5\" align=\"center\" color=\"primary\">Columns found in CSV file</Typography>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Date:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setDate(e.target.value)} value={date}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Name:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setName(e.target.value)} value={name}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Category:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setCategoryName(e.target.value)} value={categoryName}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Amount:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setAmount(e.target.value)} value={amount}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography variant=\"h6\" align=\"left\" color=\"primary\">Type:</Typography>\n                </Grid>\n                <Grid item xs={9}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <Select onChange={e => setType(e.target.value)} value={type}>\n                            {headers.map((element, i) => <MenuItem key={i} value={element}>{element}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n\n            <DialogActions>\n                <Button onClick={submitHandler} size='large' color='primary'>Submit</Button>\n            </DialogActions>\n        </>\n    )\n}","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\n\nexport default ({ uploadHandler }) => {\n\n    return (\n        <>\n            <DropzoneArea\n                acceptedFiles={['.csv']}\n                filesLimit={1}\n                clearOnUnmount\n                useChipsForPreview\n                previewGridProps={{ container: { justify: 'center', spacing: 3, direction: 'row' } }}\n                showAlerts={['error', 'info']}\n                alertSnackbarProps={{\n                    anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\n                    autoHideDuration: 3000\n                }}\n                dropzoneText={\n                    <div style={{ padding: '0 25px 0 25px' }}>\n                        <Typography variant=\"h6\" align=\"center\" color=\"primary\">\n                            Drag and drop or click to upload a CSV file.\n                        </Typography>\n                        <br />\n                        <Typography align=\"justify\" >\n                            Please ensure the CSV file has the following columns:\n                        </Typography>\n                        <List dense disablePadding>\n                            <ListItem >\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Date (YYYY-MM-DD)\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Name\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Amount\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Category\" />\n                            </ListItem>\n                            <ListItem>\n                                <ListItemIcon><ArrowRightIcon /></ListItemIcon>\n                                <ListItemText primary=\"Type (income or expense)\" />\n                            </ListItem>\n                        </List>\n                    </div>\n                }\n                onChange={(file) => { uploadHandler(file) }}\n            />\n\n            <br />\n\n\n        </>\n    )\n}","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\n\nexport default ({ open, onClose, message, severity }) => {\n\n    return (\n        <Snackbar open={open} autoHideDuration={3000} onClose={onClose}>\n            <Alert onClose={onClose} severity={severity}>\n                {message}\n            </Alert>\n        </Snackbar>\n    )\n}","import React, { useState } from 'react'\nimport axios from 'axios'\nimport theme from '../../../../theme'\nimport { DialogTitle, Dialog, DialogContent, IconButton, } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport { readString } from 'react-papaparse'\nimport HeaderMatching from './HeaderMatching';\nimport Upload from './Upload'\nimport ErrorSnackbar from './ErrorSnackbar'\n\n\nexport default ({ open, onClose, getActivities, getCategories }) => {\n    const [parsedFile, setParsedFile] = useState([])\n    const [headers, setHeaders] = useState([])                      // headers from file\n    const [confirmHeaders, setConfirmHeaders] = useState(false)     // display header confirmation form\n\n    // headers\n    const [date, setDate] = useState('')\n    const [name, setName] = useState('')\n    const [categoryName, setCategoryName] = useState('')\n    const [amount, setAmount] = useState('')\n    const [type, setType] = useState('')\n\n    // snackbars\n    const [emptyCells, setEmptyCells] = useState(false)\n    const [duplicateCol, setDuplicateCol] = useState(false)\n    const [failedToReadFile, setFailedToReadFile] = useState(false)\n    const [noFile, setNoFile] = useState(false)\n    const [headerMismatch, setHeaderMismatch] = useState(false)\n    const [DuplicateHeader, setDuplicateHeader] = useState(false)\n    const [UploadError, setUploadError] = useState(false)\n    const [UploadSuccess, setUploadSuccess] = useState(false)\n\n\n    const uploadHandler = (file) => {\n\n\n        if (file.length > 0) {\n            // reading headers\n            const reader = new FileReader()\n            // file -> string\n            reader.readAsText(file[0])\n            // read as a string\n            reader.onload = (event) => {\n                const fileContent = event.target.result\n                const parseResults = readString(fileContent)     // papaparse\n                let safeToContinue = true\n                \n\n                // remove last line if empty\n                if (parseResults.data[parseResults.data.length - 1 ][0] === \"\"){\n                    parseResults.data.pop()\n                }\n\n                // check for empty cells\n                parseResults.data.forEach(row => {\n                    if (row.indexOf('') !== -1) {\n                        setEmptyCells(true)\n                        safeToContinue = false\n                    }\n                })\n\n                // check for duplicates in headers\n                if (new Set(parseResults.data[0]).size !== parseResults.data[0].length) {\n                    setDuplicateCol(true)\n                    safeToContinue = false\n                }\n\n                if (safeToContinue) {\n                    setHeaders(parseResults.data[0])\n                    setDate(parseResults.data[0][0] ? parseResults.data[0][0] : '')\n                    setName(parseResults.data[0][1] ? parseResults.data[0][1] : '')\n                    setCategoryName(parseResults.data[0][2] ? parseResults.data[0][2] : '')\n                    setAmount(parseResults.data[0][3] ? parseResults.data[0][3] : '')\n                    setType(parseResults.data[0][4] ? parseResults.data[0][4] : '')\n                    setParsedFile(parseResults.data)\n                    setConfirmHeaders(true)\n                }\n            }\n\n            reader.onerror = (event) => {\n                setFailedToReadFile(true)\n            }\n        }\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n\n        if (parsedFile.length === 0) {\n            setNoFile(true)\n        }\n        // if headers are not yet mapped\n        else if (!date || !name || !categoryName || !amount || !type) {\n            setHeaderMismatch(true)\n        }\n        // duplicate matches\n        else if (new Set([date, name, categoryName, amount, type]).size !== 5) {\n            setDuplicateHeader(true)\n        }\n        else {\n            // mapping columns to columns found in csv file\n            const map = {\n                date: headers.indexOf(date),\n                name: headers.indexOf(name),\n                categoryName: headers.indexOf(categoryName),\n                amount: headers.indexOf(amount),\n                type: headers.indexOf(type),\n            }\n\n            const data = {\n                data: parsedFile,\n                map: map,\n            }\n            const token = localStorage.getItem('token')\n\n            // sending to server\n            axios.post(process.env.REACT_APP_BACKEND_URL + 'activity/uploadCSV', data, {\n                headers: { Authorization: `JWT ${token}` }\n            })\n                .then(res => {\n                    console.log(res.data.message)\n                    setUploadSuccess(true)\n                    getActivities()\n                    getCategories()\n                    onClose()\n                })\n                .catch(error => {\n                    setUploadError(true)\n                    getActivities()\n                    getCategories()\n                    onClose()\n                })\n        }\n\n    }\n\n    return (\n        <>\n            <Dialog \n                open={open ? open : false}\n                onClose={() => {\n                    // unmount HeaderMatching to remove file\n                    setConfirmHeaders(false)\n                    onClose()\n                }}\n            >\n                <DialogTitle style={{ backgroundColor: theme.palette.primary.main, color: \"white\" }}>\n                    {confirmHeaders ? 'Please match the following' : 'Upload CSV'}\n                    <IconButton onClick={onClose} style={{ position: 'absolute', top: 0, right: 0 }}>\n                        <CancelIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    {\n                        confirmHeaders ?\n                            <HeaderMatching\n                                headers={headers}\n                                date={date} name={name} categoryName={categoryName} amount={amount} type={type}\n                                setDate={setDate} setName={setName} setCategoryName={setCategoryName} setAmount={setAmount} setType={setType}\n                                submitHandler={submitHandler}\n                            />\n                            :\n                            <Upload uploadHandler={uploadHandler} />\n                    }\n                </DialogContent>\n            </Dialog>\n            <ErrorSnackbar \n                open={emptyCells} onClose={() => { setEmptyCells(false) }} severity={'error' }\n                message={'Empty cells detected.'}\n            />\n            <ErrorSnackbar\n                open={duplicateCol} onClose={() => { setDuplicateCol(false) }} severity={'error'}\n                message={'Duplicate columns detected.'}\n            />\n            <ErrorSnackbar\n                open={failedToReadFile} onClose={() => { setFailedToReadFile(false) }} severity={'error'}\n                message={'Failed to read file.'}\n            />\n\n            <ErrorSnackbar\n                open={noFile} onClose={() => { setNoFile(false) }} severity={'error'}\n                message={'No file found.'}\n            />\n            <ErrorSnackbar\n                open={headerMismatch} onClose={() => { setHeaderMismatch(false) }} severity={'error'}\n                message={'Headers are not all matched.'}\n            />\n            <ErrorSnackbar\n                open={DuplicateHeader} onClose={() => { setDuplicateHeader(false) }} severity={'error'}\n                message={'Duplicate header match detected.'}\n            />\n            <ErrorSnackbar\n                open={UploadError} onClose={() => { setUploadError(false) }} severity={'error'}\n                message={'Upload error.'}\n            />\n            <ErrorSnackbar\n                open={UploadSuccess} onClose={() => { setUploadSuccess(false) }} severity={'success'}\n                message={'CSV file uploaded successfully!'}\n            />\n\n        </>\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Nav from './Components/Nav'\nimport ActivityTable from './Components/Data/ActivityTable'\nimport { UserContext } from '../UserContext'\nimport { Button, ButtonGroup, Typography, Box, CircularProgress } from '@material-ui/core'\nimport AddActivity from './Components/Data/AddActivity'\nimport EditCategory from './Components/Data/EditCategory'\nimport ImportCSV from './Components/Data/ImportCSV/ImportCSV'\n\nexport default () => {\n    const { user } = useContext(UserContext)\n    const [loading, setLoading] = useState(true)\n    const [activitiesList, setActivitiesList] = useState([])\n    const [categoriesList, setCategoriesList] = useState([])\n\n    // dialogs\n    const [showAddActivity, setShowAddActivity] = useState(false)\n    const [showEditCategory, setShowEditCategory] = useState(false)\n    const [showUploadCSV, setShowUploadCSV] = useState(false)\n\n    const getActivities = () => {\n        setLoading(true)\n        const token = localStorage.getItem('token')\n        axios.get(process.env.REACT_APP_BACKEND_URL + 'activity/getActivities', {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        }).then((response) => {\n            setActivitiesList(response.data)\n            setLoading(false)\n        })\n    }\n\n    const getCategories = () => {\n        setLoading(true)\n        const token = localStorage.getItem('token')\n        axios.get(process.env.REACT_APP_BACKEND_URL + 'category/getCategories', {\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        }).then((response) => {\n            setCategoriesList(response.data)\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        getActivities()\n        getCategories()\n    }, [user])\n\n    if (!user) {\n        return (\n            <>\n                <Nav />\n                {\n                    // if token exists show spinner, else display message\n                    localStorage.getItem('token') ?\n                        <Box align=\"center\">\n                            <CircularProgress size={100} color=\"primary\" />\n                        </Box>\n                        :\n                        <Typography>You must be logged in to access this page.</Typography>\n\n                }\n            </>\n        )\n    }\n\n    return (\n        <>\n            <Nav />\n            <Box align=\"center\">\n                <ActivityTable activitiesList={activitiesList} categoriesList={categoriesList} getActivities={getActivities} loading={loading} />\n            </Box>\n            <br />\n            <Box align=\"center\">\n                <div style={{ maxWidth: 1000 }}>\n                    <ButtonGroup variant=\"contained\" size=\"large\" color=\"primary\" fullWidth>\n                        <Button onClick={() => { setShowEditCategory(true) }} key={'editCategory'}>Edit Categories</Button>\n                        <Button onClick={() => { setShowAddActivity(true) }} key={'addActivity'}>Add Activity</Button>\n                        <Button onClick={() => { setShowUploadCSV(true) }} key={'uploadCSV'}>Upload from CSV</Button>\n                    </ButtonGroup>\n                </div>\n            </Box>\n            <AddActivity categoriesList={categoriesList} open={showAddActivity} setShowEditCategory={setShowEditCategory} getActivities={getActivities} onClose={() => setShowAddActivity(false)} />\n            <EditCategory categoriesList={categoriesList} open={showEditCategory} getCategories={getCategories} getActivities={getActivities} onClose={() => setShowEditCategory(false)} />\n            <ImportCSV open={showUploadCSV} onClose={() => { setShowUploadCSV(false) }} getActivities={getActivities} getCategories={getCategories} />\n        </>\n    )\n}","import React from 'react'\nimport Nav from './Components/Nav'\nimport { Typography } from '@material-ui/core'\n\nexport default () => {\n    return (\n        <>\n            <Nav />\n            <Typography variant='h1' align='center'>Welcome to Budget Tracker</Typography>\n            <Typography variant='h3' align='center'>Log in or register to get started!</Typography>\n            \n        </>\n    )\n}\n","import React, { useEffect, useContext } from 'react'\nimport axios from 'axios'\nimport { UserContext } from '../../../UserContext'\n\n// check if token exists\nexport default () => {\n    const {user, setUser} = useContext(UserContext)\n\n    useEffect( () => {\n        const token = localStorage.getItem('token')\n        if(!user && token){\n            axios.get(process.env.REACT_APP_BACKEND_URL + 'auth/findUser', {\n                headers: { Authorization: `JWT ${token}` }\n            }).then(response => {\n                setUser(response.data.auth);\n            })\n        } \n    }, [user, setUser])\n\n    return(\n        <>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { Switch, Route, Redirect } from \"react-router-dom\"\nimport Dashboard from './views/Dashboard'\nimport LandingPage from './views/LandingPage'\nimport { UserContext } from './UserContext'\nimport Init from './views/Components/Auth/Init'\n\nexport default () => {\n\n  const [user, setUser] = useState(null)\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <Init />\n      <Switch>\n        <Route exact path=\"/\">\n          {user ? <Redirect to='/dashboard'/> : <LandingPage />}\n        </Route>\n        <Route path=\"/home\" render={() => <LandingPage />} />\n        <Route path=\"/dashboard\" render={() => <Dashboard />} />\n        {\n          user ?\n            <Route render={() => <Redirect to=\"/dashboard\" />} /> :\n            <Route render={() => <Redirect to=\"/\" />} />\n        }\n      </Switch>\n    </UserContext.Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <Router>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}