{"version":3,"sources":["views/Components/Login.js","views/Components/Register.js","views/Components/Nav.js","views/Home.js","views/Dashboard.js","App.js","index.js"],"names":["useState","email","setEmail","password","setPassword","type","name","value","onChange","event","target","onClick","preventDefault","axios","post","process","then","response","console","log","confirmPassword","setConfirmPassword","alert","to","exact","Nav","Login","Register","path","render","Home","Dashboard","ReactDOM","App","document","getElementById"],"mappings":"sOAGe,aAAO,IAAD,EAESA,mBAAS,IAFlB,mBAEVC,EAFU,KAEHC,EAFG,OAGeF,mBAAS,IAHxB,mBAGVG,EAHU,KAGAC,EAHA,KAiBjB,OACI,6BACI,8BACI,2BACIC,KAAK,OACLC,KAAK,QACLC,MAAON,EACPO,SAAU,SAACC,GAAYP,EAASO,EAAMC,OAAOH,UAGjD,2BACIF,KAAK,WACLC,KAAK,WACLC,MAAOJ,EACPK,SAAU,SAACC,GAAYL,EAAYK,EAAMC,OAAOH,UAGpD,4BAAQI,QA7BA,SAACF,GACjBA,EAAMG,iBAENC,IAAMC,KAAKC,gEAAkD,CACzDd,MAAOA,EACPE,SAAUA,IAETa,MAAK,SAACC,GACHC,QAAQC,IAAIF,QAqBZ,YClCD,aAAO,IAAD,EAESjB,mBAAS,IAFlB,mBAEVC,EAFU,KAEHC,EAFG,OAGeF,mBAAS,IAHxB,mBAGVG,EAHU,KAGAC,EAHA,OAI6BJ,mBAAS,IAJtC,mBAIVoB,EAJU,KAIOC,EAJP,KAuBjB,OACI,6BACI,8BACI,2BACIhB,KAAK,OACLC,KAAK,QACLC,MAAON,EACPO,SAAU,SAACC,GAAYP,EAASO,EAAMC,OAAOH,UAGjD,2BACIF,KAAK,WACLC,KAAK,WACLC,MAAOJ,EACPK,SAAU,SAACC,GAAYL,EAAYK,EAAMC,OAAOH,UAGpD,2BACIF,KAAK,WACLC,KAAK,WACLC,MAAOa,EACPZ,SAAU,SAACC,GAAYY,EAAmBZ,EAAMC,OAAOH,UAG3D,4BAAQI,QAzCG,SAACF,GACpBA,EAAMG,iBAEFT,IAAaiB,EACbP,IAAMC,KAAKC,mEAAqD,CAC5Dd,MAAOA,EACPE,SAAUA,IAETa,MAAK,SAACC,GACHC,QAAQC,IAAIF,MAIpBK,MAAM,6BA4BF,e,OC/CD,aACX,OACI,oCACI,kBAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,GAArB,QACA,kBAAC,IAAD,CAASD,GAAG,cAAZ,eCFG,aACX,OACI,oCACI,kBAACE,EAAD,MACA,wCACA,kBAACC,EAAD,MACA,kBAACC,EAAD,QCTG,aACX,OACI,oCACI,kBAACF,EAAD,MACA,2CCDG,aACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,OAAK,EAACI,KAAK,IAAIC,OAAQ,kBAAM,kBAACC,EAAD,SACpC,kBAAC,IAAD,CAAOF,KAAK,aAAaC,OAAQ,kBAAM,kBAACE,EAAD,WCJ7CC,IAASH,OACP,kBAAC,IAAD,KACE,kBAACI,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6b75ad84.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n\nexport default () => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleLogin = (event) => {\n        event.preventDefault()\n\n        axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/login', {\n            email: email,\n            password: password\n        })\n            .then((response) => {\n                console.log(response)\n            })\n    }\n\n    return (\n        <div>\n            <form>\n                <input\n                    type='text'\n                    name='email'\n                    value={email}\n                    onChange={(event) => { setEmail(event.target.value) }}\n                />\n\n                <input\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={(event) => { setPassword(event.target.value) }}\n                />\n\n                <button onClick={handleLogin}>Login</button>\n            </form>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport axios from 'axios'\n\nexport default () => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const handleRegister = (event) => {\n        event.preventDefault()\n\n        if (password === confirmPassword) {\n            axios.post(process.env.REACT_APP_BACKEND_URL + 'auth/register', {\n                email: email,\n                password: password\n            })\n                .then((response) => {\n                    console.log(response)\n                })\n        }\n        else {\n            alert('Password does not match')\n        }\n    }\n\n    return (\n        <div>\n            <form>\n                <input\n                    type='text'\n                    name='email'\n                    value={email}\n                    onChange={(event) => { setEmail(event.target.value) }}\n                />\n\n                <input\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={(event) => { setPassword(event.target.value) }}\n                />\n\n                <input\n                    type='password'\n                    name='password'\n                    value={confirmPassword}\n                    onChange={(event) => { setConfirmPassword(event.target.value) }}\n                />\n\n                <button onClick={handleRegister}>Register</button>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport default () => {\n    return (\n        <>\n            <NavLink to='/' exact>Home</NavLink>\n            <NavLink to='/dashboard'>Dashboard</NavLink>\n        </>\n    )\n}","import React from 'react'\nimport Login from './Components/Login'\nimport Register from './Components/Register'\nimport Nav from './Components/Nav'\n\nexport default () => {\n    return (\n        <>\n            <Nav />\n            <h1>Homepage</h1>\n            <Login />\n            <Register />\n            \n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport Nav from './Components/Nav'\nexport default () => {\n    return (\n        <>\n            <Nav />\n            <h1>Dashboard</h1>\n        </>\n    )\n}","import React from 'react'\nimport { Switch, Route, Redirect } from \"react-router-dom\"\nimport Home from './views/Home'\nimport Dashboard from './views/Dashboard'\n\nexport default () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" render={() => <Home />} />\n      <Route path=\"/dashboard\" render={() => <Dashboard />} />\n    </Switch>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}